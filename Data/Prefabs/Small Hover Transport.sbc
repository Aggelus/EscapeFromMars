<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Prefabs>
    <Prefab xsi:type="MyObjectBuilder_PrefabDefinition">
      <Id Type="MyObjectBuilder_PrefabDefinition" Subtype="Small Hover Transport" />
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>82544192155106674</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="10132.431506346682" y="60353.272490587653" z="4903.9141607450565" />
            <Forward x="0.0282451157" y="0.0607281625" z="-0.997754633" />
            <Up x="0.189713627" y="0.9796856" z="0.06499894" />
            <Orientation>
              <X>0.03159462</X>
              <Y>-0.0111563746</Y>
              <Z>-0.09570256</Z>
              <W>0.994845867</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>73707420443805604</EntityId>
              <Min x="-4" y="10" z="15" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Atmospheric Thrusters 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>133797494800047879</EntityId>
              <Min x="4" y="10" z="15" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Atmospheric Thrusters 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="6" z="6" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="7" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="8" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="9" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="10" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="11" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="12" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="13" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="14" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="15" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="16" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="17" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="18" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="19" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="4" y="7" z="8" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="11" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="7" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="14" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>87438773274788701</EntityId>
              <Min x="-3" y="6" z="16" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Wheel Suspensions 6 [SLED] [LEFT] [BACK]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>136674028026031436</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Damping>0.9</Damping>
              <Strength>0.14</Strength>
              <Propulsion>true</Propulsion>
              <Friction>0.8</Friction>
              <Power>0.2</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>80</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>93898604132165277</EntityId>
              <Min x="-3" y="6" z="8" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Wheel Suspensions 8 [SLED] [LEFT] [FRONT]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>122223308090973455</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Damping>0.9</Damping>
              <Strength>0.14</Strength>
              <Propulsion>true</Propulsion>
              <Friction>0.8</Friction>
              <Power>0.2</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>80</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-4" y="7" z="8" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>117879125396544121</EntityId>
              <Min x="1" y="8" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.2" y="-0.22" z="-0.45" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Timer Block [WCCT]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>wcct</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>138405796844652104</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <Delay>10000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="10" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="7" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="9" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="6" z="10" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="6" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="15" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="7" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="10" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-3" y="7" z="8" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="6" z="16" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="17" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>89626850144875770</EntityId>
              <Min x="3" y="6" z="16" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Wheel Suspensions 9 [SLED] [RIGHT]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>76201223812669558</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Damping>0.9</Damping>
              <Strength>0.14</Strength>
              <Propulsion>true</Propulsion>
              <Friction>0.8</Friction>
              <Power>0.2</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>80</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="6" z="16" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="6" z="10" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="15" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="15" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="2" y="7" z="21" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-2" y="7" z="20" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>131209713957759418</EntityId>
              <Min x="-1" y="7" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Gyroscope 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="6" z="15" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>101956342857544837</EntityId>
              <Min x="3" y="6" z="14" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Wheel Suspensions 10 [SLED] [RIGHT]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>141156404408062612</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Damping>0.9</Damping>
              <Strength>0.14</Strength>
              <Propulsion>true</Propulsion>
              <Friction>0.8</Friction>
              <Power>0.2</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>80</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="7" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="11" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="6" z="15" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="15" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="7" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="7" z="15" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="7" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="18" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="16" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="18" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="6" z="10" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="3" y="7" z="8" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>100035198863229415</EntityId>
              <Min x="-3" y="6" z="14" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Wheel Suspensions 7 [SLED] [LEFT]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>138874447227176011</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Damping>0.9</Damping>
              <Strength>0.14</Strength>
              <Propulsion>true</Propulsion>
              <Friction>0.8</Friction>
              <Power>0.2</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>80</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="6" z="19" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="19" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="2" y="7" z="20" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="-2" y="7" z="21" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="7" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="14" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="7" z="15" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="7" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="16" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="7" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="17" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>73272335086380066</EntityId>
              <Min x="-1" y="7" z="17" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Large Atmospheric Thruster 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="15" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>77282696789219701</EntityId>
              <Min x="3" y="6" z="8" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Wheel Suspensions 11 [SLED] [RIGHT] [FRONT]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>132879138246660467</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Damping>0.9</Damping>
              <Strength>0.14</Strength>
              <Propulsion>true</Propulsion>
              <Friction>0.8</Friction>
              <Power>0.2</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>80</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="7" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="15" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="7" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="7" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="7" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>99495760623732432</EntityId>
              <Min x="1" y="7" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Gyroscope 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="9" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="6" z="7" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="-5" y="7" z="19" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="12" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="10" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="11" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="8" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="2" y="7" z="19" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-2" y="7" z="19" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="17" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="-5" y="6" z="19" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="5" y="6" z="19" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="18" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="18" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="9" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="18" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="10" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="7" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="7" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="8" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="17" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="16" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="5" y="6" z="6" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="18" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="9" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="5" y="7" z="19" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="15" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="8" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="2" y="7" z="18" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="-5" y="6" z="6" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="5" y="7" z="6" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundCorner</SubtypeName>
              <Min x="-5" y="7" z="6" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="16" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="16" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="15" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="15" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="9" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="9" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="14" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="13" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="12" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="11" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="15" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="9" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="14" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="7" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="10" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="10" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="7" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="11" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="10" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="16" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="8" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="9" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="6" z="10" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="6" z="13" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-2" y="7" z="18" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="12" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="16" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="15" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="14" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="17" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="17" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="16" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="15" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="13" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="14" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="-5" y="7" z="12" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorRoundSlope</SubtypeName>
              <Min x="5" y="7" z="13" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-2" y="7" z="7" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="2" y="7" z="7" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="6" z="6" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="6" z="6" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="7" z="6" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="7" z="6" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="7" z="6" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="6" z="20" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="6" z="20" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="6" z="20" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>83884822050418852</EntityId>
              <Min x="0" y="7" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Remote Control</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>2</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints>
                <MyObjectBuilder_AutopilotWaypoint>
                  <Coords>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                  </Coords>
                  <Name>Name</Name>
                  <Actions />
                  <Indexes />
                </MyObjectBuilder_AutopilotWaypoint>
              </Waypoints>
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Beacon">
              <SubtypeName>SmallBlockBeacon</SubtypeName>
              <EntityId>136051359618631996</EntityId>
              <Min x="0" y="8" z="10" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Beacon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>100</BroadcastRadius>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>140916850509421746</EntityId>
              <Min x="-1" y="8" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Timer Block [WCCS]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>wccs</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>80700564372009956</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>wccs</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>116722331071530135</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <Delay>1200</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="9" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
              <Min x="-2" y="8" z="8" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
              <Min x="2" y="8" z="8" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>103852393042818168</EntityId>
              <Min x="-1" y="7" z="11" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Medium Cargo Container 15</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockMediumContainer</SubtypeName>
              <EntityId>81689100445067623</EntityId>
              <Min x="-1" y="7" z="14" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Medium Cargo Container 16</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="9" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="9" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="9" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="9" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="2" y="9" z="8" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="-2" y="9" z="8" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="9" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="9" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="9" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="9" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="9" z="12" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="9" z="13" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
              <SubtypeName>SmallGatlingTurret</SubtypeName>
              <EntityId>76949315906037667</EntityId>
              <Min x="-2" y="10" z="11" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>20</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_25x184mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.084</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Gatling Turret</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>20</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                      <SubtypeName>NATO_25x184mm</SubtypeName>
                      <ProjectilesCount>0</ProjectilesCount>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.084</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
              <RemainingAmmo>0</RemainingAmmo>
              <Target>0</Target>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>0</LastShootTime>
              </GunBase>
              <EnableIdleRotation>true</EnableIdleRotation>
              <PreviousIdleRotationState>true</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="9" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="10" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-2" y="10" z="16" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="10" z="17" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="9" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>137894032051293884</EntityId>
              <Min x="-2" y="10" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Spotlight 8</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0.215686277</ColorRed>
              <ColorGreen>0.270588249</ColorGreen>
              <Falloff>1</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>110161125612014760</EntityId>
              <Min x="2" y="10" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Spotlight 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0.215686277</ColorRed>
              <ColorGreen>0.270588249</ColorGreen>
              <Falloff>1</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>90104528931196076</EntityId>
              <Min x="2" y="8" z="15" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Battery 14</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>1.08</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="10" z="17" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>143166029405792364</EntityId>
              <Min x="-4" y="8" z="15" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Battery 15</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>1.08</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="14" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallLCDPanel</SubtypeName>
              <EntityId>110957099496268579</EntityId>
              <Min x="-3" y="8" z="12" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>LCD Panel 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallLCDPanel</SubtypeName>
              <EntityId>108465780553537472</EntityId>
              <Min x="3" y="8" z="12" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>LCD Panel 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="10" z="9" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="10" z="10" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="10" z="10" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="10" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="10" z="16" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="10" z="17" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="10" z="17" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="10" z="16" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="2" y="10" z="16" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="-3" y="8" z="8" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="3" y="8" z="8" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
              <Min x="-3" y="8" z="9" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
              <Min x="3" y="8" z="9" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="-3" y="9" z="9" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="3" y="9" z="9" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="-4" y="8" z="9" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="4" y="8" z="9" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="8" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="8" z="10" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-4" y="8" z="10" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="4" y="8" z="10" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-3" y="9" z="10" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="3" y="9" z="10" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="8" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="8" z="11" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="4" y="8" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-4" y="8" z="11" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="3" y="9" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-3" y="9" z="11" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>101781546336488543</EntityId>
              <Min x="2" y="8" z="18" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Atmospheric Thrusters 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>105309309173316622</EntityId>
              <Min x="-4" y="8" z="18" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Atmospheric Thrusters 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>133034956579737680</EntityId>
              <Min x="2" y="9" z="18" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Atmospheric Thrusters 12</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>128000680172918657</EntityId>
              <Min x="-4" y="9" z="18" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Atmospheric Thrusters 13</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="10" z="9" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="10" z="9" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="10" z="10" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="2" y="8" z="7" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="-2" y="8" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
              <Min x="-2" y="9" z="9" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
              <Min x="2" y="9" z="9" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>95149039873842726</EntityId>
              <Min x="2" y="8" z="19" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Spotlight 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0.215686277</ColorRed>
              <ColorGreen>0.270588249</ColorGreen>
              <Falloff>1</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>89876694627134202</EntityId>
              <Min x="-2" y="8" z="19" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Spotlight 9</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0.215686277</ColorRed>
              <ColorGreen>0.270588249</ColorGreen>
              <Falloff>1</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="2" y="9" z="19" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-2" y="9" z="19" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-3" y="8" z="19" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="3" y="8" z="19" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="3" y="9" z="19" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner</SubtypeName>
              <Min x="-3" y="9" z="19" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>80700564372009956</EntityId>
              <Min x="0" y="7" z="9" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.2" y="-0.22" z="-0.45" />
              <BuiltBy>144115188075855898</BuiltBy>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">[WORLD]
MaxWorldMps=100

[GRIDS]
NoFollow=NOFOLLOW
BlockIgnore=!WCC
OrientationBlockContains=[NAV]
OrientationBlockNamed=Craft Remote Control
GyroIgnore=!NAV

[LOGGING]
TextPanelReport=Craft Report
StatusName=Wico Craft Status
LongStatus=Wico Craft Log
RangeReport=[RANGE]
SledReport=[SMREPORT]
GPSTag=[GPS]

[CONNECTORS]
BaseConnector=[BASE]
DockConnector=[DOCK]

[CAMERAS]
CameraViewOnly=[VIEW]

[NAV]
DTMDebug=False
CameraCollision=False
SensorCollision=True
NAVEmulateOld=True

</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>PB Wico Craft NAV</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>/* Wico Craft NAV Control sub-module
	* 
    * Commands:
    * XXX
    * 
    * 
    * 
	* Handles MODES:
	* MODE_DOCKED
	* MODE_LAUNCH
	* MODE_RELAUNCH
    * MODE_SLEDMOVE
    * MODE_ARRIVEDTARGET
    * 
    * 
	* 
	* 2.0.4 Upate to new save format
	*  .04A Camera Scans for Obstacles...!!!one
	*  
	*  2.1 Use new blockInint and localgrids
	*  
	*  .1g Add Docked
	*  copy from SLED PATROL
	*  .1h fixed yaw only gyromain
	*  .1i tested in space. Added !NAV to gyro check
	*  .1j add doroll
	*  .1k use (and fix/test) IMyGyroControl
	2.2: Update for 1.72

    2.9 Copy from Sled Dock 2.2

    Needs LOTS of updates.

    3.0 Move code into 3.0
    
    3.0A Start NAV processing: W and O
    3.0B Add D, S, C
    3.0C Add arrivedtarget

    3.0D 110517  search order for text panels

    3.1 Version for PB Updates SE 1.185
    o Added support for GPS-formatted nav locations
        Ex:  W GPS:Wicorel #1:53970.01:128270.31:-123354.92:

    3.1a
    remove blockApplyActions() and make routines for each block type that needs it

    3.2 Collision Avoidance from Docking module for thruster travel

    Added Rotors

    3.2A travelmovement calculating target speeds and distances with more precision

    3.2B Sled Testing

    3.2C INI Save
        fix bug in serialize wrting z,y z, instead of x,y,z (oops)
 
    3.2D INI WCCM 01062018

    3.2E Major INI settings

    3.3 Lists of text panels
    Only output to textpanels and end of run

    3.3A Redo Serialize

    3.4 Sled testing

	* TODO: 
	*/
string a="Wico Craft";string b="NAV";string c="3.4";const string d="0.00";void e(nK f){ga(f);}void g(nK
f){fZ(f);}void h(){}void i(){iq();}void j(bool k=false){jz(@is);nJ();gn(gc);gn(gd);if(ni is IMyRemoteControl)
((IMyRemoteControl)ni).SetAutoPilotEnabled(false);if(ni is IMyShipController)((IMyShipController)ni).DampenersOverride
=true;}m l=new m();class m{public const Base6Directions.Direction n=Base6Directions.Direction.Forward;
public const Base6Directions.Direction o=Base6Directions.Direction.Backward;public const Base6Directions.Direction
p=Base6Directions.Direction.Left;public const Base6Directions.Direction q=Base6Directions.Direction.Right;
public const Base6Directions.Direction Up=Base6Directions.Direction.Up;public const Base6Directions.Direction
r=Base6Directions.Direction.Down;public float s=30.0f;public List&lt;IMyTerminalBlock&gt;t=new List&lt;IMyTerminalBlock&gt;();
Base6Directions.Direction u=Up;Base6Directions.Direction v=p;Base6Directions.Direction w=n;Base6Directions.Direction
x=Up;Base6Directions.Direction y=p;Base6Directions.Direction z=n;public void A(List&lt;IMyTerminalBlock&gt;
B){t=B;if(t.Count&gt;0)s=t[0].GetMaximum&lt;float&gt;("Yaw");}public void A(List&lt;IMyGyro&gt;B){t.Clear();if(B==null)
return;for(int i=0;i&lt;B.Count;i++){t.Add((B[i]as IMyTerminalBlock));}if(t.Count&gt;0)s=t[0].GetMaximum&lt;float&gt;("Yaw");
}public void A(IMyProgrammableBlock PB,IMyGridTerminalSystem C){t.Clear();if((C!=null)&amp;&amp;(PB!=null))C.GetBlocksOfType&lt;IMyGyro&gt;(t,
x=&gt;((x.CubeGrid==PB.CubeGrid)&amp;&amp;x.IsFunctional));if(t.Count&gt;0)s=t[0].GetMaximum&lt;float&gt;("Yaw");}public
void D(IMyTerminalBlock E,Base6Directions.Direction F=n,Base6Directions.Direction G=Up){if(Base6Directions.GetAxis(F)
==Base6Directions.GetAxis(G))G=Base6Directions.GetPerpendicular(F);if(E==null){}else{Vector3 H=Base6Directions.GetVector(F);
Vector3.TransformNormal(ref H,E.Orientation,out H);F=Base6Directions.GetDirection(ref H);H=Base6Directions.GetVector(G);
Vector3.TransformNormal(ref H,E.Orientation,out H);G=Base6Directions.GetDirection(ref H);}x=G;z=F;y=
Base6Directions.GetLeft(x,z);}public void I(bool J){for(int i=0;i&lt;t.Count;i++){t[i].SetValueBool("Override",
J);}}public void I(int K,bool J){if(K&lt;t.Count){t[K].SetValueBool("Override",J);}}public void L(float
M){for(int i=0;i&lt;t.Count;i++){t[i].SetValueFloat("Power",M);}}public void L(int K,float M){if(K&lt;t.Count)
{t[K].SetValueFloat("Power",M);}}public void N(bool O){for(int i=0;i&lt;t.Count;i++){(t[i]as IMyGyro).Enabled
=O;}}public void N(int K,bool O){if(K&lt;t.Count){(t[K]as IMyGyro).Enabled=O;}}public void P(bool Q){for
(int i=0;i&lt;t.Count;i++){t[i].SetValueBool("ShowOnHUD",Q);}}public void P(int K,bool Q){if(K&lt;t.Count)
{t[K].SetValueBool("ShowOnHUD",Q);}}void R(Base6Directions.Direction S,out string T,out float U){T="Yaw";
U=-1.0f;if(Base6Directions.GetAxis(u)==Base6Directions.GetAxis(S)){if(u==S)U=1.0f;}if(Base6Directions.GetAxis(v)
==Base6Directions.GetAxis(S)){T="Pitch";if(v==S)U=1.0f;}if(Base6Directions.GetAxis(w)==Base6Directions.GetAxis(S))
{T="Roll";if(w==S){}else U=1.0f;}}public void V(float W){for(int i=0;i&lt;t.Count;i++){string T;float U;
Vector3 H=Base6Directions.GetVector(Up);Vector3.TransformNormal(ref H,t[i].Orientation,out H);u=Base6Directions.GetDirection(ref
H);R(x,out T,out U);t[i].SetValueFloat(T,U*W);}}public void X(float Y){for(int i=0;i&lt;t.Count;i++){string
T;float U;Vector3 H=Base6Directions.GetVector(p);Vector3.TransformNormal(ref H,t[i].Orientation,out H);
v=Base6Directions.GetDirection(ref H);R(y,out T,out U);t[i].SetValueFloat(T,U*Y);}}public void Z(float
ba){for(int i=0;i&lt;t.Count;i++){string T;float U;Vector3 H=Base6Directions.GetVector(n);Vector3.TransformNormal(ref
H,t[i].Orientation,out H);w=Base6Directions.GetDirection(ref H);R(z,out T,out U);t[i].SetValueFloat(T,
U*ba);}}public void bb(float W,float Y,float ba){for(int i=0;i&lt;t.Count;i++){string T;float U;Vector3
H=Base6Directions.GetVector(n);Vector3.TransformNormal(ref H,t[i].Orientation,out H);w=Base6Directions.GetDirection(ref
H);H=Base6Directions.GetVector(p);Vector3.TransformNormal(ref H,t[i].Orientation,out H);v=Base6Directions.GetDirection(ref
H);H=Base6Directions.GetVector(Up);Vector3.TransformNormal(ref H,t[i].Orientation,out H);u=Base6Directions.GetDirection(ref
H);R(x,out T,out U);t[i].SetValueFloat(T,U*W);R(y,out T,out U);t[i].SetValueFloat(T,U*Y);R(z,out T,out
U);t[i].SetValueFloat(T,U*ba);}}}double bc(Vector3D bd,IMyTerminalBlock be){double bf=0;bool bg=false;
MatrixD bh=bx(be);Vector3D bi=be.GetPosition();Vector3D bj=bi+1.0*Vector3D.Normalize(bh.Backward);Vector3D
bk=bi+1.0*Vector3D.Normalize(bh.Right);Vector3D bl=bi-1.0*Vector3D.Normalize(bh.Right);double bm=br(bk,
bd);double bn=br(bl,bd);double bo=br(bk,bl);double bp=Vector3D.DistanceSquared(bi,bd);double bq=Vector3D.DistanceSquared(bj,
bd);bg=bp&lt;bq;bf=(bn-bm)/bo;Echo("calc Angle="+Math.Round(bf,5));if(!bg){bf+=(bf&lt;0)?-1:1;}return bf;}
double br(Vector3D a,Vector3D b){return Vector3D.Distance(a,b);}MatrixD bs(IMyCubeGrid bt){Vector3D bu
=bt.GridIntegerToWorld(new Vector3I(0,0,0));Vector3D bv=bt.GridIntegerToWorld(new Vector3I(0,1,0))-bu;
Vector3D bw=bt.GridIntegerToWorld(new Vector3I(0,0,1))-bu;return MatrixD.CreateScale(bt.GridSize)*MatrixD.CreateWorld(bu,
-bw,bv);}MatrixD bx(IMyCubeBlock blk){Matrix bz;blk.Orientation.GetMatrix(out bz);return bz*MatrixD.CreateTranslation(((Vector3D)new
Vector3D(blk.Min+blk.Max))/2.0)*bs(blk.CubeGrid);}bool bA(double bB,string bC="Roll",float bD=-1,float
bE=1f){float bF=0;IMyGyro K=nr[0]as IMyGyro;float bG=K.GetMaximum&lt;float&gt;(bC);if(bD&gt;0)bG=bD;if(Math.Abs(bB)
&gt;1.0){bF=bG*(float)(bB)*bE;}else if(Math.Abs(bB)&gt;.7){bF=bG*(float)(bB)/4;}else if(Math.Abs(bB)&gt;0.5){
bF=0.11f*Math.Sign(bB);}else if(Math.Abs(bB)&gt;0.1){bF=0.11f*Math.Sign(bB);}else if(Math.Abs(bB)&gt;0.01)
{bF=0.11f*Math.Sign(bB);}else if(Math.Abs(bB)&gt;0.001){bF=0.09f*Math.Sign(bB);}else bF=0;l.V(bF);if(Math.Abs(bB)
&lt;ns){l.I(false);}else{l.I(true);l.N(true);return false;}return true;}void bH(List&lt;IMyTerminalBlock&gt;bI,
bool bJ=true){foreach(var b in bI){IMyFunctionalBlock f=b as IMyFunctionalBlock;if(f==null)continue;
f.Enabled=bJ;}}void bK(List&lt;IMyTerminalBlock&gt;bI){foreach(var b in bI){IMyFunctionalBlock f=b as IMyFunctionalBlock;
if(f==null)continue;f.Enabled=!f.Enabled;}}string bL="[VIEW]";Matrix bM=new Matrix(1,0,0,0,0,1,0,0,0,
0,1,0,0,0,0,1);List&lt;IMyTerminalBlock&gt;bN=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;bO=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;bP=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;bQ=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;bR=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;bS=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;bT=new List&lt;IMyTerminalBlock&gt;();IMyTerminalBlock bU=null;private MyDetectedEntityInfo
bV;string bW="CAMERAS";void bX(nK f){f.ol(bW,"CameraViewOnly",ref bL,true);}bool bY(List&lt;IMyTerminalBlock&gt;
bZ,double ca=100,float Y=0,float W=0){double cb=0;bU=null;for(int i=0;i&lt;bZ.Count;i++){double cc=((IMyCameraBlock)bZ[i]).AvailableScanRange;
if(cc&gt;cb){cb=cc;bU=bZ[i];}}var cd=bU as IMyCameraBlock;if(bU==null){return false;}if(cd.CanScan(ca))
{bV=cd.Raycast(ca,Y,W);bU=cd;if(!bV.IsEmpty())ds(bV);return true;}else{}return false;}bool bY(List&lt;IMyTerminalBlock&gt;
bZ,Vector3D ce){double cb=0;bU=null;for(int i=0;i&lt;bZ.Count;i++){double cc=((IMyCameraBlock)bZ[i]).AvailableScanRange;
if(cc&gt;cb){cb=cc;bU=bZ[i];}}var cd=bU as IMyCameraBlock;if(bU==null)return false;{bV=cd.Raycast(ce);bU
=cd;if(!bV.IsEmpty())ds(bV);return true;}}double cf(List&lt;IMyTerminalBlock&gt;bZ){double cg=0;for(int i=
0;i&lt;bZ.Count;i++){IMyCameraBlock cd=bZ[i]as IMyCameraBlock;if(cg&lt;cd.AvailableScanRange)cg=cd.AvailableScanRange;
}return cg;}string ch(IMyTerminalBlock ci){bN.Clear();bO.Clear();bP.Clear();bQ.Clear();bR.Clear();bS.Clear();
bT.Clear();if(ci==null)return"\nCameras:No OrientationBlock";GridTerminalSystem.GetBlocksOfType&lt;IMyCameraBlock&gt;(bT,
(x1=&gt;x1.CubeGrid==Me.CubeGrid));Matrix cj;ci.Orientation.GetMatrix(out cj);Matrix.Transpose(ref cj,out
cj);for(int i=0;i&lt;bT.Count;++i){if(bT[i].CustomName.Contains(bL))continue;IMyCameraBlock cd=bT[i]as IMyCameraBlock;
cd.EnableRaycast=true;Matrix ck;cd.Orientation.GetMatrix(out ck);Vector3 cl=Vector3.Transform(ck.Forward,
cj);if(cl==bM.Left){bR.Add(bT[i]);}else if(cl==bM.Right){bS.Add(bT[i]);}else if(cl==bM.Backward){bO.Add(bT[i]);
}else if(cl==bM.Forward){bN.Add(bT[i]);}else if(cl==bM.Up){bQ.Add(bT[i]);}else if(cl==bM.Down){bP.Add(bT[i]);
}}string s;s="CS:&lt;";s+="F"+bN.Count.ToString("00");s+="B"+bO.Count.ToString("00");s+="D"+bP.Count.ToString("00");
s+="U"+bQ.Count.ToString("00");s+="L"+bR.Count.ToString("00");s+="R"+bS.Count.ToString("00");s+="&gt;";
return s;}void cm(List&lt;IMyTerminalBlock&gt;bZ,string cn){string co;for(int i=0;i&lt;bZ.Count;i++){if(!bZ[i].CustomName.Contains(cn))
{co="Camera ";if(bZ.Count&gt;1)co+=(i+1).ToString()+" ";co+=cn;bZ[i].CustomName=co;}}}List&lt;IMyTerminalBlock&gt;
cp=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;cq=new List&lt;IMyTerminalBlock&gt;();string cr(IMyTerminalBlock
ci){string s="";if(bT.Count&lt;1)s+=ch(ci);cp.Clear();cq.Clear();foreach(var camera in bP){if(camera.CustomName.ToLower().Contains("fore")
||camera.CustomData.ToLower().Contains("fore"))cp.Add(camera);else if(camera.CustomName.ToLower().Contains("aft")
||camera.CustomData.ToLower().Contains("aft"))cq.Add(camera);}s+="HCS:&lt;";s+="F"+cp.Count.ToString("00");
s+="A"+cq.Count.ToString("00");s+="&gt;";return s;}public class cs{bool ct=false;Program cu;public double
cv=1250;double cw=5000;float cx=25f;float cy=25f;double cz=5;float cA=3;float cB=0.5f;float cC=0;float
cD=0;float cE=0;float cF=0;List&lt;IMyTerminalBlock&gt;cG=new List&lt;IMyTerminalBlock&gt;();private int cH=0;private
int cI=1;public MyDetectedEntityInfo bV;public List&lt;MyDetectedEntityInfo&gt;cJ=new List&lt;MyDetectedEntityInfo&gt;();
public IMyTerminalBlock bU=null;public cs(Program pg,List&lt;IMyTerminalBlock&gt;bI,double cK=1250,float cL
=45f,float cM=45f,float cN=2,float cO=1,float cP=0.5f,double cQ=5000){cu=pg;ct=false;cG.Clear();cJ.Clear();
bV=new MyDetectedEntityInfo();foreach(var b in bI){if(b is IMyCameraBlock){cG.Add(b);IMyCameraBlock c
=b as IMyCameraBlock;c.EnableRaycast=true;if(cx&gt;c.RaycastConeLimit)cx=c.RaycastConeLimit;if(cy&gt;c.RaycastConeLimit)
cy=c.RaycastConeLimit;}}if(cK&gt;cQ)cQ=cK;cv=cK;cx=cL;cy=cM;cz=cN;cA=cO;cB=cP;cw=cQ;cC=0;cD=0;cE=0;cF=0;
cH=0;cI=cG.Count;}public bool cR(){return ct;}void cS(MyDetectedEntityInfo bV){bool cT=true;for(int i
=0;i&lt;cJ.Count;i++){if(cJ[i].EntityId==bV.EntityId)cT=false;}if(cT){cJ.Add(bV);}}public bool cU(){if(cG.Count
&lt;1)ct=true;if(ct)return false;bool cV=false;for(int cW=0;cW&lt;cI;cW++){if(cu.bY(cG,cv,cF,cE)){bV=cu.bV;
if(!bV.IsEmpty()){bool cX=true;if((bV.Type==MyDetectedEntityType.LargeGrid)||(bV.Type==MyDetectedEntityType.SmallGrid))
{if(cu.mX(bV.EntityId)){cX=false;}}if(cX){cu.eS+="\nDoScan HIT!";cS(bV);cV=true;}}cH++;if(cF==0&amp;&amp;cE==
0){cC=cB;cD=cB;cH=0;}if(cH&gt;3){cH=0;cD+=Math.Abs(cD/cA)+cB;if(Math.Abs(cD)&gt;cx){cH=0;cD=0;cC+=Math.Abs(cC
/cA)+cB;}if(Math.Abs(cC)&gt;cy){cC=0;cD=0;cH=0;{cv*=cz;if(cv&gt;cw){ct=true;return false;}}}}switch(cH){case
0:cF=cC;cE=cD;break;case 1:cF=-cC;cE=cD;break;case 2:cF=cC;cE=-cD;break;case 3:cF=-cC;cE=-cD;break;}
}}return cV;}}const int cY=0;const int cZ=2;const int da=4;const int db=32;const int dc=64;const int
dd=128;const int de=256;const int df=512;const int dg=1024;const int dh=2048;const int di=0xfff;string
dj(){string dk="FLAGS:";if((hu&amp;cZ)&gt;0)dk+="SLED ";if((hu&amp;db)&gt;0)dk+="ORBITAL ";if((hu&amp;dc)&gt;0)dk+="ROCKET ";
if((hu&amp;da)&gt;0)dk+="ROTOR ";if((hu&amp;dd)&gt;0)dk+="PET ";if((hu&amp;de)&gt;0)dk+="NAD ";if((hu&amp;df)&gt;0)dk+="NO Gyro ";
if((hu&amp;dh)&gt;0)dk+="No Tank ";if((hu&amp;dg)&gt;0)dk+="No Power ";return dk;}long dl=0;void dm(){string dn;if
(SaveFile==null){dn=Storage;}else{dn=SaveFile.GetPublicText();}hr.nW(dn);hr.ol(ho,"SaveID",ref dl);if
(@do())hr.nW("");e(hr);hr.ol(ho,"Mode",ref eX,true);hr.ol(ho,"current_state",ref current_state,true);
hr.ol(ho,"PassedArgument",ref sPassedArgument,true);hr.ol(ho,"AlertStates",ref hw,true);hr.ol(ho,"craft_operation",
ref hu,true);hr.ol(ho,"PassedArgument",ref sPassedArgument);hr.ol(ho,"ReceivedMessage",ref hx);}bool
@do(){if(dl==(long)SaveFile.EntityId)return false;else return true;}bool dp(string dq){dq=dq.Trim().ToLower();
return(dq=="True"||dq=="true");}Dictionary&lt;long,MyDetectedEntityInfo&gt;dr=new Dictionary&lt;long,MyDetectedEntityInfo&gt;();
void ds(MyDetectedEntityInfo thisDetectedInfo){if(thisDetectedInfo.EntityId!=0){if(!dr.ContainsKey(thisDetectedInfo.EntityId))
{dr.Add(thisDetectedInfo.EntityId,thisDetectedInfo);}else{dr[thisDetectedInfo.EntityId]=thisDetectedInfo;
}}else Echo("Not adding: Zero Entity");}string du(MyDetectedEntityInfo dv){string s="";s+="ETBV";s+=
":"+dv.EntityId.ToString();s+=":"+dv.TimeStamp;Vector3D dw=dv.BoundingBox.Min;s+=":"+hA(dw);Vector3D
dx=dv.BoundingBox.Max;s+=":"+hA(dx);Vector3D dy=(Vector3)dv.Velocity;s+=":"+hA(dy);return s;}void dz()
{Echo("mode="+eX.ToString());if(eX==fe){dG();return;}}void dA(){eo(DateTime.Now.ToString()+" ACTION: Reset To Idle",
dW,true);j();fO(eY);}void dB(){eo(b+" Manual Control",dY);}double dC=50;bool dD=true;bool dE=false;bool
dF=false;void dG(){eo("clear",dY);eo(b+":Going Target!",dY);eo(b+":GT: current_state="+current_state.ToString(),
dY);Echo("Going Target: state="+current_state.ToString());if(current_state==0){kC();if((hu&amp;cZ)&gt;0){dE
=true;if(kc&gt;45)kc=45;}else dE=false;if((hu&amp;da)&gt;0){dF=true;if(kc&gt;15)kc=15;}else dF=false;l.D(ni);if(fR)
{current_state=160;}else fO(fb);ii=true;}else if(current_state==160){Echo("Moving to Target");Vector3D
dH=fQ;Vector3D dI=dH-ni.GetPosition();double dJ=dI.Length();Echo("distance="+eM(dJ));Echo("velocity="
+il.ToString("0.00"));eo("clear",ec);eo("Moving to Target\nD:"+eM(dJ)+" V:"+il.ToString(d),ec);if(dD
&amp;&amp;(dJ&lt;dC)){Echo("we have arrived");if(fW){var dK=nf&lt;IMyTerminalBlock&gt;("NAV:");for(int i1=0;i1&lt;dK.Count();
i1++){if(dK[i1].CustomName.StartsWith("NAV:")){Echo("Found NAV: command:");dK[i1].CustomName="NAV: C Arrived Target";
}}}j();fR=false;fO(fB);return;}eF("TargetLocation",dH);{kH(dH,3.0f,200,170);}}else if(current_state==
170){ii=true;Vector3D dH=fQ;kC();kY(dH);current_state=172;}else if(current_state==171){ii=false;}else
if(current_state==172){Echo("Collision Avoid");eo("clear",ec);eo("Collision Avoid",ec);kH(kX,5.0f,160,
173);}else if(current_state==173){if(bV.Type==MyDetectedEntityType.Asteroid||bV.Type==MyDetectedEntityType.LargeGrid
||bV.Type==MyDetectedEntityType.SmallGrid){current_state=174;}else current_state=170;ii=true;}else if
(current_state==174){lr();kC();dtNavStartShip=DateTime.Now;current_state=175;ii=true;}else if(current_state
==175){DateTime dL=dtNavStartShip.AddSeconds(5.0f);DateTime dM=DateTime.Now;if(DateTime.Compare(dM,dL)
&gt;0){fO(fb);jX();return;}if(ls()){Echo("ESCAPE!");current_state=180;}bWantMedium=true;}else if(current_state
==180){kH(kX,1f,160,173);}else if(current_state==200){eo("clear",ec);eo("Arrived at Target",ec);j();
fR=false;lP(false);oU();fO(fB);if(fW){var dK=nf&lt;IMyTerminalBlock&gt;("NAV:");for(int i1=0;i1&lt;dK.Count();
i1++){if(dK[i1].CustomName.StartsWith("NAV:")){Echo("Found NAV: command:");dK[i1].CustomName="NAV: C Arrived Target";
}}}ii=true;jX();}}void dN(float dO){if(dF){gf(dO);}else jv(it,dO);}void dP(){jz(@is);gn();}string dQ
="LOGGING";void dR(nK f){f.ol(dQ,"TextPanelReport",ref sTextPanelReport,true);f.ol(dQ,"StatusName",ref
dV,true);f.ol(dQ,"LongStatus",ref dX,true);f.ol(dQ,"RangeReport",ref dT,true);f.ol(dQ,"SledReport",ref
ssledReport,true);f.ol(dQ,"GPSTag",ref eb,true);}eg dS=null;string dT="[RANGE]";eg dU=null;string dV
="Wico Craft Status";eg dW=null;string dX="Wico Craft Log";eg dY=null;string sTextPanelReport="Craft Report";
eg ea=null;string eb="[GPS]";eg ec=null;string ssledReport="[SMREPORT]";bool ee=false;bool ef=false;
public class eg{Program cu;string eh="";List&lt;IMyTextPanel&gt;ei=new List&lt;IMyTextPanel&gt;();string ej="";string
ek="";bool el=false;bool em=true;public eg(Program pg,string co,bool en=false){cu=pg;eh=co;el=en;em=
true;ej="";ek="";ei.Clear();List&lt;IMyTerminalBlock&gt;bI=new List&lt;IMyTerminalBlock&gt;();bI=cu.ng&lt;IMyTextPanel&gt;(eh);
if(bI.Count&lt;1)bI=cu.nf&lt;IMyTextPanel&gt;(eh);ei=bI.ConvertAll(x1=&gt;(IMyTextPanel)x1);}public void eo(string
ep,bool eq=false){if(ep=="clear"){ej="";ek="X";em=false;return;}if(el&amp;&amp;em){em=false;if(ei.Count&gt;0){ej
=ei[0].GetPublicText();ek="X";}}if(eq){ej=ep+"\n"+ej;}else ej+=ep+"\n";}public void er(){if(ek!=ej){
em=true;foreach(var t in ei){t.WritePublicText(ej);}ek=ej;}}}void es(){dU=ex(true);dW=eu(dX,true);;dY
=eu(sTextPanelReport);dS=eu(dT);ea=eu(eb,id);ec=eu(ssledReport);ee=true;}void et(){if(dU!=null)dU.er();
if(dW!=null)dW.er();if(dY!=null)dY.er();if(dS!=null)dS.er();if(ea!=null)ea.er();if(ec!=null)ec.er();
}eg eu(string stheName,bool bRefresh=false){eg ew=new eg(this,stheName,bRefresh);return ew;}eg ex(bool
force_update=false){if((dU!=null||ee)&amp;&amp;!force_update)return dU;dU=eu(dV);return dU;}void eo(string text,
eg wLog,bool bReverse=false){if(wLog==null)return;wLog.eo(text,bReverse);}void eA(string ep){eo(ep,ex());
if(ef&amp;&amp;ep!="clear")Echo(ep);}string eB(double eC){int eD=75;if(eC&lt;0)eC=0;int eE=(int)(eC*eD)/100;if(eE
&gt;eD)eE=eD;string dk="["+new String('|',eE)+new String('\'',eD-eE)+"]";return dk;}void eF(string co,Vector3D
eG){string s1;s1="GPS:"+co+":"+hA(eG)+":";eo(s1,ea);}string eH(string eI,string eJ){string s;int eK=
eI.Length;int eL=eJ.Length;if(eK+eL&gt;32){if(eL&gt;31)return"INVALID";eK=32-eL;}s=eI.Substring(0,eK)+eJ;s.Replace(":",
"_");s.Replace(";","_");return s;}string eM(double thed){string eO="";if(thed&gt;1000){eO=thed.ToString("N0")
+"km";}else if(thed&gt;10){eO=thed.ToString("0.0")+"m";}else{eO=thed.ToString("0.000")+"m";}return eO;}
void eP(){}void eQ(nK eR){mk(eR);iQ(eR);nm(eR);bX(eR);fY(eR);}string eS="";string eT="";int eU=0;string
eV(){no=1;ns=0.09f;nn=0.75;Echo("Init:"+eU);if(eU==0){eo(DateTime.Now.ToString()+a+":"+b+":INIT",dW,
true);eS+=SerializeInit();dm();eS+=mI();eS+=DefaultOrientationBlockInit();es();eS+=iR(ni);eS+=ge();eS
+=pq(ni);eS+=oP();eS+=ch(ni);eS+=ml();eS+=nH();l.A(nr);l.D(ni);eS+=oH();eS+=ch(ni);gq(ni);hE(ni);eS+=
eW();ig=true;}eU++;if(ig){eU=0;ii=false;}eA(eS);return eS;}string eW(){return"&gt;";}int eX=0;const int
eY=0;const int eZ=1;const int fa=2;const int fb=3;const int fc=4;const int fd=5;const int fe=7;const
int ff=8;const int fg=9;const int fh=13;const int fi=10;const int fj=11;const int fk=12;const int fl
=14;const int fm=15;const int fn=16;const int fo=17;const int fp=18;const int fq=19;const int fr=20;
const int fs=21;const int ft=22;const int fu=23;const int fv=24;const int fw=25;const int fx=26;const
int fy=27;const int fz=28;const int fA=29;const int fB=30;const int fC=31;const int fD=50;const int fE
=60;const int fF=111;const int fG=200;const int fH=210;const int fI=220;const int fJ=290;const int fK
=400;const int fL=410;const int fM=500;const int fN=510;void fO(int newMode){if(eX==newMode)return;eX
=newMode;current_state=0;jX();}Vector3D fQ;bool fR=false;DateTime dtNavStartShip;bool fT=false;bool fU
=true;bool fV=true;bool fW=true;string fX="NAV";void fY(nK f){f.ol(fX,"DTMDebug",ref fT,true);f.ol(fX,
"CameraCollision",ref fU,true);f.ol(fX,"SensorCollision",ref fV,true);f.ol(fX,"NAVEmulateOld",ref fW,
true);}void fZ(nK f){f.oy(fX,"vTarget",fQ);f.oy(fX,"ValidNavTarget",fR);f.oy(fX,"dStartShip",dtNavStartShip);
}void ga(nK f){f.ol(fX,"vTarget",ref fQ,true);f.ol(fX,"ValidNavTarget",ref fR,true);f.ol(fX,"dStartShip",
ref dtNavStartShip,true);}List&lt;IMyTerminalBlock&gt;gb=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
gc=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;gd=new List&lt;IMyTerminalBlock&gt;();string ge(){gb.Clear();
gc.Clear();gd.Clear();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorStator&gt;(gb,mW);for(int i=0;i&lt;gb.Count;
i++){if(gb[i].CustomName.Contains("[LEFT]")||gb[i].CustomData.Contains("[LEFT]")){gc.Add(gb[i]);}else
if(gb[i].CustomName.Contains("[RIGHT]")||gb[i].CustomData.Contains("[RIGHT]")){gd.Add(gb[i]);}}return
"NR:L"+gc.Count.ToString("0")+"R"+gd.Count.ToString("0");}bool gf(float gg){if(gc.Count&lt;1)return false;
float gh=gc[0].GetMaximum&lt;float&gt;("Velocity");float gi=gc[0].GetValueFloat("Velocity");float gj=(gi/gh
*100);gj=Math.Abs(gj);if(gg&gt;(gj+5f))gg=gj+5;if(gg&lt;(gj-5))gg=gj-5;if(gg&lt;0f)gg=0f;if(gg&gt;100f)gg=100f;if
(Math.Abs(gg)&gt;0){gf(gc,-gg);gf(gd,gg);return true;}else return false;}bool gf(List&lt;IMyTerminalBlock&gt;
rotorList,float gg){for(int i=0;i&lt;rotorList.Count;i++){IMyMotorStator gl=rotorList[i]as IMyMotorStator;
float gh=gl.GetMaximum&lt;float&gt;("Velocity");if(!gl.Enabled)gl.Enabled=true;float gm=gh*(gg/100.0f);Echo(gl.CustomName
+":MV="+gh.ToString("0.00")+":V="+gm.ToString("0.00"));gl.TargetVelocityRPM=gm;}return true;}bool gn()
{gn(gc);gn(gd);return true;}bool gn(List&lt;IMyTerminalBlock&gt;rotorList){for(int i=0;i&lt;rotorList.Count;i++)
{IMyMotorStator gl=rotorList[i]as IMyMotorStator;gl.TargetVelocityRPM=0;}return true;}bool go(double
bf){Echo("DRR:"+bf.ToString());float gg;if(Math.Abs(bf)&gt;1.0){gg=50;}else if(Math.Abs(bf)&gt;.7){gg=50;}
else if(Math.Abs(bf)&gt;0.5){gg=30;}else if(Math.Abs(bf)&gt;0.1){gg=20;}else if(Math.Abs(bf)&gt;0.01){gg=5;}else
if(Math.Abs(bf)&gt;0.001){gg=0;}else gg=0;gg/=3;gg=gg*-Math.Sign(bf);if(Math.Abs(gg)&gt;0){Echo("PUPLEFT:"
+gg.ToString());gf(gc,gg);}if(Math.Abs(gg)&gt;0){Echo("PUPRIGHT:"+gg.ToString());gf(gd,gg);}if(Math.Abs(gg)
&gt;0)return false;else return true;}public gs gp;void gq(IMyTerminalBlock sourceBlock=null){if(sourceBlock
==null)sourceBlock=ni;gp=new gs(sourceBlock);}public struct gs{public Vector3D[]gt;Vector3D gu;Vector3D
gv;public Vector3D gw;static int[]gx={1,3,5,7};static int[]gy={0,2,4,6};static int[]gz={2,3,6,7};static
int[]gA={0,1,4,5};static int[]gB={4,5,6,7};static int[]gC={0,1,2,3};static int[][]gD={gx,gy,gz,gA,gB,
gC};public const int gE=0;public const int gF=1;public const int gG=2;public const int gH=3;public const
int gI=4;public const int gJ=5;public gs(IMyTerminalBlock gK){gt=new Vector3D[8];gv=new Vector3D(gK.CubeGrid.Min)
-new Vector3D(0.5,0.5,0.5);gv*=gK.CubeGrid.GridSize;gu=new Vector3D(gK.CubeGrid.Max)+new Vector3D(0.5,
0.5,0.5);gu*=gK.CubeGrid.GridSize;var gL=gK.WorldMatrix.GetOrientation();var gM=gK.CubeGrid.WorldMatrix.GetOrientation()
*MatrixD.Transpose(gL);Vector3D.TransformNormal(ref gv,ref gM,out gv);Vector3D.TransformNormal(ref gu,
ref gM,out gu);var gN=Vector3D.Min(gv,gu);gu=Vector3D.Max(gv,gu);gv=gN;var gO=gK.CubeGrid.GetPosition();
Vector3D gP;Vector3D gQ;gP=gv;Vector3D.TransformNormal(ref gP,ref gL,out gP);gP+=gO;gQ=gu;Vector3D.TransformNormal(ref
gQ,ref gL,out gQ);gQ+=gO;BoundingBox bb=new BoundingBox(gP,gQ);gw=bb.Center;Vector3D gR;for(int i=0;
i&lt;8;i++){gR.X=((i&amp;1)==0?gv:gu).X;gR.Y=((i&amp;2)==0?gv:gu).Y;gR.Z=((i&amp;4)==0?gv:gu).Z;Vector3D.TransformNormal(ref
gR,ref gL,out gR);gR+=gO;gt[i]=gR;}}public void gS(int gT,Vector3D[]gU,int gV=0){gT%=gD.Length;for(int
i=0;i&lt;gD[gT].Length;i++){gU[gV++]=gt[gD[gT][i]];}}}bool gW(string gX){eT="";if(gX==""||gX=="timer"||
gX=="wccs"||gX=="wcct"){if(sPassedArgument!=""&amp;&amp;sPassedArgument!="timer"){gX=sPassedArgument;}if(fW)
{var dK=nf&lt;IMyTerminalBlock&gt;("NAV:");for(int i1=0;i1&lt;dK.Count();i1++){if(dK[i1].CustomName.StartsWith("NAV:"))
{Echo("Found NAV: command:");gX=dK[i1].CustomName.Substring("NAV:".Length);break;}}}}if(gX=="init"){
eS="";ig=false;eU=0;eV();return false;}string[]gY=gX.Trim().Split(';');for(int gZ=0;gZ&lt;gY.Length;gZ++)
{string[]ha=gY[gZ].Trim().Split(' ');if(ha[0]=="timer"){}else if(ha[0]=="wccs"){}else if(ha[0]=="wcct")
{}else if(ha[0]=="W"||ha[0]=="O"){Echo("Args:");for(int hb=0;hb&lt;ha.Length;hb++)Echo(ha[hb]);if(ha.Length
&lt;1){Echo("Invalid Command:("+gY[gZ]+")");continue;}string hc=ha[1].Trim();if(ha.Length&gt;2){hc=ha[1];for
(int kk=2;kk&lt;ha.Length;kk++)hc+=" "+ha[kk];hc=hc.Trim();}string[]hd=hc.Split(',');if(hd.Length&lt;3){hd
=hc.Split(':');}for(int hb=0;hb&lt;hd.Length;hb++)Echo(hd[hb]);if(hd.Length&lt;3){Echo("Invalid Command:("
+gY[gZ]+")");nJ();return false;}int he=0;string hf="Waypoint";if(hd[0]=="GPS"){if(hd.Length&gt;4){hf=hd[1];
he=2;}else{Echo("Invalid Command");nJ();return false;}}double x,y,z;bool hg=double.TryParse(hd[he++].Trim(),
out x);bool hh=double.TryParse(hd[he++].Trim(),out y);bool hi=double.TryParse(hd[he++].Trim(),out z);
if(!hg||!hh||!hi){Echo("Invalid Command:("+gY[gZ]+")");continue;}fQ=new Vector3D(x,y,z);fR=true;if(ha[0]
=="W")dD=true;else dD=false;fO(fe);}else if(ha[0]=="S"){if(ha.Length&lt;1){Echo("Invalid Command:("+gY[gZ]
+")");continue;}double x;bool hg=double.TryParse(ha[1].Trim(),out x);if(hg){kc=x;Echo("Set speed to:"
+kc.ToString("0.00"));}else{Echo("Invalid Command:("+gY[gZ]+")");continue;}}else if(ha[0]=="D"){if(ha.Length
&lt;1){Echo("Invalid Command:("+gY[gZ]+")");continue;}double x;bool hg=double.TryParse(ha[1].Trim(),out
x);if(hg){dC=x;Echo("Set arrival distance to:"+dC.ToString("0.00"));}else{Echo("Invalid Command:("+gY[gZ]
+")");continue;}}else if(ha[0]=="C"){if(ha.Length&lt;1){Echo("Invalid Command:("+gY[gZ]+")");continue;}
else{Echo(gY[gZ]);}}else{int hj;if(hY.TryGetValue(ha[0].ToLower(),out hj)){eT="mode set to "+hj;fO(hj);
}else{eT="Unknown argument:"+ha[0];}}}return false;}bool hk(string gX){return false;}void hl(){g(hr);
hr.oy(ho,"Mode",eX.ToString());hr.oy(ho,"current_state",current_state.ToString());hr.oy(ho,"PassedArgument",
sPassedArgument);hr.oy(ho,"AlertStates",hw.ToString());hr.oy(ho,"craft_operation",hu.ToString());hr.oy(ho,
"PassedArgument",sPassedArgument);hr.oy(ho,"ReceivedMessage",hx);hr.oy(ho,"SaveID",(long)SaveFile.EntityId);
if(hr.nV){if(hr.nV){string hm=hr.oC();if(SaveFile==null){Storage=hm;}else{SaveFile.WritePublicText(hm,
false);}}}else{Echo("Not saving: Same");}}string hn="Wico Craft Save";string ho="WCCM2";void SerializeInitCustomData(nK
iNIHolder){iNIHolder.ol(ho,"SAVE_FILE_NAME",ref hn,true);}IMyTextPanel SaveFile=null;nK hr;int current_state
=0;long allBlocksCount=0;int hu=cY;string sPassedArgument="";int hw=0;string hx="";string SerializeInit()
{string eS="S";SaveFile=null;List&lt;IMyTerminalBlock&gt;bI=new List&lt;IMyTerminalBlock&gt;();bI=nh&lt;IMyTextPanel&gt;(hn);
if(bI.Count&gt;1)Echo("Multiple blocks found: \""+hn+"\"");else if(bI.Count==0){bI=nf&lt;IMyTextPanel&gt;(hn);
if(bI.Count==1)SaveFile=bI[0]as IMyTextPanel;else{bI=ng&lt;IMyTextPanel&gt;(hn);if(bI.Count==1)SaveFile=bI[0]
as IMyTextPanel;}}else SaveFile=bI[0]as IMyTextPanel;hr=new nK(this,"");if(SaveFile==null){eS="-";Echo(hn
+" (TextPanel) is missing or Named incorrectly. ");}return eS;}bool hz(){return SaveFile!=null;}string
hA(Vector3D v){string s;s=v.X.ToString("0.00")+":"+v.Y.ToString("0.00")+":"+v.Z.ToString("0.00");return
s;}bool hB(string hC,out double x,out double y,out double z){string[]hd=hC.Trim().Split(',');if(hd.Length
&lt;3){hd=hC.Trim().Split(':');}x=0;y=0;z=0;if(hd.Length&lt;3)return false;bool hg=double.TryParse(hd[0].Trim(),
out x);bool hh=double.TryParse(hd[1].Trim(),out y);bool hi=double.TryParse(hd[2].Trim(),out z);if(!hg
||!hh||!hi){return false;}return true;}hJ hD;void hE(IMyTerminalBlock ci){hD=new hJ(this,ci);}const float
hF=0.5f;const float hG=2.5f;const double hH=0.5;const double hI=2.5;public class hJ{private float hK,
hL,hM;private double hN,hO,hP;private double hQ;private Program cu;private gs gp;public hJ(Program pg,
IMyTerminalBlock ci){cu=pg;if(cu.Me.CubeGrid.GridSizeEnum.ToString().ToLower().Contains("small"))hQ=
hH;else hQ=hI;gp=new gs(ci);Vector3D[]gU=new Vector3D[4];gp.gS(gs.gJ,gU);hO=(gU[0]-gU[1]).Length();hP
=(gU[0]-gU[2]).Length();gp.gS(0,gU);hN=(gU[0]-gU[2]).Length();hK=(float)(hN/hQ);hL=(float)(hO/hQ);hM
=(float)(hP/hQ);}public float hR(){return hK;}public double hS(){return hN;}public float hT(){return
hL;}public double hU(){return hO;}public float hV(){return hM;}public double hW(){return hP;}public double
hX(){return hQ;}}Dictionary&lt;string,int&gt;hY=new Dictionary&lt;string,int&gt;();string hZ="";UpdateFrequency ia
=UpdateFrequency.Once;float ib=100;string ic="WORLD";bool id=true;void ie(nK f){f.ol(ic,"MaxWorldMps",
ref ib,true);}void@if(){nK eR=new nK(this,Me.CustomData);ie(eR);mA(eR);dR(eR);eQ(eR);if(eR.nV){Me.CustomData
=eR.oC(true);}}public Program(){eP();@if();hZ=a+":"+b+" V"+c+" ";Echo(hZ+"Creator");if(!Me.CustomName.Contains(b))
Me.CustomName="PB "+a+" "+b;if(!Me.Enabled){Echo("I am turned OFF!");}}bool ig=false;bool ih=false;bool
ii=false;bool bWantMedium=false;bool ik=false;double il=-1;double im=-2;void Main(string gX,UpdateType
ut){Echo(hZ+jR());ii=false;bWantMedium=false;ik=false;var@in=new List&lt;IMyTerminalBlock&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyProjector&gt;(@in,
mW);for(int i=0;i&lt;@in.Count;i++){if(@in[i].IsWorking){Echo("Projector:"+@in[i].CustomName);ik=true;}
}if(ik)Echo("Working local Projector found!");if(gX!=""&amp;&amp;gX!="timer"&amp;&amp;gX!="wccs")Echo("Arg="+gX);if(gX
=="init"){eS="";ig=false;}if(!ig){if(ik){eo("clear",eu(sTextPanelReport));eo(b+":Construction in Progress\nTurn off projector to continue",
dY);}ii=true;eV();ih=true;}else{if(ih)eo(DateTime.Now.ToString()+" "+a+":"+eS,dW,true);dm();if(ni is
IMyShipController){il=((IMyShipController)ni).GetShipSpeed();Vector3D io=((IMyShipController)ni).GetNaturalGravity();
double ip=io.Length();im=ip/9.81;}if((ut&amp;(UpdateType.Trigger|UpdateType.Terminal))&gt;0){if(gW(gX)){hl();
et();return;}}else if((ut&amp;(UpdateType.Mod))&gt;0){if(gW(gX)){hl();et();return;}}else if((ut&amp;(UpdateType.Script))
&gt;0){if(gW(gX)){hl();et();return;}}else if((ut&amp;(UpdateType.Antenna))&gt;0){if(!hk(gX)){mb(gX);}hl();jX();
et();return;}else{gX="";}lZ();lU();h();dz();}hl();if(ii){Echo("FAST!");Runtime.UpdateFrequency|=ia;}
else{Runtime.UpdateFrequency&amp;=~(ia);}if(bWantMedium){Runtime.UpdateFrequency|=UpdateFrequency.Update10;
}else{Runtime.UpdateFrequency&amp;=~(UpdateFrequency.Update10);}this.i();ih=false;et();}void iq(string hZ
=null){float ir=0;ir=Runtime.CurrentInstructionCount/(float)Runtime.MaxInstructionCount;if(hZ==null)
hZ="Instructions=";Echo(hZ+" "+(ir*100).ToString("0.00")+"%");}List&lt;IMyTerminalBlock&gt;@is=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;it=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;iu=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;iv=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;iw=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;ix=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;iy=new List&lt;IMyTerminalBlock&gt;();
double iz=0;double iA=0;double iB=0;double iC=0;double iD=0;double iE=0;int iF=0;int iG=0;int iH=0;const
int iI=1;const int iJ=2;const int iK=4;const int iL=0xff;Matrix iM=new Matrix(1,0,0,0,0,1,0,0,0,0,1,
0,0,0,0,1);string iN="IGNORE";string iO="cutter";string iP="THRUSTERS";void iQ(nK iNIHolder){iNIHolder.ol(iP,
"IgnoreThruster",ref iN);iNIHolder.ol(iP,"CutterThruster",ref iO);}void iR(IMyTerminalBlock ci,ref List&lt;IMyTerminalBlock&gt;
it,ref List&lt;IMyTerminalBlock&gt;iu,ref List&lt;IMyTerminalBlock&gt;iv,ref List&lt;IMyTerminalBlock&gt;iw,ref List&lt;IMyTerminalBlock&gt;
ix,ref List&lt;IMyTerminalBlock&gt;iy,int iS=iL){it.Clear();iu.Clear();iv.Clear();iw.Clear();ix.Clear();iy.Clear();
@is.Clear();if(ci==null)return;var iT=new List&lt;IMyTerminalBlock&gt;();nc&lt;IMyThrust&gt;(ref iT);for(int i=0;
i&lt;iT.Count;i++){if(iT[i].CustomName.ToLower().Contains(iO)||iT[i].CustomData.ToLower().Contains(iO))
continue;if(iT[i].CustomName.ToLower().Contains(iN)||iT[i].CustomData.ToLower().Contains(iN))continue;
@is.Add(iT[i]);}Matrix cj;ci.Orientation.GetMatrix(out cj);Matrix.Transpose(ref cj,out cj);iz=0;iA=0;
iB=0;iC=0;iD=0;iE=0;for(int i=0;i&lt;@is.Count;++i){var iU=@is[i]as IMyThrust;Matrix iV;iU.Orientation.GetMatrix(out
iV);Vector3 cl=Vector3.Transform(iV.Backward,cj);int iW=iX(@is[i]);if(iW==iI)iH++;else if(iW==iJ)iG++;
else if(iW==iK)iF++;if(cl==iM.Left){iD+=iZ((IMyThrust)@is[i]);ix.Add(@is[i]);}else if(cl==iM.Right){
iE+=iZ((IMyThrust)@is[i]);iy.Add(@is[i]);}else if(cl==iM.Backward){iA+=iZ((IMyThrust)@is[i]);iu.Add(@is[i]);
}else if(cl==iM.Forward){iz+=iZ((IMyThrust)@is[i]);it.Add(@is[i]);}else if(cl==iM.Up){iC+=iZ((IMyThrust)@is[i]);
iw.Add(@is[i]);}else if(cl==iM.Down){iB+=iZ((IMyThrust)@is[i]);iv.Add(@is[i]);}}}string iR(IMyTerminalBlock
ci){it.Clear();iu.Clear();iv.Clear();iw.Clear();ix.Clear();iy.Clear();@is.Clear();if(ci==null)return
"No Orientation Block";var iT=new List&lt;IMyTerminalBlock&gt;();nc&lt;IMyThrust&gt;(ref iT);for(int i=0;i&lt;iT.Count;
i++){if(iT[i].CustomName.ToLower().Contains(iO)||iT[i].CustomData.ToLower().Contains(iO))continue;if
(iT[i].CustomName.ToLower().Contains(iN)||iT[i].CustomData.ToLower().Contains(iN))continue;@is.Add(iT[i]);
}Matrix cj;ci.Orientation.GetMatrix(out cj);Matrix.Transpose(ref cj,out cj);iz=0;iA=0;iB=0;iC=0;iD=0;
iE=0;for(int i=0;i&lt;@is.Count;++i){var iU=@is[i]as IMyThrust;Matrix iV;iU.Orientation.GetMatrix(out iV);
Vector3 cl=Vector3.Transform(iV.Backward,cj);int iW=iX(@is[i]);if(iW==iI)iH++;else if(iW==iJ)iG++;else
if(iW==iK)iF++;if(cl==iM.Left){iD+=iZ((IMyThrust)@is[i]);ix.Add(@is[i]);}else if(cl==iM.Right){iE+=iZ((IMyThrust)@is[i]);
iy.Add(@is[i]);}else if(cl==iM.Backward){iA+=iZ((IMyThrust)@is[i]);iu.Add(@is[i]);}else if(cl==iM.Forward)
{iz+=iZ((IMyThrust)@is[i]);it.Add(@is[i]);}else if(cl==iM.Up){iC+=iZ((IMyThrust)@is[i]);iw.Add(@is[i]);
}else if(cl==iM.Down){iB+=iZ((IMyThrust)@is[i]);iv.Add(@is[i]);}}string s;s="&gt;";s+="F"+it.Count.ToString("00");
s+="B"+iu.Count.ToString("00");s+="D"+iv.Count.ToString("00");s+="U"+iw.Count.ToString("00");s+="L"+
ix.Count.ToString("00");s+="R"+iy.Count.ToString("00");s+="&lt;";return s;}int iX(IMyTerminalBlock theBlock)
{if(theBlock is IMyThrust){if(theBlock.BlockDefinition.SubtypeId.Contains("Atmo"))return iI;else if(theBlock.BlockDefinition.SubtypeId.Contains("Hydro"))
return iJ;else return iK;}return 0;}double iZ(IMyThrust thruster){return thruster.MaxEffectiveThrust;
}double ja(List&lt;IMyTerminalBlock&gt;jb,int jc=iL){double jd=0;for(int je=0;je&lt;jb.Count;je++){int jf=iX(jb[je]);
if((jf&amp;jc)&gt;0){IMyThrust iU=jb[je]as IMyThrust;double jg=iU.MaxEffectiveThrust;jd+=jg;}}return jd;}bool
jh(List&lt;IMyTerminalBlock&gt;jb,out float ji,out float jj,out float jk){ji=0;jj=0;jk=0;double jl=ja(jb,iK);
double jm=ja(jb,iI);double jn=ja(jb,iJ);MyShipMass jo;jo=((IMyShipController)ni).CalculateShipMass();
double jp=0;jp=jo.PhysicalMass*im*9.810;if(jm&gt;0){if(jm&lt;jp){ji=100;jp-=jm;}else{ji=(float)(jp/jm*100);
if(ji&gt;0)jp-=(jm*ji/100);}}if(jl&gt;0&amp;&amp;jp&gt;0){if(jl&lt;jp){jk=100;jp-=jl;}else{jk=(float)(jp/jl*100);if(jk&gt;0)
jp-=((jl*jk)/100);}}if(jn&gt;0&amp;&amp;jp&gt;0){if(jn&lt;jp){jj=100;jp-=jn;}else{jj=(float)(jp/jn*100);if(jj&gt;0)jp-=((jn
*jj)/100);;}}if(jp&gt;0)return false;return true;}List&lt;IMyTerminalBlock&gt;jq(string jr){var js=new List&lt;IMyTerminalBlock&gt;();
var jt=new List&lt;IMyBlockGroup&gt;();GridTerminalSystem.GetBlockGroups(jt);for(int ju=0;ju&lt;jt.Count;ju++)
{if(jt[ju].Name==jr){List&lt;IMyTerminalBlock&gt;jb=null;jt[ju].GetBlocks(jb,mW);for(int je=0;je&lt;jb.Count;
je++){js.Add(jb[je]);}break;}}return js;}int jv(List&lt;IMyTerminalBlock&gt;jb,float dO,int jc=iL){int jw=
0;if(dO&gt;100)dO=100;if(dO&lt;0)dO=0;for(int je=0;je&lt;jb.Count;je++){int jf=iX(jb[je]);if((jf&amp;jc)&gt;0){IMyThrust
iU=jb[je]as IMyThrust;if(!iU.IsWorking){iU.Enabled=true;}jw+=1;iU.ThrustOverridePercentage=dO/100f;}
}return jw;}int jv(List&lt;IMyTerminalBlock&gt;jb,int jx=100,int jc=iL){return jv(jb,(float)jx,jc);}bool jv(string
jy,int jx=100,int jc=iL){if(jx&gt;100)jx=100;var jt=new List&lt;IMyBlockGroup&gt;();GridTerminalSystem.GetBlockGroups(jt);
for(int ju=0;ju&lt;jt.Count;ju++){if(jt[ju].Name==jy){List&lt;IMyTerminalBlock&gt;jb=null;jt[ju].GetBlocks(jb,
mW);return(jv(jb,jx,jc)&gt;0);}}return false;}int jz(List&lt;IMyTerminalBlock&gt;thrusters,int jc=iL,bool jA=
false){int jw=0;for(int je=0;je&lt;thrusters.Count;je++){int jf=iX(thrusters[je]);if((jf&amp;jc)&gt;0){jw++;IMyThrust
iU=thrusters[je]as IMyThrust;iU.ThrustOverride=0;if(iU.IsWorking&amp;&amp;jA)iU.Enabled=false;else if(!iU.IsWorking
&amp;&amp;!jA)iU.Enabled=true;}}return jw;}bool jz(string jy){var jt=new List&lt;IMyBlockGroup&gt;();GridTerminalSystem.GetBlockGroups(jt);
for(int ju=0;ju&lt;jt.Count;ju++){if(jt[ju].Name==jy){List&lt;IMyTerminalBlock&gt;jb=null;jt[ju].GetBlocks(jb,
mW);return(jz(jb)&gt;0);}}return false;}bool jv(){return(jv(it)&gt;0);}bool jz(){return(jz(it)&gt;0);}double jB(List&lt;IMyTerminalBlock&gt;
jC,int jc=iL){for(int i=0;i&lt;jC.Count;i++){int jf=iX(jC[i]);if((jf&amp;jc)&gt;0&amp;&amp;jC[i].IsWorking){var iU=jC[i]
as IMyThrust;return iU.ThrustOverride;}}return 0;}bool jD(List&lt;IMyTerminalBlock&gt;jC,int jc=iL){for(int
i=0;i&lt;jC.Count;i++){int jf=iX(jC[i]);if((jf&amp;jc)&gt;0&amp;&amp;jC[i].IsWorking){return true;}}return false;}int jE(List&lt;IMyTerminalBlock&gt;
jC,int jc=iL){int jw=0;for(int i=0;i&lt;jC.Count;i++){int jf=iX(jC[i]);if((jf&amp;jc)&gt;0&amp;&amp;jC[i].IsWorking){jw++;
}}return jw;}IMyThrust jF(List&lt;IMyTerminalBlock&gt;@in,int jG=iL){foreach(var thrust in@is){if(thrust is
IMyThrust&amp;&amp;(iX(thrust)&amp;jG)&gt;0)return thrust as IMyThrust;}return null;}double jH(){if(iH&lt;1)return 0;var
jI=jF(@is,iI);if(jI==null)return 0;return jI.MaxEffectiveThrust/jI.MaxThrust;}double jJ(List&lt;IMyTerminalBlock&gt;
iw,double jK,double jL){var jo=((IMyShipController)ni).CalculateShipMass();double jp=0;jp=jo.PhysicalMass
*jL*9.810;double iZ=ja(iw);double jM=(iZ-jp)/jo.TotalMass;double jN=jK/jM;double jO=jK/2*jN;return jO;
}string[]jP={"-","\\","|","/","-","\\","|","/"};int jQ=99;string jR(){jQ++;if(jQ&gt;=jP.Length)jQ=0;return
jP[jQ];}const string jS="[WCCT]";const string jT="[WCCS]";const string jU="[WCCM]";Dictionary&lt;string,
List&lt;IMyTerminalBlock&gt;&gt;jV=new Dictionary&lt;string,List&lt;IMyTerminalBlock&gt;&gt;();void jW(){jV.Clear();}void
jX(){if(!jY(jS))jY(jU);}bool jY(string sKeyword="[WCCS]"){bool ka=false;List&lt;IMyTerminalBlock&gt;bI=new
List&lt;IMyTerminalBlock&gt;();IMyTimerBlock kb=null;if(jV.ContainsKey(sKeyword)){bI=jV[sKeyword];}else{bI
=nf&lt;IMyTerminalBlock&gt;(sKeyword);jV.Add(sKeyword,bI);}for(int i=0;i&lt;bI.Count;i++){kb=bI[i]as IMyTimerBlock;
if(kb!=null){kb.ApplyAction("TriggerNow");ka=true;}}return ka;}double kc=100;double tmCameraElapsedMs
=-1;double ke=0.50;double kf=-1;IMyShipController kg=null;double kh=85;List&lt;IMyTerminalBlock&gt;ki=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;kj=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;kk=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;kl=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;km=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;kn=new List&lt;IMyTerminalBlock&gt;();IMySensorBlock ko=null;bool kp=false;bool kq=false;
bool kr=false;double ks=100;double kt=50;double ku=15;double kv=100;double kw=100*0.5;double kx=100*
0.25;double ky=5;float kz=50f;bool kA=false;bool kB=false;void kC(){kg=null;oU();ns=0.01f;kf=0;tmCameraElapsedMs
=-1;}void kD(Vector3D dH,double maxSpeed,IMyTerminalBlock kF,int iW=iL){kh=maxSpeed;if(kh&gt;ib)kh=ib;if
((hu&amp;cZ)&gt;0){kB=true;ps();}else kB=false;if((hu&amp;da)&gt;0){kA=true;}else kA=false;kg=kF as IMyShipController;
Vector3D dI=dH-kg.CenterOfMass;double dJ=dI.Length();iR(kg,ref kj,ref ki,ref kn,ref km,ref kk,ref kl,
iW);oU();if(oK.Count&gt;0){ko=oK[0];if(kA||kB)ko.DetectAsteroids=false;else ko.DetectAsteroids=true;ko.DetectEnemy
=true;ko.DetectLargeShips=true;ko.DetectSmallShips=true;ko.DetectStations=true;ko.DetectPlayers=false;
kz=ko.GetMaximum&lt;float&gt;("Front");}else{ko=null;kz=0;}kp=false;kq=false;kr=false;double kG=kh;if(!kB&amp;&amp;
!kA)kG=kV(ki,dJ);if(kG&lt;kh)kh=kG;eS+="\nDistance="+eM(dJ)+" OptimalV="+kG;kv=kh;kw=kh*0.50;kx=kh*0.25;
if(kx&lt;5)kx=5;if(kx&gt;kw)kw=kx;if(kx&gt;kv)kv=kx;ku=jJ(ki,kx+(kw-kx)/2,0);kt=jJ(ki,kw+(kv-kw)/2,0);ks=jJ(ki,
kv,0);tmCameraElapsedMs=-1;kf=0;ns=0.01f;}void kH(Vector3D dH,float arrivalDistance,int kJ,int colDetectState,
bool kL=false){if(fT)Echo("dTM:"+kJ);if(kg==null){kD(dH,kc,ni);}if(tmCameraElapsedMs&gt;=0)tmCameraElapsedMs
+=Runtime.TimeSinceLastRun.TotalMilliseconds;if(kf&gt;=0)kf+=Runtime.TimeSinceLastRun.TotalMilliseconds;
Vector3D dI=dH-kg.CenterOfMass;double dJ=dI.Length();if(fT){Echo("dTM:distance="+eM(dJ));Echo("dTM:velocity="
+il.ToString("0.00"));Echo("dTM:tmMaxSpeed="+kh.ToString("0.00"));}if(dJ&lt;arrivalDistance){j();current_state
=kJ;kC();ii=true;return;}eF("TargetLocation",dH);List&lt;IMySensorBlock&gt;kM=null;double kN=jJ(ki,il,0);Echo("StoppingD="
+eM(kN));if(oK.Count&gt;0){float kO=Math.Min(50f,(float)kN*1.5f);oW(ko,0,0,0,0,kO,0);}else Echo("No Sensors for Travel movement");
bool kP=false;if(kB||kA){double kQ=-999;kQ=bc(dH,ni);Echo("yawangle="+kQ.ToString());if(kB){Echo("Sled");
bA(kQ,"Yaw");}else if(kA){Echo("Rotor");go(kQ);}kP=Math.Abs(kQ)&lt;.05;}else{kP=nt("forward",dI,ni);}kg.DampenersOverride
=true;if((dJ-kN)&lt;arrivalDistance){ns=0.005f;Echo("Waiting for stop");if(!kP)ii=true;j();return;}if(kP)
{bWantMedium=true;Echo("Aimed");nJ();if(fV&amp;&amp;(kf&gt;oM||kf&lt;0)){kf=0;kM=oS();if(kM.Count&gt;0){var kR=new List&lt;MyDetectedEntityInfo&gt;();
string s="";for(int i1=0;i1&lt;kM.Count;i1++){kM[i1].DetectedEntities(kR);int j1=0;bool kS=false;if(kR.Count
&gt;0)kS=true;for(;j1&lt;kR.Count;j1++){s="\nSensor TRIGGER!";s+="\nName: "+kR[j1].Name;s+="\nType: "+kR[j1].Type;
s+="\nRelationship: "+kR[j1].Relationship;s+="\n";if(fT){Echo(s);eo(s,dW);}if(kR[j1].Type==MyDetectedEntityType.Planet)
{kS=false;}if(kR[j1].Type==MyDetectedEntityType.LargeGrid||kR[j1].Type==MyDetectedEntityType.SmallGrid)
{if(kR[j1].BoundingBox.Contains(dH)!=ContainmentType.Disjoint){if(fT)Echo("Ignoring collision because we want to be INSIDE");
kS=false;}}if(kS)break;}if(kS){bV=kR[j1];kC();current_state=colDetectState;ii=true;j();return;}}}else
bV=new MyDetectedEntityInfo();}double kT=kN*2;{if(kT&lt;100)if(dJ&lt;1000)kT=dJ;else kT=1000;kT=Math.Min(dJ,
kT);}{Echo("Scanning distance="+kT);}if(fU&amp;&amp;(tmCameraElapsedMs&gt;ke||tmCameraElapsedMs&lt;0)&amp;&amp;dJ&gt;kz){if(bY(bN,
kT)){tmCameraElapsedMs=0;if(!bV.IsEmpty()){bool kS=true;if(kL){if(bV.Type==MyDetectedEntityType.Asteroid)
{if(bV.BoundingBox.Contains(dH)!=ContainmentType.Disjoint){kS=false;double kU=((Vector3D)bV.HitPosition
-ni.GetPosition()).Length();if((kU-kN)&lt;arrivalDistance){j();current_state=kJ;kC();return;}}}else if(bV.Type
==MyDetectedEntityType.Planet){kS=false;}else{}}if(fT){Echo("raycast hit:"+bV.Type.ToString());eo("Camera Trigger collision",
dW);}if(kS){kC();current_state=colDetectState;ii=true;j();return;}}else{if(fT){eo("Camera Scan Clear",
dW);}}}else{if(fT){eo("No Scan Available",dW);}}}else Echo("Raycast delay");if(fT)Echo("dtmFar="+eM(ks));
if(fT)Echo("dtmApproach="+eM(kt));if(fT)Echo("dtmPrecision="+eM(ku));if(dJ&gt;ks&amp;&amp;!kp){Echo("dtmFar");lx(kv,
100f);}else if(dJ&gt;kt&amp;&amp;!kq){Echo("Approach");kp=true;lx(kw,100f);}else if(dJ&gt;ku&amp;&amp;!kr){Echo("Precision");
if(!kq)ns=0.005f;kq=true;lx(kx,55f);}else{Echo("Close");if(!kr)ns=0.005f;kr=true;lx(ky,55f);}}else{if
(fT)Echo("Aiming");ii=true;kg.DampenersOverride=true;if(il&lt;5){jz(@is);}else{jz(ki,iL,true);}}}double
kV(List&lt;IMyTerminalBlock&gt;kW,double dJ){Echo("#thrusters="+kW.Count.ToString());if(kW.Count&lt;1)return ib;
MyShipMass jo;jo=((IMyShipController)ni).CalculateShipMass();double iZ=ja(kW);double jM=iZ/jo.PhysicalMass;
double kG,jN,jO;kG=((dJ*.75)/2)/(jM);Echo("COS");do{Echo("COS:DO");jN=kG/jM;jO=kG/2*jN;if(jO&gt;dJ){kG*=
0.85;}Echo("stoppingM="+jO.ToString("F1")+" distance="+dJ.ToString("N1"));}while(jO&gt;dJ);Echo("COS:X");
return kG;}Vector3D kX;void kY(Vector3D dH){if(tmCameraElapsedMs&gt;=0)tmCameraElapsedMs+=Runtime.TimeSinceLastRun.TotalMilliseconds;
if(kf&gt;=0)kf+=Runtime.TimeSinceLastRun.TotalMilliseconds;Vector3D kZ;if(bV.HitPosition.HasValue){kZ=(Vector3D)bV.HitPosition;
}else{kZ=ni.GetPosition();}Vector3D bi=bV.Position;Vector3D dI=(bi-kZ);dI.Normalize();Vector3D la=bV.BoundingBox.Min;
Vector3D lb=bV.BoundingBox.Max;double lc=(bi-la).Length();double ld=lc+hD.hU()*5;Vector3D le;le=Vector3D.Cross(dH,
kZ);le.Normalize();le=kZ+le*ld;kX=le;}bool lf=true;bool lg=true;bool lh=true;bool li=true;bool lj=true;
bool lk=true;MyDetectedEntityInfo ll=new MyDetectedEntityInfo();MyDetectedEntityInfo lm=new MyDetectedEntityInfo();
MyDetectedEntityInfo ln=new MyDetectedEntityInfo();MyDetectedEntityInfo lo=new MyDetectedEntityInfo();
MyDetectedEntityInfo lp=new MyDetectedEntityInfo();MyDetectedEntityInfo lq=new MyDetectedEntityInfo();
void lr(){if(tmCameraElapsedMs&gt;=0)tmCameraElapsedMs+=Runtime.TimeSinceLastRun.TotalMilliseconds;if(kf
&gt;=0)kf+=Runtime.TimeSinceLastRun.TotalMilliseconds;lf=true;lg=true;lh=true;li=true;lj=false;lk=true;
ll=new MyDetectedEntityInfo();lm=new MyDetectedEntityInfo();ln=new MyDetectedEntityInfo();lo=new MyDetectedEntityInfo();
lp=new MyDetectedEntityInfo();lq=new MyDetectedEntityInfo();if(bV.Type==MyDetectedEntityType.LargeGrid
||bV.Type==MyDetectedEntityType.SmallGrid){}if(bR.Count&lt;1)lf=false;if(bS.Count&lt;1)lg=false;if(bQ.Count
&lt;1)lh=false;if(bP.Count&lt;1)li=false;if(bN.Count&lt;1)lk=false;if(bO.Count&lt;1)lj=false;}bool ls(){if(tmCameraElapsedMs
&gt;=0)tmCameraElapsedMs+=Runtime.TimeSinceLastRun.TotalMilliseconds;if(kf&gt;=0)kf+=Runtime.TimeSinceLastRun.TotalMilliseconds;
MatrixD lt=ni.WorldMatrix;Vector3D dI=lt.Forward;Echo("ScanEscape()");if(lf){if(bY(bR,200)){lf=false;
ll=bV;if(bV.IsEmpty()){dI=lt.Left;dI.Normalize();kX=ni.GetPosition()+dI*200;return true;}}}if(lg){if
(bY(bS,200)){lg=false;lm=bV;if(bV.IsEmpty()){dI=lt.Right;dI.Normalize();kX=ni.GetPosition()+dI*200;return
true;}}}if(lh){if(bY(bQ,200)){ln=bV;lh=false;if(bV.IsEmpty()){dI=lt.Up;dI.Normalize();kX=ni.GetPosition()
+dI*200;return true;}}}if(li){if(bY(bP,200)){lo=bV;li=false;if(bV.IsEmpty()){dI=lt.Down;dI.Normalize();
kX=ni.GetPosition()+dI*200;return true;}}}if(lj){if(bY(bO,200)){lp=bV;lj=false;if(bV.IsEmpty()){dI=lt.Backward;
dI.Normalize();kX=ni.GetPosition()+dI*200;return true;}}}if(lk){if(bY(bN,200)){lk=false;if(bV.IsEmpty())
{dI=lt.Forward;dI.Normalize();kX=ni.GetPosition()+dI*200;return true;}}}if(lk||lj||lh||li||lf||lg){Echo("More scans");
return false;}Echo("Scans done. Choose longest");MyDetectedEntityInfo lu=lp;Vector3D lv=ni.GetPosition();
dI=lt.Backward;if(lu.HitPosition==null||ll.HitPosition!=null&amp;&amp;Vector3D.DistanceSquared(lv,(Vector3D)lu.HitPosition)
&lt;Vector3D.DistanceSquared(lv,(Vector3D)ll.HitPosition)){dI=lt.Left;lu=ll;}if(lu.HitPosition==null||lm.HitPosition
!=null&amp;&amp;Vector3D.DistanceSquared(lv,(Vector3D)lu.HitPosition)&lt;Vector3D.DistanceSquared(lv,(Vector3D)lm.HitPosition))
{dI=lt.Right;lu=lm;}if(lu.HitPosition==null||ln.HitPosition!=null&amp;&amp;Vector3D.DistanceSquared(lv,(Vector3D)lu.HitPosition)
&lt;Vector3D.DistanceSquared(lv,(Vector3D)ln.HitPosition)){dI=lt.Up;lu=ln;}if(lu.HitPosition==null||lo.HitPosition
!=null&amp;&amp;Vector3D.DistanceSquared(lv,(Vector3D)lu.HitPosition)&lt;Vector3D.DistanceSquared(lv,(Vector3D)lo.HitPosition))
{dI=lt.Down;lu=lo;}if(lu.HitPosition==null||lq.HitPosition!=null&amp;&amp;Vector3D.DistanceSquared(lv,(Vector3D)lu.HitPosition)
&lt;Vector3D.DistanceSquared(lv,(Vector3D)lq.HitPosition)){dI=lt.Forward;lu=lq;}if(lu.HitPosition==null)
return false;double dJ=Vector3D.Distance(lv,(Vector3D)lu.HitPosition);Echo("Distance="+eM(dJ));dI.Normalize();
kX=ni.GetPosition()+dI*dJ/2;if(dJ&gt;4){return true;}return false;}void lw(float dO){if(kA){gf(dO);}else
jv(kj,dO);}void lx(double maxSpeed,float maxThrust){if(!kA){if(il&lt;1)jv(kj,maxThrust);else if(il&lt;maxSpeed
*.75)jv(kj,25f);else if(il&lt;maxSpeed*.85)jv(kj,15f);else if(il&lt;=maxSpeed*.98){jv(kj,1f);}else if(il&gt;=
maxSpeed*1.02){jz(@is);}else{jz(@is);jz(ki,iL,true);}}else{lw(maxThrust);}}bool ly=false;List&lt;IMyRadioAntenna&gt;
lz=new List&lt;IMyRadioAntenna&gt;();List&lt;IMyLaserAntenna&gt;lA=new List&lt;IMyLaserAntenna&gt;();string lB(){lz.Clear();
lA.Clear();nc&lt;IMyRadioAntenna&gt;(ref lz);nc&lt;IMyLaserAntenna&gt;(ref lA);for(int i=0;i&lt;lz.Count;++i){if(lz[i].CustomName.Contains("unused")
||lz[i].CustomData.Contains("unused"))continue;if(!ly){a="Wico "+lz[i].CustomName.Split('!')[0].Trim();
ly=true;}}return"A"+lz.Count.ToString("0");}void lC(){for(int i=0;i&lt;lz.Count;i++){lz[i].Enabled=true;
}}string lD="";void lE(){if(hx!=""){if(lD==hx){hx="";}lD=hx;}else lD="";}void lF(){}void lG(){float lH
=0;int lI=-1;for(int i=0;i&lt;lz.Count;i++){if(lz[i].AttachedProgrammableBlock==Me.EntityId){lI=i;break;
}if(lz[i].Radius&gt;lH&amp;&amp;lz[i].AttachedProgrammableBlock==0){lI=i;lH=lz[i].Radius;}}if(lI&gt;=0){if(lz[lI].AttachedProgrammableBlock
!=Me.EntityId)eS+="\nSetting Antenna PB";lz[lI].AttachedProgrammableBlock=Me.EntityId;}else{}}void lJ(bool
lK=false){if(lz.Count&lt;1)lB();foreach(var a in lz){a.Radius=200;if(a.AttachedProgrammableBlock&gt;0||lK)
{a.Enabled=true;}}}void lL(float lM=200,bool lK=false){if(lz.Count&lt;1)lB();foreach(var a in lz){if(a.AttachedProgrammableBlock
&gt;0||lK){a.Radius=lM;a.Enabled=true;}}}Vector3D lN(){if(lz.Count&lt;1)lB();foreach(var a in lz){if(a.AttachedProgrammableBlock
==Me.EntityId){return a.GetPosition();}}foreach(var a in lz){return a.GetPosition();}Vector3D lO=new
Vector3D();return lO;}void lP(bool lK=false,float lQ=float.MaxValue){if(lz.Count&lt;1)lB();if(lQ&lt;200)lQ
=200;foreach(var a in lz){if(a.AttachedProgrammableBlock&gt;0||lK){float lR=a.GetMaximum&lt;float&gt;("Radius");
if(lQ&lt;lR)lR=lQ;a.Radius=lR;a.Enabled=true;}}}int lS(){if(lz.Count&lt;1)lB();return(lz.Count);}List&lt;string&gt;
lT=new List&lt;string&gt;();void lU(){if(lT.Count&gt;0){lV(lT[0]);lT.RemoveAt(0);}if(lT.Count&gt;0)ii=true;}void
lV(string lW){bool lX=false;if(lz.Count&lt;1)lB();for(int i=0;i&lt;lz.Count;i++){lX=lz[i].TransmitMessage(lW);
if(lX)break;}if(!lX){if(lS()&gt;0){lT.Add(lW);ii=true;}}}List&lt;string&gt;lY=new List&lt;string&gt;();void lZ(bool
ma=false){if(lY.Count&gt;0){if(hx==""){hx=lY[0];lY.RemoveAt(0);if(ma){ii=true;}else{jX();}}}if(lY.Count
&gt;0){}}void mb(string lW){lY.Add(lW);lZ();}void mc(){if(lz.Count&gt;0){Echo(lY.Count+" Pending Incoming Messages");
for(int i=0;i&lt;lY.Count;i++)Echo(i+":"+lY[i]);}else Echo("No antennas found");}List&lt;IMyTerminalBlock&gt;
md=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;me=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
mf=new List&lt;IMyTerminalBlock&gt;();bool mg=false;string mh="[BASE]";string mi="[DOCK]";string mj="CONNECTORS";
void mk(nK iNIHolder){iNIHolder.ol(mj,"BaseConnector",ref mh,true);iNIHolder.ol(mj,"DockConnector",ref
mi,true);}string ml(){mg=false;md.Clear();me.Clear();mf.Clear();mm();return"CL"+md.Count.ToString()+
"CD"+me.Count.ToString()+"CB"+mf.Count.ToString();}void mm(){if(md.Count&lt;1&amp;&amp;!mg)md=nc&lt;IMyShipConnector&gt;();
if(me.Count&lt;1&amp;&amp;!mg)me=nf&lt;IMyShipConnector&gt;(mi);if(me.Count&lt;1&amp;&amp;!mg)me=md;if(mf.Count&lt;1&amp;&amp;!mg)mf=nf&lt;IMyShipConnector&gt;(mh);
mg=true;return;}bool mn(){mm();for(int i=0;i&lt;me.Count;i++){var sc=me[i]as IMyShipConnector;if(sc.Status
==MyShipConnectorStatus.Connectable)return true;}return false;}bool mo(){mm();for(int i=0;i&lt;me.Count;
i++){var sc=me[i]as IMyShipConnector;if(sc.Status==MyShipConnectorStatus.Connected){var mp=sc.OtherConnector;
if(mp.CubeGrid==sc.CubeGrid){continue;}else return true;}}return false;}IMyTerminalBlock mq(){mm();if
(me.Count&gt;0){return me[0];}return null;}IMyTerminalBlock mr(bool ms=false){mm();for(int i=0;i&lt;me.Count;
i++){var sc=me[i]as IMyShipConnector;if(sc.Status==MyShipConnectorStatus.Connected){var mp=sc.OtherConnector;
if(mp.CubeGrid==sc.CubeGrid){continue;}else{if(!ms){return sc.OtherConnector;}else{return me[i];}}}}
return null;}void mt(bool mu=true,bool bJ=true){mm();for(int i=0;i&lt;me.Count;i++){var sc=me[i]as IMyShipConnector;
if(sc.Status==MyShipConnectorStatus.Connected){var mp=sc.OtherConnector;if(mp.CubeGrid==sc.CubeGrid)
{continue;}}if(mu){if(sc.Status==MyShipConnectorStatus.Connectable)sc.ApplyAction("SwitchLock");}else
{if(sc.Status==MyShipConnectorStatus.Connected)sc.ApplyAction("SwitchLock");}sc.Enabled=bJ;}return;}
string mv="NOFOLLOW";string mw="!WCC";string mx="[NAV]";string my="Craft Remote Control";string mz="GRIDS";
void mA(nK iNIHolder){iNIHolder.ol(mz,"NoFollow",ref mv,true);iNIHolder.ol(mz,"BlockIgnore",ref mw,true);
iNIHolder.ol(mz,"OrientationBlockContains",ref mx,true);iNIHolder.ol(mz,"OrientationBlockNamed",ref my,
true);}List&lt;IMyTerminalBlock&gt;mB=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyCubeGrid&gt;mC=new List&lt;IMyCubeGrid&gt;();
List&lt;IMyCubeGrid&gt;mD=new List&lt;IMyCubeGrid&gt;();List&lt;IMyCubeGrid&gt;mE=new List&lt;IMyCubeGrid&gt;();List&lt;IMyCubeGrid&gt;
mF=new List&lt;IMyCubeGrid&gt;();bool mG(){List&lt;IMyTerminalBlock&gt;mH=new List&lt;IMyTerminalBlock&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyTerminalBlock&gt;(mH);
if(allBlocksCount!=mH.Count){return true;}return false;}string mI(){mB.Clear();mF.Clear();mC.Clear();
mD.Clear();mE.Clear();GridTerminalSystem.GetBlocksOfType&lt;IMyTerminalBlock&gt;(mB);allBlocksCount=mB.Count;
foreach(var block in mB){var bt=block.CubeGrid;if(!mF.Contains(bt)){mF.Add(bt);}}mL(Me.CubeGrid);foreach
(var grid in mF){if(mC.Contains(grid))continue;bool mJ=false;List&lt;IMyShipConnector&gt;mK=new List&lt;IMyShipConnector&gt;();
GridTerminalSystem.GetBlocksOfType&lt;IMyShipConnector&gt;(mK,(x1=&gt;x1.CubeGrid==grid));foreach(var connector
in mK){if(connector.Status==MyShipConnectorStatus.Connected){if(mC.Contains(connector.OtherConnector.CubeGrid)
||mD.Contains(connector.OtherConnector.CubeGrid)){continue;}if(mC.Contains(connector.OtherConnector.CubeGrid))
mJ=true;else mJ=false;}}if(mJ){if(!mE.Contains(grid)){mE.Add(grid);}}if(!mD.Contains(grid)){mD.Add(grid);
}}string s="";s+="B"+mB.Count.ToString();s+="G"+mF.Count.ToString();s+="L"+mC.Count.ToString();s+="D"
+mE.Count.ToString();s+="R"+mD.Count.ToString();return s;}void mL(IMyCubeGrid bt){if(bt==null)return;
if(!mC.Contains(bt)){mC.Add(bt);mM(bt);mP(bt);mR(bt);mT(bt);}}void mM(IMyCubeGrid grid){List&lt;IMyMotorStator&gt;
mN=new List&lt;IMyMotorStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorStator&gt;(mN,(x=&gt;x.TopGrid==grid));
foreach(var rotor in mN){if(rotor.CustomName.Contains(mv)||rotor.CustomData.Contains(mv))continue;mL(rotor.CubeGrid);
}List&lt;IMyMotorAdvancedStator&gt;mO=new List&lt;IMyMotorAdvancedStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorAdvancedStator&gt;(mO,
(x=&gt;x.TopGrid==grid));foreach(var rotor in mO){if(rotor.CustomName.Contains(mv)||rotor.CustomData.Contains(mv))
continue;mL(rotor.CubeGrid);}}void mP(IMyCubeGrid grid){List&lt;IMyPistonBase&gt;mQ=new List&lt;IMyPistonBase&gt;();
GridTerminalSystem.GetBlocksOfType&lt;IMyPistonBase&gt;(mQ,(x=&gt;x.TopGrid==grid));foreach(var piston in mQ)
{mL(piston.CubeGrid);}}void mR(IMyCubeGrid grid){List&lt;IMyMotorStator&gt;mN=new List&lt;IMyMotorStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorStator&gt;(mN,
(x1=&gt;x1.CubeGrid==grid));foreach(var rotor in mN){if(rotor.CustomName.Contains(mv)||rotor.CustomData.Contains(mv))
continue;IMyCubeGrid mS=rotor.TopGrid;if(mS!=null&amp;&amp;mS!=grid){mL(mS);}}mN.Clear();List&lt;IMyMotorAdvancedStator&gt;
mO=new List&lt;IMyMotorAdvancedStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorAdvancedStator&gt;(mO,
(x1=&gt;x1.CubeGrid==grid));foreach(var rotor in mO){if(rotor.CustomName.Contains(mv)||rotor.CustomData.Contains(mv))
continue;IMyCubeGrid mS=rotor.TopGrid;if(mS!=null&amp;&amp;mS!=grid){mL(mS);}}}void mT(IMyCubeGrid grid){List&lt;IMyPistonBase&gt;
mQ=new List&lt;IMyPistonBase&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyPistonBase&gt;(mQ,(x1=&gt;x1.CubeGrid==
grid));foreach(var piston in mQ){IMyCubeGrid mS=piston.TopGrid;if(mS!=null&amp;&amp;mS!=grid){if(!mC.Contains(mS))
{mL(mS);}}}}List&lt;IMyCubeGrid&gt;mU(){if(mC.Count&lt;1){mI();}return mC;}List&lt;IMyCubeGrid&gt;mV(){if(mC.Count&lt;
1){mI();}return mE;}bool mW(IMyTerminalBlock block){return mU().Contains(block.CubeGrid);}bool mX(long
mY){for(int i=0;i&lt;mC.Count;i++){if((long)mC[i].EntityId==mY)return true;}return false;}bool mX(IMyCubeGrid
mY){return mU().Contains(mY);}bool mZ(IMyTerminalBlock gK){List&lt;IMyCubeGrid&gt;g=mV();if(g==null)return
false;return g.Contains(gK.CubeGrid);}IMyTerminalBlock na(string nb){IMyTerminalBlock gK;gK=(IMyTerminalBlock)GridTerminalSystem.GetBlockWithName(nb);
if(gK==null)throw new Exception(nb+" Not Found");return gK;}public List&lt;T&gt;nc&lt;T&gt;(ref List&lt;T&gt;nd,string
ne=null)where T:class{if(mB.Count&lt;1)mI();if(nd==null)nd=new List&lt;T&gt;();else nd.Clear();for(int e=0;e&lt;
mB.Count;e++){if(mW(mB[e])&amp;&amp;mB[e]is T&amp;&amp;((ne==null)||(ne!=null&amp;&amp;mB[e].CustomName.StartsWith(ne)))){nd.Add((T)mB[e]);
}}return nd;}public List&lt;IMyTerminalBlock&gt;nc&lt;T&gt;(ref List&lt;IMyTerminalBlock&gt;nd,string ne=null)where T:
class{if(mB.Count&lt;1)mI();if(nd==null)nd=new List&lt;IMyTerminalBlock&gt;();else nd.Clear();for(int e=0;e&lt;mB.Count;
e++){if(mW(mB[e])&amp;&amp;mB[e]is T&amp;&amp;((ne==null)||(ne!=null&amp;&amp;mB[e].CustomName.StartsWith(ne)))){nd.Add(mB[e]);
}}return nd;}public List&lt;IMyTerminalBlock&gt;nc&lt;T&gt;(string ne=null)where T:class{var nd=new List&lt;IMyTerminalBlock&gt;();
nc&lt;T&gt;(ref nd,ne);return nd;}public List&lt;IMyTerminalBlock&gt;nf&lt;T&gt;(string Keyword=null)where T:class{if(mB.Count
&lt;1)mI();var nd=new List&lt;IMyTerminalBlock&gt;();for(int e=0;e&lt;mB.Count;e++){if(mB[e]is T&amp;&amp;mW(mB[e])&amp;&amp;Keyword
!=null&amp;&amp;(mB[e].CustomName.Contains(Keyword)||mB[e].CustomData.Contains(Keyword))&amp;&amp;!(mB[e].CustomName.Contains(mw)
||mB[e].CustomData.Contains(mw))){nd.Add(mB[e]);}}return nd;}public List&lt;IMyTerminalBlock&gt;ng&lt;T&gt;(string
ne=null)where T:class{if(mB.Count&lt;1)mI();var nd=new List&lt;IMyTerminalBlock&gt;();for(int e=0;e&lt;mB.Count;
e++){if(mB[e]is T&amp;&amp;Me.CubeGrid==mB[e].CubeGrid&amp;&amp;ne!=null&amp;&amp;(mB[e].CustomName.Contains(ne)||mB[e].CustomData.Contains(ne))
&amp;&amp;!(mB[e].CustomName.Contains(mw)||mB[e].CustomData.Contains(mw))){nd.Add(mB[e]);}}return nd;}public
List&lt;IMyTerminalBlock&gt;nh&lt;T&gt;(string ne=null)where T:class{if(mB.Count&lt;1)mI();var nd=new List&lt;IMyTerminalBlock&gt;();
for(int e=0;e&lt;mB.Count;e++){if(mB[e]is T&amp;&amp;mW(mB[e])&amp;&amp;ne!=null&amp;&amp;mB[e].CustomName==ne){nd.Add(mB[e]);}
}return nd;}IMyTerminalBlock ni=null;string DefaultOrientationBlockInit(){string sInitResults="";var
centerSearch=new List&lt;IMyTerminalBlock&gt;();nc&lt;IMyTerminalBlock&gt;(ref centerSearch,my);if(centerSearch.Count
==0){centerSearch=nf&lt;IMyRemoteControl&gt;(mx);if(centerSearch.Count==0){nc&lt;IMyRemoteControl&gt;(ref centerSearch);
if(centerSearch.Count==0){nc&lt;IMyCockpit&gt;(ref centerSearch);int i=0;for(;i&lt;centerSearch.Count;i++){Echo("Checking Controller:"
+centerSearch[i].CustomName);if(centerSearch[i]is IMyCryoChamber)continue;break;}if(i&gt;=centerSearch.Count)
{sInitResults+="!!NO valid Controller";Echo("No Controller found");}else{sInitResults+="S";Echo("Using good ship Controller: "
+centerSearch[i].CustomName);}}else{sInitResults+="R";Echo("Using First Remote control found: "+centerSearch[0].CustomName);
}}}else{sInitResults+="N";Echo("Using Named: "+centerSearch[0].CustomName);}if(centerSearch.Count&gt;0)
ni=centerSearch[0];return sInitResults;}string nl="!NAV";void nm(nK f){f.ol(mz,"GyroIgnore",ref nl,true);
}double nn=0.9;int no=3;int np=-1;IMyShipController nq;List&lt;IMyGyro&gt;nr;float ns=0.01f;bool GyroMain(string
argument){if(nq==null)nH();if(nq is IMyShipController){Vector3D nv=(nq as IMyShipController).GetNaturalGravity();
return nt(argument,nv,ni);}else{Echo("No Controller for gravity");}return true;}bool nt(string nu,Vector3D
nw,IMyTerminalBlock nx){bool ny=true;if(nq==null)nH();Matrix or;nx.Orientation.GetMatrix(out or);Vector3D
nz;nu=nu.ToLower();if(nu.Contains("rocket"))nz=or.Backward;else if(nu.Contains("up"))nz=or.Up;else if
(nu.Contains("backward"))nz=or.Backward;else if(nu.Contains("forward"))nz=or.Forward;else nz=or.Down;
nw.Normalize();for(int i=0;i&lt;nr.Count;++i){var g=nr[i];g.Orientation.GetMatrix(out or);var nA=Vector3D.Transform(nz,
MatrixD.Transpose(or));var nB=Vector3D.Transform(nw,MatrixD.Transpose(g.WorldMatrix.GetOrientation()));
var nC=Vector3D.Cross(nA,nB);double nD=Vector3D.Dot(nA,nB);double nE=nC.Length();nE=Math.Atan2(nE,Math.Sqrt(Math.Max(0.0,
1.0-nE*nE)));if(nD&lt;0)nE=Math.PI-nE;if(nE&lt;ns){g.GyroOverride=false;continue;}float nF=g.GetMaximum&lt;float&gt;("Yaw");
double nG=nF*(nE/Math.PI)*nn;nG=Math.Min(nF,nG);nG=Math.Max(0.01,nG);nC.Normalize();nC*=nG;float Y=-(float)nC.X;
g.Pitch=Y;float W=-(float)nC.Y;g.Yaw=W;float ba=-(float)nC.Z;g.Roll=ba;g.GyroOverride=true;ny=false;
}return ny;}string nH(){string s="";var l=new List&lt;IMyTerminalBlock&gt;();nq=ni as IMyShipController;if
(nq==null){if(l.Count&lt;1)return"No RC!";}nJ();GridTerminalSystem.GetBlocksOfType&lt;IMyGyro&gt;(l,x=&gt;x.CubeGrid
==ni.CubeGrid);var l2=new List&lt;IMyTerminalBlock&gt;();int nI=0;for(int i=0;i&lt;l.Count;i++){if(l[i].CustomName.Contains(nl)
||l[i].CustomData.Contains(nl)){nI++;continue;}l2.Add(l[i]);}nr=l2.ConvertAll(x=&gt;(IMyGyro)x);if(no&gt;0)
if(nr.Count&gt;no)nr.RemoveRange(no,nr.Count-no);else if((np-nI)&gt;0){int gV=nr.Count-(np-nI);nr.RemoveRange(gV,
(np-nI));}nJ();s+="GYRO#"+nr.Count.ToString("00")+"#";return s;}void nJ(){if(nr!=null){for(int i=0;i
&lt;nr.Count;++i){nr[i].GyroOverride=false;nr[i].Enabled=true;}}}public class nK{Dictionary&lt;string,string&gt;
nL;Dictionary&lt;string,string[]&gt;nM;Dictionary&lt;string,Dictionary&lt;string,string&gt;&gt;nN;char nO='[';char nP=
']';string nQ="";MyGridProgram cu;string nR="";static string[]nS={"true","yes","on","1"};const StringComparison
nT=StringComparison.OrdinalIgnoreCase;const char nU='=';public bool nV{get;private set;}=false;public
nK(MyGridProgram pg,string hm){cu=pg;nL=new Dictionary&lt;string,string&gt;();nM=new Dictionary&lt;string,string[]&gt;();
nN=new Dictionary&lt;string,Dictionary&lt;string,string&gt;&gt;();nW(hm);}public int nW(string hm){hm.TrimEnd();
if(nR==hm){return nL.Count;}nL.Clear();nM.Clear();nN.Clear();nQ="";nV=false;nR=hm;string[]nX=hm.Split('\n');
for(int nY=0;nY&lt;nX.Count();nY++){string nZ="";nX[nY].Trim();if(nX[nY].StartsWith(nO.ToString())){string
co="";for(int oa=1;oa&lt;nX[nY].Length;oa++)if(nX[nY][oa]==nP)break;else co+=nX[nY][oa];if(co!=""){nZ=co.ToUpper();
}else continue;nY++;string ob="";var oc=new string[nX.Count()-nY];int od=0;var oe=new Dictionary&lt;string,
string&gt;();for(;nY&lt;nX.Count();nY++){nX[nY].Trim();if(nX[nY].StartsWith(nO.ToString())){nY--;break;}ob
+=nX[nY]+"\n";oc[od++]=nX[nY];if(nX[nY].Contains(nU)){string[]of=nX[nY].Split('=');if(of.Count()&gt;1){
string og=of[0];string J="";for(int i1=1;i1&lt;of.Count();i1++){J+=of[i1];if(i1+1&lt;of.Count())J+=nU;}oe.Add(og,
J);}}}nN.Add(nZ,oe);nM.Add(nZ,oc);nL.Add(nZ,ob);}else{nQ+=nX[nY]+"\n";}}return nL.Count;}public string
oh(string oi){string ob="";if(nL.ContainsKey(oi))ob=nL[oi];return ob;}public string[]oj(string oi){string[]
ok={""};if(nM.ContainsKey(oi))ok=nM[oi];return ok;}public bool ol(string oi,string og,ref string om,
bool on=false){if(nN.ContainsKey(oi)){var oo=nN[oi];if(oo.ContainsKey(og)){om=oo[og];return true;}}if
(on)oy(oi,og,om);return false;}public bool ol(string oi,string og,ref long op,bool on=false){string oq
="";if(!ol(oi,og,ref oq)){if(on){oy(oi,og,op);}return false;}op=Convert.ToInt64(oq);return true;}public
bool ol(string oi,string og,ref int or,bool on=false){string oq="";if(!ol(oi,og,ref oq)){if(on){oy(oi,
og,or);}return false;}or=Convert.ToInt32(oq);return true;}public bool ol(string oi,string og,ref double
os,bool on=false){string oq="";if(!ol(oi,og,ref oq)){if(on){oy(oi,og,os);}return false;}bool ot=double.TryParse(oq,
out os);return true;}public bool ol(string oi,string og,ref float ou,bool on=false){string oq="";if(!ol(oi,
og,ref oq)){if(on){oy(oi,og,ou.ToString());}return false;}bool ot=float.TryParse(oq,out ou);return true;
}public bool ol(string oi,string og,ref DateTime ov,bool on=false){string oq="";if(!ol(oi,og,ref oq))
{if(on){oy(oi,og,ov);}return false;}ov=DateTime.Parse(oq);return true;}public bool ol(string oi,string
og,ref Vector3D ow,bool on=false){string oq="";if(!ol(oi,og,ref oq)){if(on){oy(oi,og,ow);}return false;
}double x1,y1,z1;hB(oq,out x1,out y1,out z1);ow.X=x1;ow.Y=y1;ow.Z=z1;return true;}public bool ol(string
oi,string og,ref bool ox,bool on=false){string oq="";if(!ol(oi,og,ref oq)){if(on){oy(oi,og,ox);}return
false;}ox=nS.Any(c=&gt;string.Equals(oq,c,nT));return true;}public bool oy(string section,string key,string
oq){if(nL.ContainsKey(section)){nL[section]="";}else{nL.Add(section,"");nV=true;}if(nN.ContainsKey(section))
{var oe=new Dictionary&lt;string,string&gt;();var oo=nN[section];if(oo.ContainsKey(key)){if(oo[key]==oq)return
false;oo[key]=oq;}else{oo.Add(key,oq);}nV=true;}else{var oe=new Dictionary&lt;string,string&gt;();oe.Add(key,
oq);nN.Add(section,oe);nV=true;}return true;}public bool oy(string oi,string og,Vector3D ow){oy(oi,og,
hA(ow));return true;}public bool oy(string oi,string og,bool ox){oy(oi,og,ox.ToString());return true;
}public bool oy(string oi,string og,int oz){oy(oi,og,oz.ToString());return true;}public bool oy(string
oi,string og,long oA){oy(oi,og,oA.ToString());return true;}public bool oy(string oi,string og,DateTime
ov){oy(oi,og,ov.ToString());return true;}public bool oy(string oi,string og,float ou){oy(oi,og,ou.ToString());
return true;}public bool oy(string oi,string og,double os){oy(oi,og,os.ToString());return true;}public
void oB(string oi,string ob){ob.TrimEnd();oi=oi.ToUpper();if(nL.ContainsKey(oi)){if(nL[oi]!=ob){nL[oi]
=ob;nV=true;}}else{nV=true;nL.Add(oi,ob);}}public string oC(bool oD=true){string oE="";string s1=nQ.Trim();
if(s1!="")oE=s1+"\n";foreach(var kv in nL){oE+=nO+kv.Key.Trim()+nP+"\n";if(kv.Value.TrimEnd()==""){string
oF="";if(nN.ContainsKey(kv.Key)){foreach(var dk in nN[kv.Key]){oF+=dk.Key+nU+dk.Value+"\n";}}oF+="\n";
oE+=oF;}else{oE+=kv.Value.Trim()+"\n\n";}}if(oD){nV=false;nR=oE;}return oE;}bool hB(string hC,out double
x,out double y,out double z){string[]hd=hC.Trim().Split(',');if(hd.Length&lt;3){hd=hC.Trim().Split(':');
}x=0;y=0;z=0;if(hd.Length&lt;3)return false;bool hg=double.TryParse(hd[0].Trim(),out x);bool hh=double.TryParse(hd[1].Trim(),
out y);bool hi=double.TryParse(hd[2].Trim(),out z);if(!hg||!hh||!hi){return false;}return true;}string
hA(Vector3D v){string s;s=v.X.ToString("0.00")+":"+v.Y.ToString("0.00")+":"+v.Z.ToString("0.00");return
s;}}List&lt;IMyTerminalBlock&gt;oG=new List&lt;IMyTerminalBlock&gt;();string oH(){oG.Clear();oG=nc&lt;IMyLightingBlock&gt;();
return"L"+oG.Count.ToString("00");}void oI(List&lt;IMyTerminalBlock&gt;oG,Color c){for(int i=0;i&lt;oG.Count;
i++){var oJ=oG[i]as IMyLightingBlock;if(oJ==null)continue;if(oJ.Color.Equals(c)&amp;&amp;oJ.Enabled){continue;
}oJ.Color=c;}}List&lt;IMySensorBlock&gt;oK=new List&lt;IMySensorBlock&gt;();string oL="[WICO]";double oM=0.125;const
string oN="SENSORS";void oO(nK f){f.ol(oN,"SensorUse",ref oL,true);f.ol(oN,"SensorSettleWaitMS",ref oM,
true);}string oP(bool oQ=true){oK.Clear();List&lt;IMyTerminalBlock&gt;oR=nf&lt;IMySensorBlock&gt;(oL);foreach(var
sb1 in oR){oK.Add(sb1 as IMySensorBlock);}if(oQ)oU();return"S"+oK.Count.ToString("00");}List&lt;IMySensorBlock&gt;
oS(string oT=null){List&lt;IMySensorBlock&gt;oS=new List&lt;IMySensorBlock&gt;();for(int i1=0;i1&lt;oK.Count;i1++){
IMySensorBlock s=oK[i1]as IMySensorBlock;if(s==null)continue;if(s.IsActive&amp;&amp;s.Enabled&amp;&amp;!s.LastDetectedEntity.IsEmpty())
{oS.Add(oK[i1]);}}return oS;}void oU(){for(int i1=0;i1&lt;oK.Count;i1++){IMySensorBlock oV=oK[i1]as IMySensorBlock;
if(oV==null)continue;oV.LeftExtend=oV.RightExtend=oV.TopExtend=oV.BottomExtend=oV.FrontExtend=oV.BackExtend
=1;oV.Enabled=false;}}void oW(IMyTerminalBlock tb,float oX,float oY,float oZ,float pa,float pb,float
pc){IMySensorBlock oV=tb as IMySensorBlock;if(oV==null)return;float pd=oV.Position.X*0.5f;float pe=oV.Position.Y
*0.5f;float pf=oV.Position.Z*0.5f;Echo("SB.x.y.z="+pd.ToString("0.0")+":"+pe.ToString("0.0")+":"+pf.ToString("0.0"));
Echo("MIN="+Me.CubeGrid.Min.ToString()+"\nMAX:"+Me.CubeGrid.Max.ToString());float pg;pg=(float)(hD.hU()
/2-pd+oX);oV.LeftExtend=Math.Max(pg,1.0f);pg=(float)(hD.hU()/2+pd+oY);oV.RightExtend=Math.Max(pg,1.0f);
pg=(float)(hD.hW()/2-pe+oZ);oV.TopExtend=Math.Max(pg,1.0f);pg=(float)(hD.hW()/2+pe+pa);oV.BottomExtend
=Math.Max(pg,1.0f);pg=(float)(hD.hS()+pf+pb);oV.FrontExtend=Math.Max(pg,1.0f);pg=(float)(hD.hS()-pf+
pc);oV.BackExtend=Math.Max(pg,1.0f);oV.Enabled=true;}bool ph(IMySensorBlock s1,ref bool pi,ref bool pj,
ref bool pk){pi=false;pj=false;pk=false;if(s1!=null&amp;&amp;s1.IsActive&amp;&amp;s1.Enabled&amp;&amp;!s1.LastDetectedEntity.IsEmpty())
{List&lt;MyDetectedEntityInfo&gt;pl=new List&lt;MyDetectedEntityInfo&gt;();s1.DetectedEntities(pl);for(int j1=0;
j1&lt;pl.Count;j1++){if(pl[j1].Type==MyDetectedEntityType.Asteroid){pi=true;}else if(pl[j1].Type==MyDetectedEntityType.LargeGrid)
{pj=true;}else if(pl[j1].Type==MyDetectedEntityType.SmallGrid){pk=true;}}}return pi||pj||pk;}List&lt;IMyTerminalBlock&gt;
pm=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;pn=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
po=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;pp=new List&lt;IMyTerminalBlock&gt;();string pq(IMyTerminalBlock
ci){pm.Clear();pn.Clear();po.Clear();pp.Clear();nc&lt;IMyMotorSuspension&gt;(ref pm);for(int i=0;i&lt;pm.Count;
i++){if(pm[i].CustomName.Contains("[SLED]")||pm[i].CustomData.Contains("[SLED]")){pn.Add(pm[i]);if(pm[i].CustomName.Contains("[REAR]")
||pm[i].CustomData.Contains("[FRONT]")){po.Add(pm[i]);}if(pm[i].CustomName.Contains("[FRONT]")||pm[i].CustomData.Contains("[FRONT]"))
{pp.Add(pm[i]);}}}return"W"+pm.Count.ToString("0")+"WS"+pn.Count.ToString("0")+"SR"+po.Count.ToString("0")
+"SF"+pp.Count.ToString("0");}bool pr(){if(pn.Count&gt;0)return true;return false;}void ps(){for(int i1
=0;i1&lt;pn.Count;i1++){var w1=pn[i1]as IMyMotorSuspension;w1.SetValueFloat("Friction",0);}}</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>116722331071530135</EntityId>
              <Min x="1" y="7" z="9" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.2" y="-0.22" z="-0.45" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>PB Wico Craft Spare</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>public Program()
{
    // The constructor, called only once every session and
    // always before any other method is called. Use it to
    // initialize your script. 
    //     
    // The constructor is optional and can be removed if not
    // needed.
    // 
    // It's recommended to set RuntimeInfo.UpdateFrequency 
    // here, which will allow your script to run itself without a 
    // timer block.
}

public void Save()
{
    // Called when the program needs to save its state. Use
    // this method to save your state to the Storage field
    // or some other means. 
    // 
    // This method is optional and can be removed if not
    // needed.
}

public void Main(string argument, UpdateType updateSource)
{
    // The main entry point of the script, invoked every time
    // one of the programmable block's Run actions are invoked,
    // or the script updates itself. The updateSource argument
    // describes where the update came from.
    // 
    // The method itself is required, but the arguments above
    // can be removed if not needed.
}
</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>138405796844652104</EntityId>
              <Min x="-1" y="7" z="9" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.2" y="-0.22" z="-0.45" />
              <BuiltBy>144115188075855898</BuiltBy>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">[WORLD]
MaxWorldMps=100

[GRIDS]
NoFollow=NOFOLLOW
BlockIgnore=!WCC
OrientationBlockContains=[NAV]
OrientationBlockNamed=Craft Remote Control
GyroIgnore=!NAV

[LOGGING]
TextPanelReport=Craft Report
StatusName=Wico Craft Status
LongStatus=Wico Craft Log
RangeReport=[RANGE]

[CONNECTORS]
BaseConnector=[BASE]
DockConnector=[DOCK]
GearUse=[DOCK]

[CAMERAS]
CameraViewOnly=[VIEW]

[POWER]
batterypcthigh=80
batterypctlow=20

[CARGO]
cargopctmin=5

</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>PB Wico Craft Main Sled</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>/*
* Wico craft controller Master Control Script
*
* Control Script for Rovers and Drones and Oribtal craft
* 
* Uncompressed source for this script here: https://github.com/Wicorel/SpaceEngineers/tree/master/MDK%20Craft%20Control
 * 
 * 
 * Handles:
* Master timer for sub-modules
* Calculates ship speed and vectors (obsolete)
* Calculates simspeed (obsolete)
* Configure craft_operation settings
* making sure antenna doesn't get turned off (bug in SE turn off antenna when trying to remotely connect to grid)
* 
* Calculates cargo and power percentages and cargo multiplier and hydro fill and oxy tank fill
 * 
 * Detects grid changes and initiates re-init
 * 
* * 
* MODE_IDLE
* MODE_ATTENTION
* 
* Commands:
* 
* setsimspeed &lt;value&gt;: sets the current simspeed so the calculations can be accurate. (obsolete)
* init: re-init all blocks
* idle : force MODE_IDLE
* coast: turns on/off backward thrusters
* setvaluef &lt;blockname&gt;:&lt;property&gt;:&lt;value&gt;  -&gt; sets specified block's property to specified value
* Example:
*  setvaluef Advanced Rotor:UpperLimit:-24
*
* Need:

* Want:
* 
* menu management for commands (including sub-modules)
* 
* minimize serialized data and make sub-modules pass their own seperately, OR support extra data in state
* 
* common function for 'handle this' combining 'me' grid and an exclusion name check
*
* multi-script handling for modes
* 
* * advanced trigger: only when module handles that mode... (so need mode-&gt;module dictionary)
* override base modes?
*
*
*
* WANT:
* setvalueb
* Actions
* Trigger timers on 'events'.
* set antenna name to match mode?
* *
* 2.0 Removed many built-in functions to make script room. These functions were duplicated in sub-modules anyway.
* 2.0.1
* 0.2 Remove items from serialize that main control no longer calculates (cargo, battery, etc).
* if simspeed&gt;1.01, assume 1.0 and recalculate.
* 0.3 re-org code sections
* Pass arguments to sub-modules 
* 0.4 (re)integrate power and cargo
* 0.4a process multiple arguments on a command line
* 0.4b check mass change and request reinit including sub-modules.
* 
* 2.1 Code Reorg
* Cache all blocks and grids.  Support for multi-grid constructions.
* !Needs handling for grids connected via connectors..
* 
* .1a Don't force re-init on working projector.
* .1b Add 'brake' command
* Add braking for sleds (added wheelinit)
* 
* 2.2 PB changes in 1.172
* 
* .2a Added modes. Default PB name
* 
* 2.3 Start to add Power information
* 
* .3a Add drills and ejectors to reset motion. Add welders, drills, connectors and grinders to cargo check.
* don't set PB name because it erases settings.. :(
* 
* .3b getblocks fixes when called before gridsinit
* 
* 3.0 remove older items from serialize that are no longer needed
* removed NAV support
* fixed battery maxoutput values
* 
* 3.0a support no remote control blocks. Check for Cryo when getting default controller.
* 3.0b sBanner
* 3.0c caching optimizations
* 3.0d fix connectorsanyconnectors not using localdock
* 3.0e Add Master Reset command
* 3.0f 
* check for grid changes and re-init 
* rotor NOFOLLOW
* ignore projectors with !WCC in name or customdata
* ignore 'cutter' thrusters
* 
* 3.0g Fix problem with allBlockCount being loaded after it has changed
* 
* 3.0H 
* fix problems with docking/undocking and perm re-init
* 
* 05/13: fix GetBlocksContains&lt;T&gt;()
* 
* 3.0I MDK Version 08/20/2017   MDK: https://github.com/malware-dev/MDK-SE/
* Uncompressed source for this script here: https://github.com/Wicorel/SpaceEngineers/tree/master/MDK%20Craft%20Control
* 
* 3.0J Add moduleDoPreModes() to Main()
* Move pre-mode to moduleDoPreModes()
* add clearing of gpsPanel to moduleDoPreModes()
* 
* 3.0K more init states if larger number of blocks in grid system.
* 
* 3.0K2  search order for text panels
* 
* 3.1 Verison for SE 1.185 PB Major changes
* 
* 3.1A init cycle optimizations
* 
* 3.1B Handle no controller (stations, etc)
* 12092017
* 
* 3.1C 12132017
* don't count ejectors in cargo%
* fix bug in DoTriggerMain() causing updates to stop
* 
* 3.1D Section processing for save information (text panels)
* fix bug in serialize wrting z,y z, instead of x,y,z (oops)
* 
* 3.2 INI WCCM 01062018
*
* 3.2A
* FilledRatio Change
* 
* 3.2B Lots of INI processing
* 
* 3.3 Handle multiple output panels.
* Only write to panels at end
* 
* 3.3A Redo Serlialize.
* Module Serlialize
* 
* 3.4 
* add namecameras
* 
* 
*/
string a="Wico Craft";string b="Master";string c="3.4";const string d="0.00";double e=2;double f=-1;double
g=5;double h=-1;void i(){ew("clear",eh);ew("clear",gpsPanel);string j="";if(fc&gt;0){j+="Ship\n";}else{
j+="Station\n";}if(jH())j+="Connected";else j+="Not Connected";if(jG())j+="\nLocked";else j+=" : Not Locked";
Echo(j);eI(j);j="";if(jZ)Echo("FAST!");if(f&gt;e){f=0;cv();}else{if(f&lt;0){f=e+5;}f+=Runtime.TimeSinceLastRun.TotalSeconds;
}Echo("Cargo="+cm.ToString()+"%");if(h&gt;g){h=0;G(0,false);}else{if(h&lt;0){h=g+5;}h+=Runtime.TimeSinceLastRun.TotalSeconds;
}j+="Batteries: #="+y.Count.ToString();if(y.Count&gt;0&amp;&amp;w&gt;0){j+=" : "+(F()/w*100).ToString("0.00")+"%";
j+="\n Storage="+batteryPercentage.ToString()+"%";}Echo(j);j="";Echo("Solar: #"+hf.Count.ToString()+
" "+hg.ToString("0.00"+"MW"));float k=0;gH(out k);if(gD.Count&gt;0){j="Reactors: #"+gD.Count.ToString();
j+=" - "+gC.ToString("0.00")+"MW\n";float l=(float)(k/mN*100);j+=" Curr Output="+k.ToString("0.00")+
"MW"+" : "+l.ToString("0.00")+"%";}Echo(j);j="";Echo("TotalMaxPower="+mN.ToString("0.00"+"MW"));TanksCalculate();
if(dy&gt;=0){Echo("O:"+dy.ToString("000.0%"));}else Echo("No Oxygen Tanks");if(dx&gt;=0){Echo("H:"+dx.ToString("000.0%"));
}else Echo("No Hydrogen Tanks");if(dk.Count&gt;0){Echo(dk.Count+" Gas Gens");}if(kh&gt;=0){Echo("Grav="+kh.ToString(d));
eI("Planet Gravity "+kh.ToString(d)+" g");eI(eJ((int)(kh/1.1*100)));}else eI("ERROR: No Remote Control found!");
ew("clear",gpsPanel);}void m(){km();}void n(bool o=false){@in(hk);lN();gn(gc);gn(gd);if(lk is IMyRemoteControl)
((IMyRemoteControl)lk).SetAutoPilotEnabled(false);if(lk is IMyShipController)((IMyShipController)lk).DampenersOverride
=true;if(!o)ks();}void p(){di();n();gU=0;gV="";sPassedArgument="init";gP.ma("");gJ();jZ=true;}void q()
{gS=cG;if((gS&amp;cQ)==cG){int r=0;if(Me.CustomName.ToLower().Contains("nad"))gS|=cM;if(Me.CustomName.ToLower().Contains("rotor"))
gS|=cI;else if(Me.CustomName.ToLower().Contains("sled"))gS|=CRAFT_MODE_SLED;if(hx&gt;0){r++;}if(hy&gt;0){r++;
}if(hz&gt;0){r++;}if(gc.Count&gt;0&amp;&amp;gd.Count&gt;0)gS|=cI;if(mS.Count&gt;0&amp;&amp;r&gt;0)gS|=CRAFT_MODE_SLED;if(r&gt;1||Me.CustomName.ToLower().Contains("orbital"))
gS|=CRAFT_MODE_ORBITAL;if(Me.CustomName.ToLower().Contains("rocket"))gS|=cK;if(Me.CustomName.ToLower().Contains("pet"))
gS|=cL;if(Me.CustomName.ToLower().Contains("noautogyro"))gS|=cN;if(Me.CustomName.ToLower().Contains("nopower"))
gS|=cO;if(Me.CustomName.ToLower().Contains("notank"))gS|=cP;}}void s(){string j="";j+=kc.ToString(d)
+" m/s";j+=" ("+(kc*3.6).ToString(d)+"km/h)";eI(j);}void t(lO u){}void v(lO u){}double w=-1;int batteryPercentage
=-1;List&lt;IMyTerminalBlock&gt;y=new List&lt;IMyTerminalBlock&gt;();bool z(IMyTerminalBlock A){if(A is IMyBatteryBlock)
{IMyBatteryBlock B=A as IMyBatteryBlock;return B.OnlyRecharge;}else return false;}bool C(IMyTerminalBlock
A){if(A is IMyBatteryBlock){IMyBatteryBlock B=A as IMyBatteryBlock;return B.OnlyDischarge;}else return
false;}bool D(IMyTerminalBlock A){if(A is IMyBatteryBlock){IMyBatteryBlock B=A as IMyBatteryBlock;return
B.IsCharging;}else return false;}void E(){y.Clear();batteryPercentage=-1;w=-1;GridTerminalSystem.GetBlocksOfType&lt;IMyBatteryBlock&gt;(y,
kZ);if(y.Count&gt;0)w=0;foreach(var tb in y){IMyBatteryBlock r=tb as IMyBatteryBlock;w+=r.MaxOutput;}}double
F(){double j=0;foreach(var tb in y){IMyBatteryBlock r=tb as IMyBatteryBlock;j+=r.CurrentOutput;}return
j;}bool G(int H,bool I=true,bool J=false){float K=0;float L=0;bool M=false;float f1;if(y.Count&lt;1)E();
if(y.Count&lt;1)return false;batteryPercentage=0;for(int ib=0;ib&lt;y.Count;ib++){float N=0;float O=0;int P
=100;IMyBatteryBlock b;b=y[ib]as IMyBatteryBlock;f1=b.MaxStoredPower;O+=f1;K+=f1;f1=b.CurrentStoredPower;
N+=f1;L+=f1;if(O&gt;0){f1=((N*100)/O);f1=(float)Math.Round(f1,0);P=(int)f1;}string s;s="";if(z(y[ib]))s
+="R";else if(C(y[ib]))s+="D";else s+="a";float Q;Q=b.CurrentInput;if(Q&gt;0)s+="+";else s+=" ";Q=b.CurrentOutput;
if(Q&gt;0)s+="-";else s+=" ";s+=P+"%";s+=":"+y[ib].CustomName;if(I)Echo(s);if(z(y[ib])&amp;&amp;H&gt;0){if(P&lt;H)M=true;
else if(P&gt;99)b.OnlyRecharge=false;}if(!b.OnlyRecharge&amp;&amp;P&lt;H&amp;&amp;!M){b.OnlyDischarge=false;b.OnlyRecharge
=true;b.SemiautoEnabled=false;M=true;}}if(K&gt;0){f1=((L*100)/K);f1=(float)Math.Round(f1,0);batteryPercentage
=(int)f1;}else batteryPercentage=-1;return M;}void R(bool I=false,bool S=true){Echo(y.Count+" Batteries");
string s;for(int i=0;i&lt;y.Count;i++){IMyBatteryBlock b;b=y[i]as IMyBatteryBlock;b.OnlyRecharge=!S;b.OnlyDischarge
=S;b.SemiautoEnabled=false;s=b.CustomName+": ";if(b.OnlyRecharge){s+="RECHARGE/";}else s+="NOTRECHARGE/";
if(b.OnlyDischarge){s+="DISCHARGE";}else{s+="NOTDISCHARGE";}if(I)Echo(s);}}void T(List&lt;IMyTerminalBlock&gt;
U,bool V=true){foreach(var b in U){IMyFunctionalBlock f=b as IMyFunctionalBlock;if(f==null)continue;
f.Enabled=V;}}void W(List&lt;IMyTerminalBlock&gt;U){foreach(var b in U){IMyFunctionalBlock f=b as IMyFunctionalBlock;
if(f==null)continue;f.Enabled=!f.Enabled;}}string X="[VIEW]";Matrix Y=new Matrix(1,0,0,0,0,1,0,0,0,0,
1,0,0,0,0,1);List&lt;IMyTerminalBlock&gt;Z=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;ba=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;bb=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;bc=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;bd=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;be=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;bf=new List&lt;IMyTerminalBlock&gt;();IMyTerminalBlock bg=null;private MyDetectedEntityInfo
bh;string bi="CAMERAS";void bj(lO u){u.mq(bi,"CameraViewOnly",ref X,true);}bool bk(List&lt;IMyTerminalBlock&gt;
bl,double bm=100,float bn=0,float bo=0){double bp=0;bg=null;for(int i=0;i&lt;bl.Count;i++){double bq=((IMyCameraBlock)bl[i]).AvailableScanRange;
if(bq&gt;bp){bp=bq;bg=bl[i];}}var br=bg as IMyCameraBlock;if(bg==null){return false;}if(br.CanScan(bm))
{bh=br.Raycast(bm,bn,bo);bg=br;if(!bh.IsEmpty())da(bh);return true;}else{}return false;}bool bk(List&lt;IMyTerminalBlock&gt;
bl,Vector3D bs){double bp=0;bg=null;for(int i=0;i&lt;bl.Count;i++){double bq=((IMyCameraBlock)bl[i]).AvailableScanRange;
if(bq&gt;bp){bp=bq;bg=bl[i];}}var br=bg as IMyCameraBlock;if(bg==null)return false;{bh=br.Raycast(bs);bg
=br;if(!bh.IsEmpty())da(bh);return true;}}double bt(List&lt;IMyTerminalBlock&gt;bl){double bu=0;for(int i=
0;i&lt;bl.Count;i++){IMyCameraBlock br=bl[i]as IMyCameraBlock;if(bu&lt;br.AvailableScanRange)bu=br.AvailableScanRange;
}return bu;}string bv(IMyTerminalBlock bw){Z.Clear();ba.Clear();bb.Clear();bc.Clear();bd.Clear();be.Clear();
bf.Clear();if(bw==null)return"\nCameras:No OrientationBlock";GridTerminalSystem.GetBlocksOfType&lt;IMyCameraBlock&gt;(bf,
(x1=&gt;x1.CubeGrid==Me.CubeGrid));Matrix bx;bw.Orientation.GetMatrix(out bx);Matrix.Transpose(ref bx,out
bx);for(int i=0;i&lt;bf.Count;++i){if(bf[i].CustomName.Contains(X))continue;IMyCameraBlock br=bf[i]as IMyCameraBlock;
br.EnableRaycast=true;Matrix by;br.Orientation.GetMatrix(out by);Vector3 bz=Vector3.Transform(by.Forward,
bx);if(bz==Y.Left){bd.Add(bf[i]);}else if(bz==Y.Right){be.Add(bf[i]);}else if(bz==Y.Backward){ba.Add(bf[i]);
}else if(bz==Y.Forward){Z.Add(bf[i]);}else if(bz==Y.Up){bc.Add(bf[i]);}else if(bz==Y.Down){bb.Add(bf[i]);
}}string s;s="CS:&lt;";s+="F"+Z.Count.ToString("00");s+="B"+ba.Count.ToString("00");s+="D"+bb.Count.ToString("00");
s+="U"+bc.Count.ToString("00");s+="L"+bd.Count.ToString("00");s+="R"+be.Count.ToString("00");s+="&gt;";
return s;}void bA(List&lt;IMyTerminalBlock&gt;bl,string bB){for(int i=0;i&lt;bl.Count;i++){if(!bl[i].CustomName.Contains(bB))
bl[i].CustomName="Camera "+(i+1).ToString()+" "+bB;}}List&lt;IMyTerminalBlock&gt;bC=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;bD=new List&lt;IMyTerminalBlock&gt;();string bE(IMyTerminalBlock bw){string s="";if(bf.Count
&lt;1)s+=bv(bw);bC.Clear();bD.Clear();foreach(var camera in bb){if(camera.CustomName.ToLower().Contains("fore")
||camera.CustomData.ToLower().Contains("fore"))bC.Add(camera);else if(camera.CustomName.ToLower().Contains("aft")
||camera.CustomData.ToLower().Contains("aft"))bD.Add(camera);}s+="HCS:&lt;";s+="F"+bC.Count.ToString("00");
s+="A"+bD.Count.ToString("00");s+="&gt;";return s;}public class bF{bool bG=false;Program bH;public double
bI=1250;double bJ=5000;float bK=25f;float bL=25f;double bM=5;float bN=3;float bO=0.5f;float bP=0;float
bQ=0;float bR=0;float bS=0;List&lt;IMyTerminalBlock&gt;bT=new List&lt;IMyTerminalBlock&gt;();private int bU=0;private
int bV=1;public MyDetectedEntityInfo bh;public List&lt;MyDetectedEntityInfo&gt;bW=new List&lt;MyDetectedEntityInfo&gt;();
public IMyTerminalBlock bg=null;public bF(Program pg,List&lt;IMyTerminalBlock&gt;U,double bX=1250,float bY
=45f,float bZ=45f,float ca=2,float cb=1,float cc=0.5f,double cd=5000){bH=pg;bG=false;bT.Clear();bW.Clear();
bh=new MyDetectedEntityInfo();foreach(var b in U){if(b is IMyCameraBlock){bT.Add(b);IMyCameraBlock c
=b as IMyCameraBlock;c.EnableRaycast=true;if(bK&gt;c.RaycastConeLimit)bK=c.RaycastConeLimit;if(bL&gt;c.RaycastConeLimit)
bL=c.RaycastConeLimit;}}if(bX&gt;cd)cd=bX;bI=bX;bK=bY;bL=bZ;bM=ca;bN=cb;bO=cc;bJ=cd;bP=0;bQ=0;bR=0;bS=0;
bU=0;bV=bT.Count;}public bool ce(){return bG;}void cf(MyDetectedEntityInfo bh){bool cg=true;for(int i
=0;i&lt;bW.Count;i++){if(bW[i].EntityId==bh.EntityId)cg=false;}if(cg){bW.Add(bh);}}public bool ch(){if(bT.Count
&lt;1)bG=true;if(bG)return false;bool ci=false;for(int cj=0;cj&lt;bV;cj++){if(bH.bk(bT,bI,bS,bR)){bh=bH.bh;
if(!bh.IsEmpty()){bool ck=true;if((bh.Type==MyDetectedEntityType.LargeGrid)||(bh.Type==MyDetectedEntityType.SmallGrid))
{if(bH.la(bh.EntityId)){ck=false;}}if(ck){bH.fa+="\nDoScan HIT!";cf(bh);ci=true;}}bU++;if(bS==0&amp;&amp;bR==
0){bP=bO;bQ=bO;bU=0;}if(bU&gt;3){bU=0;bQ+=Math.Abs(bQ/bN)+bO;if(Math.Abs(bQ)&gt;bK){bU=0;bQ=0;bP+=Math.Abs(bP
/bN)+bO;}if(Math.Abs(bP)&gt;bL){bP=0;bQ=0;bU=0;{bI*=bM;if(bI&gt;bJ){bG=true;return false;}}}}switch(bU){case
0:bS=bP;bR=bQ;break;case 1:bS=-bP;bR=bQ;break;case 2:bS=bP;bR=-bQ;break;case 3:bS=-bP;bR=-bQ;break;}
}}return ci;}}int cl=5;int cm=-1;double cn=-1;string co="CARGO";void cp(lO u){u.mq(co,"cargopctmin",
ref cl,true);}List&lt;IMyTerminalBlock&gt;cq=null;bool cr=false;double cs=0.0;void ct(){var cu=new List&lt;IMyTerminalBlock&gt;();
if(cq==null)cq=new List&lt;IMyTerminalBlock&gt;();else cq.Clear();lf&lt;IMyCargoContainer&gt;(ref cu);cq.AddRange(cu);
cu.Clear();lf&lt;IMyShipConnector&gt;(ref cu);foreach(var c in cu){if(c.CustomName.Contains("Ejector")||c.CustomData.Contains("Ejector"))
continue;else cq.Add(c);}cu.Clear();lf&lt;IMyShipDrill&gt;(ref cu);cq.AddRange(cu);cu.Clear();lf&lt;IMyShipWelder&gt;(ref
cu);cq.AddRange(cu);cu.Clear();lf&lt;IMyShipGrinder&gt;(ref cu);cq.AddRange(cu);cm=-1;cn=-1;}void cv(){if(cq
==null)ct();if(cq.Count&lt;1){cm=-1;cn=-1;return;}cs=0.0;double cw=0.0;double cx=0;for(int i=0;i&lt;cq.Count;
i++){cw+=cy(cq[i]);}if(cw&gt;0){cx=(cs/cw)*100;}else{cx=100;}cm=(int)cx;}double cy(IMyTerminalBlock cz)
{double O=-1;var cA=cz.InventoryCount;for(var cB=0;cB&lt;cA;cB++){var cC=cz.GetInventory(cB);if(cC!=null)
{cs+=(double)cC.CurrentVolume;if((double)cC.MaxVolume&gt;9223372036854){cr=true;}else{cr=false;}if(!cr)
{O=(double)cC.MaxVolume;double cD=cE(cz);if(cD&gt;0)cn=O/cD;}else{O=cE(cz)*10;cn=9999;}}}return O;}double
cE(IMyTerminalBlock theContainer){var cC=theContainer.GetInventory(0);string cF=theContainer.BlockDefinition.SubtypeId;
double O=(double)cC.MaxVolume;if(O&lt;999999999)return O;if(theContainer is IMyCargoContainer){if(cF.Contains("LargeBlockLargeContainer"))
O=421.875008;else if(cF.Contains("LargeBlockSmallContainer"))O=15.625;else if(cF.Contains("SmallBlockLargeContainer"))
O=15.625;else if(cF.Contains("SmallBlockMediumContainer"))O=3.375;else if(cF.Contains("SmallBlockSmallContainer"))
O=0.125;else if(cF.Contains("Azimuth_LargeContainer"))O=7780.8;else if(cF.Contains("Azimuth_MediumLargeContainer"))
O=1945.2;else if(cF.Contains("Azimuth_MediumContainer"))O=1878.6;else if(cF.Contains("Azimuth_SmallContainer"))
O=10.125;}else if(cF.Contains("SmallBlockDrill"))O=3.375;else if(cF.Contains("LargeBlockDrill"))O=23.4375;
else if(cF.Contains("ConnectorMedium"))O=1.152;else if(cF.Contains("ConnectorSmall"))O=0.064;else if
(cF.Contains("Connector"))O=8.000;else if(cF.Contains("LargeShipWelder"))O=15.625;else if(cF.Contains("LargeShipGrinder"))
O=15.625;else if(cF.Contains("SmallShipWelder"))O=3.375;else if(cF.Contains("SmallShipGrinder"))O=3.375;
else{Echo("Not cargo:"+theContainer.DefinitionDisplayNameText+":"+theContainer.BlockDefinition.SubtypeId);
O=0.125;}return O;}const int cG=0;const int CRAFT_MODE_SLED=2;const int cI=4;const int CRAFT_MODE_ORBITAL
=32;const int cK=64;const int cL=128;const int cM=256;const int cN=512;const int cO=1024;const int cP
=2048;const int cQ=0xfff;string craftOperation(){string cS="FLAGS:";if((gS&amp;CRAFT_MODE_SLED)&gt;0)cS+="SLED ";
if((gS&amp;CRAFT_MODE_ORBITAL)&gt;0)cS+="ORBITAL ";if((gS&amp;cK)&gt;0)cS+="ROCKET ";if((gS&amp;cI)&gt;0)cS+="ROTOR ";if((gS
&amp;cL)&gt;0)cS+="PET ";if((gS&amp;cM)&gt;0)cS+="NAD ";if((gS&amp;cN)&gt;0)cS+="NO Gyro ";if((gS&amp;cP)&gt;0)cS+="No Tank ";if
((gS&amp;cO)&gt;0)cS+="No Power ";return cS;}long cT=0;void cU(){string cV;if(SaveFile==null){cV=Storage;}else
{cV=SaveFile.GetPublicText();}gP.ma(cV);gP.mq(gM,"SaveID",ref cT);if(cW())gP.ma("");t(gP);gP.mq(gM,"Mode",
ref fj,true);gP.mq(gM,"current_state",ref current_state,true);gP.mq(gM,"PassedArgument",ref sPassedArgument,
true);gP.mq(gM,"AlertStates",ref gU,true);gP.mq(gM,"craft_operation",ref gS,true);gP.mq(gM,"PassedArgument",
ref sPassedArgument);gP.mq(gM,"ReceivedMessage",ref gV);}bool cW(){if(cT==(long)SaveFile.EntityId)return
false;else return true;}bool cX(string cY){cY=cY.Trim().ToLower();return(cY=="True"||cY=="true");}Dictionary&lt;long,
MyDetectedEntityInfo&gt;cZ=new Dictionary&lt;long,MyDetectedEntityInfo&gt;();void da(MyDetectedEntityInfo thisDetectedInfo)
{if(thisDetectedInfo.EntityId!=0){if(!cZ.ContainsKey(thisDetectedInfo.EntityId)){cZ.Add(thisDetectedInfo.EntityId,
thisDetectedInfo);}else{cZ[thisDetectedInfo.EntityId]=thisDetectedInfo;}}else Echo("Not adding: Zero Entity");
}string dc(MyDetectedEntityInfo dd){string s="";s+="ETBV";s+=":"+dd.EntityId.ToString();s+=":"+dd.TimeStamp;
Vector3D de=dd.BoundingBox.Min;s+=":"+gY(de);Vector3D df=dd.BoundingBox.Max;s+=":"+gY(df);Vector3D dg
=(Vector3)dd.Velocity;s+=":"+gY(dg);return s;}void dh(){Echo("mode="+fj.ToString());if(fj==fk)dj();else
if(fj==fn){ew("clear",eh);ew(b+":ATTENTION!",eh);ew(b+": current_state="+current_state.ToString(),eh);
ew("\nCraft Needs attention",eh);}}void di(){ew(DateTime.Now.ToString()+" ACTION: Reset To Idle",ef,
true);n();fZ(fk);if(fc&gt;0&amp;&amp;jH()&amp;&amp;fj!=fp&amp;&amp;fj!=fx&amp;&amp;!((gS&amp;CRAFT_MODE_ORBITAL)&gt;0)&amp;&amp;!((gS&amp;cM)&gt;0))fZ(ft);}void
dj(){ew("clear",eh);ew(a+":"+b+":Manual Control (idle)",eh);if(fc&gt;0&amp;&amp;jH()&amp;&amp;fj!=fp&amp;&amp;fj!=fx&amp;&amp;!((gS&amp;CRAFT_MODE_ORBITAL)
&gt;0)&amp;&amp;!((gS&amp;cM)&gt;0))fZ(ft);}List&lt;IMyTerminalBlock&gt;dk=new List&lt;IMyTerminalBlock&gt;();string dl(){dk.Clear();
dk=lf&lt;IMyGasGenerator&gt;();return"GG"+dk.Count.ToString("00");}void dm(bool V=true){T(dk,V);}bool dn()
{return true;}void@do(){if(dB()&gt;99){T(dk,false);}else{T(dk,true);}}List&lt;IMyTerminalBlock&gt;dp=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;dq=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;dr=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;ds=new List&lt;IMyTerminalBlock&gt;();const int dt=1;const int du=2;int dv=0;int dw=
0;double dx=-1;double dy=-1;void TanksCalculate(){dx=dB(du);dy=dB(dt);}string dA(){{dp=new List&lt;IMyTerminalBlock&gt;();
GridTerminalSystem.GetBlocksOfType&lt;IMyGasTank&gt;(dp,(x=&gt;x.CubeGrid==Me.CubeGrid));}dv=0;dw=0;for(int i
=0;i&lt;dp.Count;++i){if(dJ(dp[i])==dt){if(dp[i].CustomName.ToLower().Contains("isolated"))ds.Add(dp[i]);
else dq.Add(dp[i]);dw++;}else if(dJ(dp[i])==du){dr.Add(dp[i]);dv++;}}return"T"+dp.Count.ToString("00");
}double dB(List&lt;IMyTerminalBlock&gt;dp){double dC=0;int dD=0;for(int i=0;i&lt;dp.Count;++i){{IMyGasTank dE
=dp[i]as IMyGasTank;if(dE==null)continue;float dF=(float)dE.FilledRatio;dC+=dF;dD++;}}if(dD&gt;0){return
dC*100/dD;}else return 0;}double dB(int iTypes=0xff){if(dp.Count&lt;1)dA();if(dp.Count&lt;1)return-1;double
dH=0;int dD=0;for(int i=0;i&lt;dp.Count;++i){int dI=dJ(dp[i]);if((dI&amp;iTypes)&gt;0){IMyGasTank dE=dp[i]as IMyGasTank;
if(dE==null)continue;float dF=(float)dE.FilledRatio;dH+=dF;dD++;}}if(dD&gt;0){return dH/dD;}else return
-1;}int dJ(IMyTerminalBlock dK){if(dK is IMyGasTank){if(dK.BlockDefinition.SubtypeId.Contains("Hydro"))
return du;else return dt;}return 0;}void dL(bool dM=true,int dG=0xff){if(dp.Count&lt;1)dA();if(dp.Count
&lt;1)return;for(int i=0;i&lt;dp.Count;++i){int dI=dJ(dp[i]);if((dI&amp;dG)&gt;0){IMyGasTank dE=dp[i]as IMyGasTank;
if(dE==null)continue;dE.Stockpile=dM;}}}string dN="[DOCK]";List&lt;IMyTerminalBlock&gt;dO=new List&lt;IMyTerminalBlock&gt;();
void dP(lO u){u.mq(jC,"GearUse",ref dN,true);}void dQ(){if(dO.Count&lt;1)dO=lh&lt;IMyLandingGear&gt;(dN);if(dO.Count
&lt;1)dO=lf&lt;IMyLandingGear&gt;();return;}string dR(){{dO.Clear();dQ();}return"LG"+dO.Count.ToString("00");
}bool dS(){for(int i=0;i&lt;dO.Count;i++){IMyLandingGear dT;dT=dO[i]as IMyLandingGear;if(dT!=null&amp;&amp;dT.IsLocked)
return true;}return false;}bool dU(IMyTerminalBlock A){var g=A as IMyLandingGear;if(g==null)return false;
return((int)g.LockMode==1);}bool dV(){var dW=new StringBuilder();for(int i=0;i&lt;dO.Count;i++){if(dU(dO[i]))
return true;}return false;}void dX(bool dY=true){for(int i=0;i&lt;dO.Count;i++){IMyLandingGear g=dO[i]as
IMyLandingGear;if(g==null)continue;if(dY)g.Lock();else g.Unlock();}}string dZ="LOGGING";void ea(lO u)
{u.mq(dZ,"TextPanelReport",ref sTextPanelReport,true);u.mq(dZ,"StatusName",ref ee,true);u.mq(dZ,"LongStatus",
ref eg,true);u.mq(dZ,"RangeReport",ref ec,true);}en eb=null;string ec="[RANGE]";en ed=null;string ee
="Wico Craft Status";en ef=null;string eg="Wico Craft Log";en eh=null;string sTextPanelReport="Craft Report";
en gpsPanel=null;string ek="[GPS]";bool el=false;bool em=false;public class en{Program bH;string eo=
"";List&lt;IMyTextPanel&gt;ep=new List&lt;IMyTextPanel&gt;();string eq="";string er="";bool es=false;bool et=true;
public en(Program pg,string eu,bool ev=false){bH=pg;eo=eu;es=ev;et=true;eq="";er="";ep.Clear();List&lt;IMyTerminalBlock&gt;
U=new List&lt;IMyTerminalBlock&gt;();U=bH.li&lt;IMyTextPanel&gt;(eo);if(U.Count&lt;1)U=bH.lh&lt;IMyTextPanel&gt;(eo);ep=U.ConvertAll(x1
=&gt;(IMyTextPanel)x1);}public void ew(string ex,bool ey=false){if(ex=="clear"){eq="";er="X";et=false;return;
}if(es&amp;&amp;et){et=false;if(ep.Count&gt;0){eq=ep[0].GetPublicText();er="X";}}if(ey){eq=ex+"\n"+eq;}else eq+=
ex+"\n";}public void ez(){if(er!=eq){et=true;foreach(var t in ep){t.WritePublicText(eq);}er=eq;}}}void
eA(){ed=eF(true);ef=eC(eg,true);;eh=eC(sTextPanelReport);eb=eC(ec);gpsPanel=eC(ek,jV);el=true;}void eB()
{if(ed!=null)ed.ez();if(ef!=null)ef.ez();if(eh!=null)eh.ez();if(eb!=null)eb.ez();if(gpsPanel!=null)gpsPanel.ez();
}en eC(string stheName,bool bRefresh=false){en eE=new en(this,stheName,bRefresh);return eE;}en eF(bool
force_update=false){if((ed!=null||el)&amp;&amp;!force_update)return ed;ed=eC(ee);return ed;}void ew(string text,
en wLog,bool bReverse=false){if(wLog==null)return;wLog.ew(text,bReverse);}void eI(string ex){ew(ex,eF());
if(em&amp;&amp;ex!="clear")Echo(ex);}string eJ(double eK){int eL=75;if(eK&lt;0)eK=0;int eM=(int)(eK*eL)/100;if(eM
&gt;eL)eM=eL;string cS="["+new String('|',eM)+new String('\'',eL-eM)+"]";return cS;}void eN(string eu,Vector3D
eO){string s1;s1="GPS:"+eu+":"+gY(eO)+":";ew(s1,gpsPanel);}string eP(string eQ,string eR){string s;int
eS=eQ.Length;int eT=eR.Length;if(eS+eT&gt;32){if(eT&gt;31)return"INVALID";eS=32-eT;}s=eQ.Substring(0,eS)+eR;
s.Replace(":","_");s.Replace(";","_");return s;}string eU(double eV){string eW="";if(eV&gt;1000){eW=eV.ToString("N0")
+"km";}else if(eV&gt;10){eW=eV.ToString("0.0")+"m";}else{eW=eV.ToString("0.000")+"m";}return eW;}void eX()
{}void eY(lO eZ){jD(eZ);hI(eZ);lo(eZ);bj(eZ);dP(eZ);mP(eZ);cp(eZ);}string fa="";int fb=0;double fc=0;
string doInit(){Echo(kE.Count.ToString()+" Blocks");Echo("Init:"+fb);if(fb==0){ew(DateTime.Now.ToString()
+" "+a+":"+b+":INIT",ef,true);fa+=kL();eA();iL();fa+=SerializeInit();cU();}else if(fb==1){cU();fa+=DefaultOrientationBlockInit();
ct();mQ();fa+=hJ(lk);fa+=lK();if(kE.Count&lt;300)fb=2;if(lk is IMyRemoteControl){Vector3D fe;bool ff=((IMyRemoteControl)lk).GetNearestPlayer(out
fe);IMyRemoteControl fg=(IMyRemoteControl)lk;fg.SetCollisionAvoidance(false);fg.SetDockingMode(false);
fg.Direction=Base6Directions.Direction.Forward;fg.FlightMode=FlightMode.OneWay;fg.ClearWaypoints();fg.AddWaypoint(fe,
"Name");}}if(fb==2){fa+=mV(lk);fa+=ge();fa+=jE();fa+=dA();fa+=kp();if(kE.Count&lt;100)fb=3;}if(fb==3){fa
+=bv(lk);fa+=kv();fa+=iU();fa+=dl();q();jZ=false;if(iR)jP="*"+a+":"+b+" V"+c+" ";if(jP.Length&gt;34){jP
=a+":"+b+"\nV"+c+" ";}if(lk is IMyShipController){MyShipMass fh;fh=((IMyShipController)lk).CalculateShipMass();
fc=fh.BaseMass;}fa+=fi();jX=true;}fb++;if(jX)fb=0;eI(fa);return fa;}string fi(){return"&gt;";}int fj=0;
const int fk=0;const int fl=1;const int fm=2;const int fn=3;const int fo=4;const int fp=5;const int fq
=7;const int fr=8;const int fs=9;const int ft=13;const int fu=10;const int fv=11;const int fw=12;const
int fx=14;const int fy=15;const int fz=16;const int fA=17;const int fB=18;const int fC=19;const int fD
=20;const int fE=21;const int fF=22;const int fG=23;const int fH=24;const int fI=25;const int fJ=26;
const int fK=27;const int fL=28;const int fM=29;const int fN=30;const int fO=31;const int fP=50;const
int fQ=111;const int fR=200;const int fS=210;const int fT=220;const int fU=290;const int fV=400;const
int fW=410;const int fX=500;const int fY=510;void fZ(int ga){if(fj==ga)return;fj=ga;current_state=0;
iQ();}List&lt;IMyTerminalBlock&gt;gb=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;gc=new List&lt;IMyTerminalBlock&gt;();
List&lt;IMyTerminalBlock&gt;gd=new List&lt;IMyTerminalBlock&gt;();string ge(){gb.Clear();gc.Clear();gd.Clear();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorStator&gt;(gb,
kZ);for(int i=0;i&lt;gb.Count;i++){if(gb[i].CustomName.Contains("[LEFT]")||gb[i].CustomData.Contains("[LEFT]"))
{gc.Add(gb[i]);}else if(gb[i].CustomName.Contains("[RIGHT]")||gb[i].CustomData.Contains("[RIGHT]")){
gd.Add(gb[i]);}}return"NR:L"+gc.Count.ToString("0")+"R"+gd.Count.ToString("0");}bool gf(float gg){if
(gc.Count&lt;1)return false;float gh=gc[0].GetMaximum&lt;float&gt;("Velocity");float gi=gc[0].GetValueFloat("Velocity");
float gj=(gi/gh*100);gj=Math.Abs(gj);if(gg&gt;(gj+5f))gg=gj+5;if(gg&lt;(gj-5))gg=gj-5;if(gg&lt;0f)gg=0f;if(gg
&gt;100f)gg=100f;if(Math.Abs(gg)&gt;0){gf(gc,-gg);gf(gd,gg);return true;}else return false;}bool gf(List&lt;IMyTerminalBlock&gt;
rotorList,float gg){for(int i=0;i&lt;rotorList.Count;i++){IMyMotorStator gl=rotorList[i]as IMyMotorStator;
float gh=gl.GetMaximum&lt;float&gt;("Velocity");if(!gl.Enabled)gl.Enabled=true;float gm=gh*(gg/100.0f);Echo(gl.CustomName
+":MV="+gh.ToString("0.00")+":V="+gm.ToString("0.00"));gl.TargetVelocityRPM=gm;}return true;}bool gn()
{gn(gc);gn(gd);return true;}bool gn(List&lt;IMyTerminalBlock&gt;rotorList){for(int i=0;i&lt;rotorList.Count;i++)
{IMyMotorStator gl=rotorList[i]as IMyMotorStator;gl.TargetVelocityRPM=0;}return true;}bool go(double
gp){Echo("DRR:"+gp.ToString());float gg;if(Math.Abs(gp)&gt;1.0){gg=50;}else if(Math.Abs(gp)&gt;.7){gg=50;}
else if(Math.Abs(gp)&gt;0.5){gg=30;}else if(Math.Abs(gp)&gt;0.1){gg=20;}else if(Math.Abs(gp)&gt;0.01){gg=5;}else
if(Math.Abs(gp)&gt;0.001){gg=0;}else gg=0;gg/=3;gg=gg*-Math.Sign(gp);if(Math.Abs(gg)&gt;0){Echo("PUPLEFT:"
+gg.ToString());gf(gc,gg);}if(Math.Abs(gg)&gt;0){Echo("PUPRIGHT:"+gg.ToString());gf(gd,gg);}if(Math.Abs(gg)
&gt;0)return false;else return true;}bool gq(string gr){string[]gs=gr.Trim().Split(';');for(int gt=0;gt
&lt;gs.Length;gt++){string[]gu=gs[gt].Trim().Split(' ');if(gu[0]=="timer"){s();}else if(gu[0]=="idle")di();
else if(gu[0]=="masterreset")p();else if(gu[0].ToLower()=="coast"){if(hm.Count&gt;1){W(hm);}}else if(gu[0]
=="setvaluef"){Echo("SetValueFloat");string gv="";for(int i=1;i&lt;gu.Length;i++){gv+=gu[i];if(i&lt;gu.Length
-1){gv+=" ";}}string[]gw=gv.Trim().Split(':');if(gw.Length&lt;3){Echo("Invalid Args");continue;}IMyTerminalBlock
A;A=(IMyTerminalBlock)GridTerminalSystem.GetBlockWithName(gw[0]);if(A==null){Echo("Block not found:"
+gw[0]);continue;}float gx=0;bool gy=float.TryParse(gw[2].Trim(),out gx);if(!gy){Echo("invalid float value:"
+gw[2]);continue;}Echo("SetValueFloat:"+gw[0]+" "+gw[1]+" to:"+gx.ToString());A.SetValueFloat(gw[1],
gx);}else if(gu[0]=="brake"){Echo("brake");if(lk is IMyShipController){IMyShipController gz=lk as IMyShipController;
bool gA=gz.HandBrake;gz.ApplyAction("HandBrake");}else Echo("No Ship Controller found");}else if(gu[0]
=="namecameras"){bA(Z,"Front");bA(ba,"Back");bA(bb,"Down");bA(bc,"Up");bA(bd,"Left");bA(be,"Right");
}else if(gu[0]=="wcct"||gu[0]==""){}else{int gB;if(jO.TryGetValue(gu[0].ToLower(),out gB)){fZ(gB);}else
Echo("Unrecognized Command:"+gs[gt]);}}return false;}double gC=-1;List&lt;IMyTerminalBlock&gt;gD=new List&lt;IMyTerminalBlock&gt;();
void gE(){gD.Clear();lf&lt;IMyReactor&gt;(ref gD);float gF;gH(out gF);}double gG(){double j=0;foreach(var tb
in gD){IMyReactor r=tb as IMyReactor;j+=r.CurrentOutput;}return j;}bool gH(out float currentOutput){
currentOutput=0;gC=-1;bool gI=false;if(gD.Count&gt;0)gC=0;foreach(IMyReactor r in gD){currentOutput+=r.CurrentOutput;
gC+=r.MaxOutput;}return gI;}void gJ(){v(gP);gP.mD(gM,"Mode",fj.ToString());gP.mD(gM,"current_state",
current_state.ToString());gP.mD(gM,"PassedArgument",sPassedArgument);gP.mD(gM,"AlertStates",gU.ToString());
gP.mD(gM,"craft_operation",gS.ToString());gP.mD(gM,"PassedArgument",sPassedArgument);gP.mD(gM,"ReceivedMessage",
gV);gP.mD(gM,"SaveID",(long)SaveFile.EntityId);if(gP.lZ){if(gP.lZ){string gK=gP.mH();if(SaveFile==null)
{Storage=gK;}else{SaveFile.WritePublicText(gK,false);}}}else{Echo("Not saving: Same");}}string gL="Wico Craft Save";
string gM="WCCM2";void SerializeInitCustomData(lO iNIHolder){iNIHolder.mq(gM,"SAVE_FILE_NAME",ref gL,
true);}IMyTextPanel SaveFile=null;lO gP;int current_state=0;long allBlocksCount=0;int gS=cG;string sPassedArgument
="";int gU=0;string gV="";string SerializeInit(){string fa="S";SaveFile=null;List&lt;IMyTerminalBlock&gt;U
=new List&lt;IMyTerminalBlock&gt;();U=lj&lt;IMyTextPanel&gt;(gL);if(U.Count&gt;1)Echo("Multiple blocks found: \""+gL
+"\"");else if(U.Count==0){U=lh&lt;IMyTextPanel&gt;(gL);if(U.Count==1)SaveFile=U[0]as IMyTextPanel;else{U=
li&lt;IMyTextPanel&gt;(gL);if(U.Count==1)SaveFile=U[0]as IMyTextPanel;}}else SaveFile=U[0]as IMyTextPanel;
gP=new lO(this,"");if(SaveFile==null){fa="-";Echo(gL+" (TextPanel) is missing or Named incorrectly. ");
}return fa;}bool gX(){return SaveFile!=null;}string gY(Vector3D v){string s;s=v.X.ToString("0.00")+":"
+v.Y.ToString("0.00")+":"+v.Z.ToString("0.00");return s;}bool gZ(string ha,out double x,out double y,
out double z){string[]hb=ha.Trim().Split(',');if(hb.Length&lt;3){hb=ha.Trim().Split(':');}x=0;y=0;z=0;if
(hb.Length&lt;3)return false;bool hc=double.TryParse(hb[0].Trim(),out x);bool hd=double.TryParse(hb[1].Trim(),
out y);bool he=double.TryParse(hb[2].Trim(),out z);if(!hc||!hd||!he){return false;}return true;}List&lt;IMyTerminalBlock&gt;
hf=new List&lt;IMyTerminalBlock&gt;();float hg=0;double hh=-1;void hi(){hf.Clear();hh=-1;GridTerminalSystem.GetBlocksOfType&lt;IMySolarPanel&gt;(hf,
kZ);hj();}void hj(){if(hf.Count&gt;0)hh=0;hg=0;foreach(var tb in hf){IMySolarPanel r=tb as IMySolarPanel;
hh+=r.MaxOutput;hg+=r.CurrentOutput;}}List&lt;IMyTerminalBlock&gt;hk=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
hl=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;hm=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
hn=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;ho=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
hp=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;hq=new List&lt;IMyTerminalBlock&gt;();double hr=0;double
hs=0;double ht=0;double hu=0;double hv=0;double hw=0;int hx=0;int hy=0;int hz=0;const int hA=1;const
int hB=2;const int hC=4;const int hD=0xff;Matrix hE=new Matrix(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);string
hF="IGNORE";string hG="cutter";string hH="THRUSTERS";void hI(lO iNIHolder){iNIHolder.mq(hH,"IgnoreThruster",
ref hF);iNIHolder.mq(hH,"CutterThruster",ref hG);}void hJ(IMyTerminalBlock bw,ref List&lt;IMyTerminalBlock&gt;
hl,ref List&lt;IMyTerminalBlock&gt;hm,ref List&lt;IMyTerminalBlock&gt;hn,ref List&lt;IMyTerminalBlock&gt;ho,ref List&lt;IMyTerminalBlock&gt;
hp,ref List&lt;IMyTerminalBlock&gt;hq,int hK=hD){hl.Clear();hm.Clear();hn.Clear();ho.Clear();hp.Clear();hq.Clear();
hk.Clear();if(bw==null)return;var hL=new List&lt;IMyTerminalBlock&gt;();lf&lt;IMyThrust&gt;(ref hL);for(int i=0;
i&lt;hL.Count;i++){if(hL[i].CustomName.ToLower().Contains(hG)||hL[i].CustomData.ToLower().Contains(hG))
continue;if(hL[i].CustomName.ToLower().Contains(hF)||hL[i].CustomData.ToLower().Contains(hF))continue;
hk.Add(hL[i]);}Matrix bx;bw.Orientation.GetMatrix(out bx);Matrix.Transpose(ref bx,out bx);hr=0;hs=0;
ht=0;hu=0;hv=0;hw=0;for(int i=0;i&lt;hk.Count;++i){var hM=hk[i]as IMyThrust;Matrix hN;hM.Orientation.GetMatrix(out
hN);Vector3 bz=Vector3.Transform(hN.Backward,bx);int hO=hP(hk[i]);if(hO==hA)hz++;else if(hO==hB)hy++;
else if(hO==hC)hx++;if(bz==hE.Left){hv+=hQ((IMyThrust)hk[i]);hp.Add(hk[i]);}else if(bz==hE.Right){hw
+=hQ((IMyThrust)hk[i]);hq.Add(hk[i]);}else if(bz==hE.Backward){hs+=hQ((IMyThrust)hk[i]);hm.Add(hk[i]);
}else if(bz==hE.Forward){hr+=hQ((IMyThrust)hk[i]);hl.Add(hk[i]);}else if(bz==hE.Up){hu+=hQ((IMyThrust)hk[i]);
ho.Add(hk[i]);}else if(bz==hE.Down){ht+=hQ((IMyThrust)hk[i]);hn.Add(hk[i]);}}}string hJ(IMyTerminalBlock
bw){hl.Clear();hm.Clear();hn.Clear();ho.Clear();hp.Clear();hq.Clear();hk.Clear();if(bw==null)return"No Orientation Block";
var hL=new List&lt;IMyTerminalBlock&gt;();lf&lt;IMyThrust&gt;(ref hL);for(int i=0;i&lt;hL.Count;i++){if(hL[i].CustomName.ToLower().Contains(hG)
||hL[i].CustomData.ToLower().Contains(hG))continue;if(hL[i].CustomName.ToLower().Contains(hF)||hL[i].CustomData.ToLower().Contains(hF))
continue;hk.Add(hL[i]);}Matrix bx;bw.Orientation.GetMatrix(out bx);Matrix.Transpose(ref bx,out bx);hr
=0;hs=0;ht=0;hu=0;hv=0;hw=0;for(int i=0;i&lt;hk.Count;++i){var hM=hk[i]as IMyThrust;Matrix hN;hM.Orientation.GetMatrix(out
hN);Vector3 bz=Vector3.Transform(hN.Backward,bx);int hO=hP(hk[i]);if(hO==hA)hz++;else if(hO==hB)hy++;
else if(hO==hC)hx++;if(bz==hE.Left){hv+=hQ((IMyThrust)hk[i]);hp.Add(hk[i]);}else if(bz==hE.Right){hw
+=hQ((IMyThrust)hk[i]);hq.Add(hk[i]);}else if(bz==hE.Backward){hs+=hQ((IMyThrust)hk[i]);hm.Add(hk[i]);
}else if(bz==hE.Forward){hr+=hQ((IMyThrust)hk[i]);hl.Add(hk[i]);}else if(bz==hE.Up){hu+=hQ((IMyThrust)hk[i]);
ho.Add(hk[i]);}else if(bz==hE.Down){ht+=hQ((IMyThrust)hk[i]);hn.Add(hk[i]);}}string s;s="&gt;";s+="F"+hl.Count.ToString("00");
s+="B"+hm.Count.ToString("00");s+="D"+hn.Count.ToString("00");s+="U"+ho.Count.ToString("00");s+="L"+
hp.Count.ToString("00");s+="R"+hq.Count.ToString("00");s+="&lt;";return s;}int hP(IMyTerminalBlock theBlock)
{if(theBlock is IMyThrust){if(theBlock.BlockDefinition.SubtypeId.Contains("Atmo"))return hA;else if(theBlock.BlockDefinition.SubtypeId.Contains("Hydro"))
return hB;else return hC;}return 0;}double hQ(IMyThrust thruster){return thruster.MaxEffectiveThrust;
}double hR(List&lt;IMyTerminalBlock&gt;hS,int dG=hD){double hT=0;for(int hU=0;hU&lt;hS.Count;hU++){int hV=hP(hS[hU]);
if((hV&amp;dG)&gt;0){IMyThrust hM=hS[hU]as IMyThrust;double hW=hM.MaxEffectiveThrust;hT+=hW;}}return hT;}bool
hX(List&lt;IMyTerminalBlock&gt;hS,out float hY,out float dx,out float hZ){hY=0;dx=0;hZ=0;double ia=hR(hS,hC);
double ib=hR(hS,hA);double ic=hR(hS,hB);MyShipMass fh;fh=((IMyShipController)lk).CalculateShipMass();
double id=0;id=fh.PhysicalMass*kh*9.810;if(ib&gt;0){if(ib&lt;id){hY=100;id-=ib;}else{hY=(float)(id/ib*100);
if(hY&gt;0)id-=(ib*hY/100);}}if(ia&gt;0&amp;&amp;id&gt;0){if(ia&lt;id){hZ=100;id-=ia;}else{hZ=(float)(id/ia*100);if(hZ&gt;0)
id-=((ia*hZ)/100);}}if(ic&gt;0&amp;&amp;id&gt;0){if(ic&lt;id){dx=100;id-=ic;}else{dx=(float)(id/ic*100);if(dx&gt;0)id-=((ic
*dx)/100);;}}if(id&gt;0)return false;return true;}List&lt;IMyTerminalBlock&gt;ie(string@if){var ig=new List&lt;IMyTerminalBlock&gt;();
var ih=new List&lt;IMyBlockGroup&gt;();GridTerminalSystem.GetBlockGroups(ih);for(int ii=0;ii&lt;ih.Count;ii++)
{if(ih[ii].Name==@if){List&lt;IMyTerminalBlock&gt;hS=null;ih[ii].GetBlocks(hS,kZ);for(int hU=0;hU&lt;hS.Count;
hU++){ig.Add(hS[hU]);}break;}}return ig;}int ij(List&lt;IMyTerminalBlock&gt;hS,float Q,int dG=hD){int ik=0;
if(Q&gt;100)Q=100;if(Q&lt;0)Q=0;for(int hU=0;hU&lt;hS.Count;hU++){int hV=hP(hS[hU]);if((hV&amp;dG)&gt;0){IMyThrust hM
=hS[hU]as IMyThrust;if(!hM.IsWorking){hM.Enabled=true;}ik+=1;hM.ThrustOverridePercentage=Q/100f;}}return
ik;}int ij(List&lt;IMyTerminalBlock&gt;hS,int il=100,int dG=hD){return ij(hS,(float)il,dG);}bool ij(string
im,int il=100,int dG=hD){if(il&gt;100)il=100;var ih=new List&lt;IMyBlockGroup&gt;();GridTerminalSystem.GetBlockGroups(ih);
for(int ii=0;ii&lt;ih.Count;ii++){if(ih[ii].Name==im){List&lt;IMyTerminalBlock&gt;hS=null;ih[ii].GetBlocks(hS,
kZ);return(ij(hS,il,dG)&gt;0);}}return false;}int@in(List&lt;IMyTerminalBlock&gt;hS,int dG=hD,bool io=false){
int ik=0;for(int hU=0;hU&lt;hS.Count;hU++){int hV=hP(hS[hU]);if((hV&amp;dG)&gt;0){ik++;IMyThrust hM=hS[hU]as IMyThrust;
hM.ThrustOverride=0;if(hM.IsWorking&amp;&amp;io)hM.Enabled=false;else if(!hM.IsWorking&amp;&amp;!io)hM.Enabled=true;
}}return ik;}bool@in(string im){var ih=new List&lt;IMyBlockGroup&gt;();GridTerminalSystem.GetBlockGroups(ih);
for(int ii=0;ii&lt;ih.Count;ii++){if(ih[ii].Name==im){List&lt;IMyTerminalBlock&gt;hS=null;ih[ii].GetBlocks(hS,
kZ);return(@in(hS)&gt;0);}}return false;}bool ij(){return(ij(hl)&gt;0);}bool@in(){return(@in(hl)&gt;0);}double
ip(List&lt;IMyTerminalBlock&gt;iq,int dG=hD){for(int i=0;i&lt;iq.Count;i++){int hV=hP(iq[i]);if((hV&amp;dG)&gt;0&amp;&amp;iq[i].IsWorking)
{var hM=iq[i]as IMyThrust;return hM.ThrustOverride;}}return 0;}bool ir(List&lt;IMyTerminalBlock&gt;iq,int dG
=hD){for(int i=0;i&lt;iq.Count;i++){int hV=hP(iq[i]);if((hV&amp;dG)&gt;0&amp;&amp;iq[i].IsWorking){return true;}}return
false;}int@is(List&lt;IMyTerminalBlock&gt;iq,int dG=hD){int ik=0;for(int i=0;i&lt;iq.Count;i++){int hV=hP(iq[i]);
if((hV&amp;dG)&gt;0&amp;&amp;iq[i].IsWorking){ik++;}}return ik;}IMyThrust it(List&lt;IMyTerminalBlock&gt;iu,int iv=hD){foreach
(var thrust in hk){if(thrust is IMyThrust&amp;&amp;(hP(thrust)&amp;iv)&gt;0)return thrust as IMyThrust;}return null;
}double iw(){if(hz&lt;1)return 0;var ix=it(hk,hA);if(ix==null)return 0;return ix.MaxEffectiveThrust/ix.MaxThrust;
}double iy(List&lt;IMyTerminalBlock&gt;ho,double iz,double iA){var fh=((IMyShipController)lk).CalculateShipMass();
double id=0;id=fh.PhysicalMass*iA*9.810;double hQ=hR(ho);double iB=(hQ-id)/fh.TotalMass;double iC=iz
/iB;double iD=iz/2*iC;return iD;}string[]iE={"-","\\","|","/","-","\\","|","/"};int iF=99;string iG()
{iF++;if(iF&gt;=iE.Length)iF=0;return iE[iF];}const string iH="[WCCT]";const string iI="[WCCS]";const string
iJ="[WCCM]";Dictionary&lt;string,List&lt;IMyTerminalBlock&gt;&gt;iK=new Dictionary&lt;string,List&lt;IMyTerminalBlock&gt;&gt;();
void iL(){iK.Clear();}bool iM(string iN="[WCCS]"){bool iO=false;List&lt;IMyTerminalBlock&gt;U=new List&lt;IMyTerminalBlock&gt;();
IMyTimerBlock iP=null;if(iK.ContainsKey(iN)){U=iK[iN];}else{U=lh&lt;IMyTerminalBlock&gt;(iN);iK.Add(iN,U);
}for(int i=0;i&lt;U.Count;i++){iP=U[i]as IMyTimerBlock;if(iP!=null){iP.ApplyAction("TriggerNow");iO=true;
}}return iO;}void iQ(){Runtime.UpdateFrequency|=UpdateFrequency.Once;}bool iR=false;List&lt;IMyRadioAntenna&gt;
iS=new List&lt;IMyRadioAntenna&gt;();List&lt;IMyLaserAntenna&gt;iT=new List&lt;IMyLaserAntenna&gt;();string iU(){iS.Clear();
iT.Clear();lf&lt;IMyRadioAntenna&gt;(ref iS);lf&lt;IMyLaserAntenna&gt;(ref iT);for(int i=0;i&lt;iS.Count;++i){if(iS[i].CustomName.Contains("unused")
||iS[i].CustomData.Contains("unused"))continue;if(!iR){a="Wico "+iS[i].CustomName.Split('!')[0].Trim();
iR=true;}}return"A"+iS.Count.ToString("0");}void iV(){for(int i=0;i&lt;iS.Count;i++){iS[i].Enabled=true;
}}string iW="";void iX(){if(gV!=""){if(iW==gV){gV="";}iW=gV;}else iW="";}void iY(){}void iZ(){float ja
=0;int jb=-1;for(int i=0;i&lt;iS.Count;i++){if(iS[i].AttachedProgrammableBlock==Me.EntityId){jb=i;break;
}if(iS[i].Radius&gt;ja&amp;&amp;iS[i].AttachedProgrammableBlock==0){jb=i;ja=iS[i].Radius;}}if(jb&gt;=0){if(iS[jb].AttachedProgrammableBlock
!=Me.EntityId)fa+="\nSetting Antenna PB";iS[jb].AttachedProgrammableBlock=Me.EntityId;}else{}}void jc(bool
jd=false){if(iS.Count&lt;1)iU();foreach(var a in iS){a.Radius=200;if(a.AttachedProgrammableBlock&gt;0||jd)
{a.Enabled=true;}}}void je(float jf=200,bool jd=false){if(iS.Count&lt;1)iU();foreach(var a in iS){if(a.AttachedProgrammableBlock
&gt;0||jd){a.Radius=jf;a.Enabled=true;}}}Vector3D jg(){if(iS.Count&lt;1)iU();foreach(var a in iS){if(a.AttachedProgrammableBlock
==Me.EntityId){return a.GetPosition();}}foreach(var a in iS){return a.GetPosition();}Vector3D jh=new
Vector3D();return jh;}void ji(bool jd=false,float jj=float.MaxValue){if(iS.Count&lt;1)iU();if(jj&lt;200)jj
=200;foreach(var a in iS){if(a.AttachedProgrammableBlock&gt;0||jd){float jk=a.GetMaximum&lt;float&gt;("Radius");
if(jj&lt;jk)jk=jj;a.Radius=jk;a.Enabled=true;}}}int jl(){if(iS.Count&lt;1)iU();return(iS.Count);}List&lt;string&gt;
jm=new List&lt;string&gt;();void jn(){if(jm.Count&gt;0){jo(jm[0]);jm.RemoveAt(0);}if(jm.Count&gt;0)jZ=true;}void
jo(string jp){bool jq=false;if(iS.Count&lt;1)iU();for(int i=0;i&lt;iS.Count;i++){jq=iS[i].TransmitMessage(jp);
if(jq)break;}if(!jq){if(jl()&gt;0){jm.Add(jp);jZ=true;}}}List&lt;string&gt;jr=new List&lt;string&gt;();void js(bool
jt=false){if(jr.Count&gt;0){if(gV==""){gV=jr[0];jr.RemoveAt(0);if(jt){jZ=true;}else{iQ();}}}if(jr.Count
&gt;0){}}void ju(string jp){jr.Add(jp);js();}void jv(){if(iS.Count&gt;0){Echo(jr.Count+" Pending Incoming Messages");
for(int i=0;i&lt;jr.Count;i++)Echo(i+":"+jr[i]);}else Echo("No antennas found");}List&lt;IMyTerminalBlock&gt;
jw=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;jx=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
jy=new List&lt;IMyTerminalBlock&gt;();bool jz=false;string jA="[BASE]";string jB="[DOCK]";string jC="CONNECTORS";
void jD(lO iNIHolder){iNIHolder.mq(jC,"BaseConnector",ref jA,true);iNIHolder.mq(jC,"DockConnector",ref
jB,true);}string jE(){jz=false;jw.Clear();jx.Clear();jy.Clear();jF();return"CL"+jw.Count.ToString()+
"CD"+jx.Count.ToString()+"CB"+jy.Count.ToString();}void jF(){if(jw.Count&lt;1&amp;&amp;!jz)jw=lf&lt;IMyShipConnector&gt;();
if(jx.Count&lt;1&amp;&amp;!jz)jx=lh&lt;IMyShipConnector&gt;(jB);if(jx.Count&lt;1&amp;&amp;!jz)jx=jw;if(jy.Count&lt;1&amp;&amp;!jz)jy=lh&lt;IMyShipConnector&gt;(jA);
jz=true;return;}bool jG(){jF();for(int i=0;i&lt;jx.Count;i++){var sc=jx[i]as IMyShipConnector;if(sc.Status
==MyShipConnectorStatus.Connectable)return true;}return false;}bool jH(){jF();for(int i=0;i&lt;jx.Count;
i++){var sc=jx[i]as IMyShipConnector;if(sc.Status==MyShipConnectorStatus.Connected){var jI=sc.OtherConnector;
if(jI.CubeGrid==sc.CubeGrid){continue;}else return true;}}return false;}IMyTerminalBlock jJ(){jF();if
(jx.Count&gt;0){return jx[0];}return null;}IMyTerminalBlock jK(bool jL=false){jF();for(int i=0;i&lt;jx.Count;
i++){var sc=jx[i]as IMyShipConnector;if(sc.Status==MyShipConnectorStatus.Connected){var jI=sc.OtherConnector;
if(jI.CubeGrid==sc.CubeGrid){continue;}else{if(!jL){return sc.OtherConnector;}else{return jx[i];}}}}
return null;}void jM(bool jN=true,bool V=true){jF();for(int i=0;i&lt;jx.Count;i++){var sc=jx[i]as IMyShipConnector;
if(sc.Status==MyShipConnectorStatus.Connected){var jI=sc.OtherConnector;if(jI.CubeGrid==sc.CubeGrid)
{continue;}}if(jN){if(sc.Status==MyShipConnectorStatus.Connectable)sc.ApplyAction("SwitchLock");}else
{if(sc.Status==MyShipConnectorStatus.Connected)sc.ApplyAction("SwitchLock");}sc.Enabled=V;}return;}Dictionary&lt;string,
int&gt;jO=new Dictionary&lt;string,int&gt;();string jP="";UpdateFrequency jQ=UpdateFrequency.Once;bool jR=true;
bool jS=true;float jT=100;string jU="WORLD";bool jV=false;void jW(lO u){u.mq(jU,"MaxWorldMps",ref jT,
true);}public Program(){eX();lO eZ=new lO(this,Me.CustomData);jW(eZ);kD(eZ);ea(eZ);eY(eZ);if(eZ.lZ){
Me.CustomData=eZ.mH(true);}jP=a+":"+b+" V"+c+" ";Echo(jP+"Creator");eA();ew("clear",ef,true);if(!iM(iJ))
{Runtime.UpdateFrequency|=UpdateFrequency.Update100;}if(!Me.Enabled){Echo("I am turned OFF!");}}bool
jX=false;bool jY=false;bool jZ=false;bool bWantMedium=false;bool kb=false;double kc;double kd=5;double
ke=-1;double kf=3;double kg=-1;double kh=-2;void Main(string gr,UpdateType ut){Echo(jP+iG());jZ=false;
bWantMedium=false;if(ke&gt;kd){ke=0;kb=false;var iu=new List&lt;IMyTerminalBlock&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyProjector&gt;(iu,
kZ);for(int i=0;i&lt;iu.Count;i++){if(iu[i].IsWorking){if(iu[i].CustomName.Contains("!WCC")||iu[i].CustomData.Contains("!WCC"))
continue;Echo("Working local Projector found!");kb=true;}}}else{if(ke&lt;0){ke=kd+5;}ke+=Runtime.TimeSinceLastRun.TotalSeconds;
}sPassedArgument="";double ki=0;if(lk is IMyShipController){if(kg&gt;kf||!jX){Echo("DO Grid Check");kg=
0;MyShipMass fh;fh=((IMyShipController)lk).CalculateShipMass();ki=fh.BaseMass;Echo("New="+ki+" CurrentM="
+fc);if(fh.BaseMass==0)Echo("No Mass--Station?");if(ki!=fc&amp;&amp;fc&gt;0){Echo("MASS CHANGE");ew(a+":"+b+":MASS CHANGE",
ef,true);}}else{if(kg&lt;0){kg=kf+5;}kg+=Runtime.TimeSinceLastRun.TotalSeconds;ki=fc;}}else{fc=ki=0;}if
(gr=="init"||(Math.Abs(ki-fc)&gt;1&amp;&amp;fc&gt;0&amp;&amp;fb==0)||(fb==0&amp;&amp;kJ())){eI("INIT or GRID/MASS CHANGE!");Echo("Arg init or grid/mass change!");
fa="";jX=false;fb=0;sPassedArgument="init";}eI("clear");if(!jX){if(kb){eI("Construction in Progress\nTurn off projector to continue");
ew("Construction in Progress\nTurn off projector to continue",eh);}else{jZ=true;}doInit();jY=true;}else
{if(jR)cU();sPassedArgument=gr;if(jY){ew(DateTime.Now.ToString()+" "+fa,ef,true);}IMyTerminalBlock kj
=lk;if(lk!=null){}if(lk is IMyShipController){kc=((IMyShipController)lk).GetShipSpeed();Vector3D kk=
((IMyShipController)lk).GetNaturalGravity();double kl=kk.Length();kh=kl/9.81;}else{kh=-1.0;}if(gq(gr))
{eB();return;}i();dh();}if(jR)gJ();if((SaveFile==null)){if(jR)Echo("Cannot use sub-modules; missing controller and/or SaveFile");
}else iM();if(jZ){Echo("FAST!");Runtime.UpdateFrequency|=jQ;}else{Runtime.UpdateFrequency&amp;=~(jQ);}if
(bWantMedium){Runtime.UpdateFrequency|=UpdateFrequency.Update10;}else{Runtime.UpdateFrequency&amp;=~(UpdateFrequency.Update10);
}jY=false;if(jS)Echo(craftOperation());m();eB();}void km(string jP=null){float kn=0;kn=Runtime.CurrentInstructionCount
/(float)Runtime.MaxInstructionCount;if(jP==null)jP="Instructions=";Echo(jP+(kn*100).ToString("0.00")
+"%");}List&lt;IMyTerminalBlock&gt;ko=new List&lt;IMyTerminalBlock&gt;();string kp(){List&lt;IMyTerminalBlock&gt;kq=new
List&lt;IMyTerminalBlock&gt;();ko.Clear();kq=lf&lt;IMyShipDrill&gt;();foreach(var b in kq)ko.Add(b as IMyTerminalBlock);
return"D"+ko.Count.ToString("00");}void kr(){foreach(IMyFunctionalBlock b in ko){b.Enabled=true;}}void
ks(){if(ko.Count&lt;1)kp();foreach(IMyFunctionalBlock b in ko){b.Enabled=false;}}bool kt(){if(ko.Count&lt;
1)kp();if(ko.Count&lt;1)return false;return true;}List&lt;IMyTerminalBlock&gt;ku=new List&lt;IMyTerminalBlock&gt;();
string kv(){List&lt;IMyTerminalBlock&gt;kq=new List&lt;IMyTerminalBlock&gt;();ku.Clear();kq=lh&lt;IMyShipConnector&gt;("Ejector");
foreach(var b in kq)ku.Add(b as IMyTerminalBlock);return"E"+ku.Count.ToString("00");}void kw(){foreach
(IMyFunctionalBlock b in ku){b.Enabled=true;}}void kx(){if(ku.Count&lt;1)kv();foreach(IMyFunctionalBlock
b in ku){b.Enabled=false;}}string ky="NOFOLLOW";string kz="!WCC";string kA="[NAV]";string kB="Craft Remote Control";
string kC="GRIDS";void kD(lO iNIHolder){iNIHolder.mq(kC,"NoFollow",ref ky,true);iNIHolder.mq(kC,"BlockIgnore",
ref kz,true);iNIHolder.mq(kC,"OrientationBlockContains",ref kA,true);iNIHolder.mq(kC,"OrientationBlockNamed",
ref kB,true);}List&lt;IMyTerminalBlock&gt;kE=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyCubeGrid&gt;kF=new List&lt;IMyCubeGrid&gt;();
List&lt;IMyCubeGrid&gt;kG=new List&lt;IMyCubeGrid&gt;();List&lt;IMyCubeGrid&gt;kH=new List&lt;IMyCubeGrid&gt;();List&lt;IMyCubeGrid&gt;
kI=new List&lt;IMyCubeGrid&gt;();bool kJ(){List&lt;IMyTerminalBlock&gt;kK=new List&lt;IMyTerminalBlock&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyTerminalBlock&gt;(kK);
if(allBlocksCount!=kK.Count){return true;}return false;}string kL(){kE.Clear();kI.Clear();kF.Clear();
kG.Clear();kH.Clear();GridTerminalSystem.GetBlocksOfType&lt;IMyTerminalBlock&gt;(kE);allBlocksCount=kE.Count;
foreach(var block in kE){var cu=block.CubeGrid;if(!kI.Contains(cu)){kI.Add(cu);}}kO(Me.CubeGrid);foreach
(var grid in kI){if(kF.Contains(grid))continue;bool kM=false;List&lt;IMyShipConnector&gt;kN=new List&lt;IMyShipConnector&gt;();
GridTerminalSystem.GetBlocksOfType&lt;IMyShipConnector&gt;(kN,(x1=&gt;x1.CubeGrid==grid));foreach(var connector
in kN){if(connector.Status==MyShipConnectorStatus.Connected){if(kF.Contains(connector.OtherConnector.CubeGrid)
||kG.Contains(connector.OtherConnector.CubeGrid)){continue;}if(kF.Contains(connector.OtherConnector.CubeGrid))
kM=true;else kM=false;}}if(kM){if(!kH.Contains(grid)){kH.Add(grid);}}if(!kG.Contains(grid)){kG.Add(grid);
}}string s="";s+="B"+kE.Count.ToString();s+="G"+kI.Count.ToString();s+="L"+kF.Count.ToString();s+="D"
+kH.Count.ToString();s+="R"+kG.Count.ToString();return s;}void kO(IMyCubeGrid cu){if(cu==null)return;
if(!kF.Contains(cu)){kF.Add(cu);kP(cu);kS(cu);kU(cu);kW(cu);}}void kP(IMyCubeGrid grid){List&lt;IMyMotorStator&gt;
kQ=new List&lt;IMyMotorStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorStator&gt;(kQ,(x=&gt;x.TopGrid==grid));
foreach(var rotor in kQ){if(rotor.CustomName.Contains(ky)||rotor.CustomData.Contains(ky))continue;kO(rotor.CubeGrid);
}List&lt;IMyMotorAdvancedStator&gt;kR=new List&lt;IMyMotorAdvancedStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorAdvancedStator&gt;(kR,
(x=&gt;x.TopGrid==grid));foreach(var rotor in kR){if(rotor.CustomName.Contains(ky)||rotor.CustomData.Contains(ky))
continue;kO(rotor.CubeGrid);}}void kS(IMyCubeGrid grid){List&lt;IMyPistonBase&gt;kT=new List&lt;IMyPistonBase&gt;();
GridTerminalSystem.GetBlocksOfType&lt;IMyPistonBase&gt;(kT,(x=&gt;x.TopGrid==grid));foreach(var piston in kT)
{kO(piston.CubeGrid);}}void kU(IMyCubeGrid grid){List&lt;IMyMotorStator&gt;kQ=new List&lt;IMyMotorStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorStator&gt;(kQ,
(x1=&gt;x1.CubeGrid==grid));foreach(var rotor in kQ){if(rotor.CustomName.Contains(ky)||rotor.CustomData.Contains(ky))
continue;IMyCubeGrid kV=rotor.TopGrid;if(kV!=null&amp;&amp;kV!=grid){kO(kV);}}kQ.Clear();List&lt;IMyMotorAdvancedStator&gt;
kR=new List&lt;IMyMotorAdvancedStator&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyMotorAdvancedStator&gt;(kR,
(x1=&gt;x1.CubeGrid==grid));foreach(var rotor in kR){if(rotor.CustomName.Contains(ky)||rotor.CustomData.Contains(ky))
continue;IMyCubeGrid kV=rotor.TopGrid;if(kV!=null&amp;&amp;kV!=grid){kO(kV);}}}void kW(IMyCubeGrid grid){List&lt;IMyPistonBase&gt;
kT=new List&lt;IMyPistonBase&gt;();GridTerminalSystem.GetBlocksOfType&lt;IMyPistonBase&gt;(kT,(x1=&gt;x1.CubeGrid==
grid));foreach(var piston in kT){IMyCubeGrid kV=piston.TopGrid;if(kV!=null&amp;&amp;kV!=grid){if(!kF.Contains(kV))
{kO(kV);}}}}List&lt;IMyCubeGrid&gt;kX(){if(kF.Count&lt;1){kL();}return kF;}List&lt;IMyCubeGrid&gt;kY(){if(kF.Count&lt;
1){kL();}return kH;}bool kZ(IMyTerminalBlock block){return kX().Contains(block.CubeGrid);}bool la(long
lb){for(int i=0;i&lt;kF.Count;i++){if((long)kF[i].EntityId==lb)return true;}return false;}bool la(IMyCubeGrid
lb){return kX().Contains(lb);}bool lc(IMyTerminalBlock A){List&lt;IMyCubeGrid&gt;g=kY();if(g==null)return false;
return g.Contains(A.CubeGrid);}IMyTerminalBlock ld(string le){IMyTerminalBlock A;A=(IMyTerminalBlock)GridTerminalSystem.GetBlockWithName(le);
if(A==null)throw new Exception(le+" Not Found");return A;}public List&lt;T&gt;lf&lt;T&gt;(ref List&lt;T&gt;kq,string lg
=null)where T:class{if(kE.Count&lt;1)kL();if(kq==null)kq=new List&lt;T&gt;();else kq.Clear();for(int e=0;e&lt;kE.Count;
e++){if(kZ(kE[e])&amp;&amp;kE[e]is T&amp;&amp;((lg==null)||(lg!=null&amp;&amp;kE[e].CustomName.StartsWith(lg)))){kq.Add((T)kE[e]);
}}return kq;}public List&lt;IMyTerminalBlock&gt;lf&lt;T&gt;(ref List&lt;IMyTerminalBlock&gt;Output,string Keyword=null)where
T:class{if(kE.Count&lt;1)kL();if(Output==null)Output=new List&lt;IMyTerminalBlock&gt;();else Output.Clear();for
(int e=0;e&lt;kE.Count;e++){if(kZ(kE[e])&amp;&amp;kE[e]is T&amp;&amp;((Keyword==null)||(Keyword!=null&amp;&amp;kE[e].CustomName.StartsWith(Keyword))))
{Output.Add(kE[e]);}}return Output;}public List&lt;IMyTerminalBlock&gt;lf&lt;T&gt;(string Keyword=null)where T:class
{var kq=new List&lt;IMyTerminalBlock&gt;();lf&lt;T&gt;(ref kq,Keyword);return kq;}public List&lt;IMyTerminalBlock&gt;lh&lt;T&gt;(string
Keyword=null)where T:class{if(kE.Count&lt;1)kL();var kq=new List&lt;IMyTerminalBlock&gt;();for(int e=0;e&lt;kE.Count;
e++){if(kE[e]is T&amp;&amp;kZ(kE[e])&amp;&amp;Keyword!=null&amp;&amp;(kE[e].CustomName.Contains(Keyword)||kE[e].CustomData.Contains(Keyword))
&amp;&amp;!(kE[e].CustomName.Contains(kz)||kE[e].CustomData.Contains(kz))){kq.Add(kE[e]);}}return kq;}public
List&lt;IMyTerminalBlock&gt;li&lt;T&gt;(string lg=null)where T:class{if(kE.Count&lt;1)kL();var kq=new List&lt;IMyTerminalBlock&gt;();
for(int e=0;e&lt;kE.Count;e++){if(kE[e]is T&amp;&amp;Me.CubeGrid==kE[e].CubeGrid&amp;&amp;lg!=null&amp;&amp;(kE[e].CustomName.Contains(lg)
||kE[e].CustomData.Contains(lg))&amp;&amp;!(kE[e].CustomName.Contains(kz)||kE[e].CustomData.Contains(kz))){kq.Add(kE[e]);
}}return kq;}public List&lt;IMyTerminalBlock&gt;lj&lt;T&gt;(string lg=null)where T:class{if(kE.Count&lt;1)kL();var kq
=new List&lt;IMyTerminalBlock&gt;();for(int e=0;e&lt;kE.Count;e++){if(kE[e]is T&amp;&amp;kZ(kE[e])&amp;&amp;lg!=null&amp;&amp;kE[e].CustomName
==lg){kq.Add(kE[e]);}}return kq;}IMyTerminalBlock lk=null;string DefaultOrientationBlockInit(){string
sInitResults="";var centerSearch=new List&lt;IMyTerminalBlock&gt;();lf&lt;IMyTerminalBlock&gt;(ref centerSearch,
kB);if(centerSearch.Count==0){centerSearch=lh&lt;IMyRemoteControl&gt;(kA);if(centerSearch.Count==0){lf&lt;IMyRemoteControl&gt;(ref
centerSearch);if(centerSearch.Count==0){lf&lt;IMyCockpit&gt;(ref centerSearch);int i=0;for(;i&lt;centerSearch.Count;
i++){Echo("Checking Controller:"+centerSearch[i].CustomName);if(centerSearch[i]is IMyCryoChamber)continue;
break;}if(i&gt;=centerSearch.Count){sInitResults+="!!NO valid Controller";Echo("No Controller found");}
else{sInitResults+="S";Echo("Using good ship Controller: "+centerSearch[i].CustomName);}}else{sInitResults
+="R";Echo("Using First Remote control found: "+centerSearch[0].CustomName);}}}else{sInitResults+="N";
Echo("Using Named: "+centerSearch[0].CustomName);}if(centerSearch.Count&gt;0)lk=centerSearch[0];return sInitResults;
}string ln="!NAV";void lo(lO u){u.mq(kC,"GyroIgnore",ref ln,true);}double lp=0.9;int lq=3;int lr=-1;
IMyShipController ls;List&lt;IMyGyro&gt;lt;float lu=0.01f;bool lv(string lw){if(ls==null)lK();if(ls is IMyShipController)
{Vector3D lx=(ls as IMyShipController).GetNaturalGravity();return lv(lw,lx,lk);}else{Echo("No Controller for gravity");
}return true;}bool lv(string lw,Vector3D ly,IMyTerminalBlock lz){bool lA=true;if(ls==null)lK();Matrix
or;lz.Orientation.GetMatrix(out or);Vector3D lB;lw=lw.ToLower();if(lw.Contains("rocket"))lB=or.Backward;
else if(lw.Contains("up"))lB=or.Up;else if(lw.Contains("backward"))lB=or.Backward;else if(lw.Contains("forward"))
lB=or.Forward;else lB=or.Down;ly.Normalize();for(int i=0;i&lt;lt.Count;++i){var g=lt[i];g.Orientation.GetMatrix(out
or);var lC=Vector3D.Transform(lB,MatrixD.Transpose(or));var lD=Vector3D.Transform(ly,MatrixD.Transpose(g.WorldMatrix.GetOrientation()));
var lE=Vector3D.Cross(lC,lD);double lF=Vector3D.Dot(lC,lD);double lG=lE.Length();lG=Math.Atan2(lG,Math.Sqrt(Math.Max(0.0,
1.0-lG*lG)));if(lF&lt;0)lG=Math.PI-lG;if(lG&lt;lu){g.GyroOverride=false;continue;}float lH=g.GetMaximum&lt;float&gt;("Yaw");
double lI=lH*(lG/Math.PI)*lp;lI=Math.Min(lH,lI);lI=Math.Max(0.01,lI);lE.Normalize();lE*=lI;float bn=
-(float)lE.X;g.Pitch=bn;float bo=-(float)lE.Y;g.Yaw=bo;float lJ=-(float)lE.Z;g.Roll=lJ;g.GyroOverride
=true;lA=false;}return lA;}string lK(){string s="";var l=new List&lt;IMyTerminalBlock&gt;();ls=lk as IMyShipController;
if(ls==null){if(l.Count&lt;1)return"No RC!";}lN();GridTerminalSystem.GetBlocksOfType&lt;IMyGyro&gt;(l,x=&gt;x.CubeGrid
==lk.CubeGrid);var l2=new List&lt;IMyTerminalBlock&gt;();int lL=0;for(int i=0;i&lt;l.Count;i++){if(l[i].CustomName.Contains(ln)
||l[i].CustomData.Contains(ln)){lL++;continue;}l2.Add(l[i]);}lt=l2.ConvertAll(x=&gt;(IMyGyro)x);if(lq&gt;0)
if(lt.Count&gt;lq)lt.RemoveRange(lq,lt.Count-lq);else if((lr-lL)&gt;0){int lM=lt.Count-(lr-lL);lt.RemoveRange(lM,
(lr-lL));}lN();s+="GYRO#"+lt.Count.ToString("00")+"#";return s;}void lN(){if(lt!=null){for(int i=0;i
&lt;lt.Count;++i){lt[i].GyroOverride=false;lt[i].Enabled=true;}}}public class lO{Dictionary&lt;string,string&gt;
lP;Dictionary&lt;string,string[]&gt;lQ;Dictionary&lt;string,Dictionary&lt;string,string&gt;&gt;lR;char lS='[';char lT=
']';string lU="";MyGridProgram bH;string lV="";static string[]lW={"true","yes","on","1"};const StringComparison
lX=StringComparison.OrdinalIgnoreCase;const char lY='=';public bool lZ{get;private set;}=false;public
lO(MyGridProgram pg,string gK){bH=pg;lP=new Dictionary&lt;string,string&gt;();lQ=new Dictionary&lt;string,string[]&gt;();
lR=new Dictionary&lt;string,Dictionary&lt;string,string&gt;&gt;();ma(gK);}public int ma(string gK){gK.TrimEnd();
if(lV==gK){return lP.Count;}lP.Clear();lQ.Clear();lR.Clear();lU="";lZ=false;lV=gK;string[]mb=gK.Split('\n');
for(int mc=0;mc&lt;mb.Count();mc++){string md="";mb[mc].Trim();if(mb[mc].StartsWith(lS.ToString())){string
eu="";for(int me=1;me&lt;mb[mc].Length;me++)if(mb[mc][me]==lT)break;else eu+=mb[mc][me];if(eu!=""){md=eu.ToUpper();
}else continue;mc++;string mf="";var mg=new string[mb.Count()-mc];int mh=0;var mi=new Dictionary&lt;string,
string&gt;();for(;mc&lt;mb.Count();mc++){mb[mc].Trim();if(mb[mc].StartsWith(lS.ToString())){mc--;break;}mf
+=mb[mc]+"\n";mg[mh++]=mb[mc];if(mb[mc].Contains(lY)){string[]mj=mb[mc].Split('=');if(mj.Count()&gt;1){
string mk=mj[0];string ml="";for(int i1=1;i1&lt;mj.Count();i1++){ml+=mj[i1];if(i1+1&lt;mj.Count())ml+=lY;}
mi.Add(mk,ml);}}}lR.Add(md,mi);lQ.Add(md,mg);lP.Add(md,mf);}else{lU+=mb[mc]+"\n";}}return lP.Count;}
public string mm(string mn){string mf="";if(lP.ContainsKey(mn))mf=lP[mn];return mf;}public string[]mo(string
mn){string[]mp={""};if(lQ.ContainsKey(mn))mp=lQ[mn];return mp;}public bool mq(string mn,string mk,ref
string mr,bool ms=false){if(lR.ContainsKey(mn)){var mt=lR[mn];if(mt.ContainsKey(mk)){mr=mt[mk];return
true;}}if(ms)mD(mn,mk,mr);return false;}public bool mq(string mn,string mk,ref long mu,bool ms=false)
{string mv="";if(!mq(mn,mk,ref mv)){if(ms){mD(mn,mk,mu);}return false;}mu=Convert.ToInt64(mv);return
true;}public bool mq(string mn,string mk,ref int mw,bool ms=false){string mv="";if(!mq(mn,mk,ref mv))
{if(ms){mD(mn,mk,mw);}return false;}mw=Convert.ToInt32(mv);return true;}public bool mq(string mn,string
mk,ref double mx,bool ms=false){string mv="";if(!mq(mn,mk,ref mv)){if(ms){mD(mn,mk,mx);}return false;
}bool my=double.TryParse(mv,out mx);return true;}public bool mq(string mn,string mk,ref float mz,bool
ms=false){string mv="";if(!mq(mn,mk,ref mv)){if(ms){mD(mn,mk,mz.ToString());}return false;}bool my=float.TryParse(mv,
out mz);return true;}public bool mq(string mn,string mk,ref DateTime mA,bool ms=false){string mv="";
if(!mq(mn,mk,ref mv)){if(ms){mD(mn,mk,mA);}return false;}mA=DateTime.Parse(mv);return true;}public bool
mq(string mn,string mk,ref Vector3D mB,bool ms=false){string mv="";if(!mq(mn,mk,ref mv)){if(ms){mD(mn,
mk,mB);}return false;}double x1,y1,z1;gZ(mv,out x1,out y1,out z1);mB.X=x1;mB.Y=y1;mB.Z=z1;return true;
}public bool mq(string mn,string mk,ref bool mC,bool ms=false){string mv="";if(!mq(mn,mk,ref mv)){if
(ms){mD(mn,mk,mC);}return false;}mC=lW.Any(c=&gt;string.Equals(mv,c,lX));return true;}public bool mD(string
section,string key,string mv){if(lP.ContainsKey(section)){lP[section]="";}else{lP.Add(section,"");lZ
=true;}if(lR.ContainsKey(section)){var mi=new Dictionary&lt;string,string&gt;();var mt=lR[section];if(mt.ContainsKey(key))
{if(mt[key]==mv)return false;mt[key]=mv;}else{mt.Add(key,mv);}lZ=true;}else{var mi=new Dictionary&lt;string,
string&gt;();mi.Add(key,mv);lR.Add(section,mi);lZ=true;}return true;}public bool mD(string mn,string mk,
Vector3D mB){mD(mn,mk,gY(mB));return true;}public bool mD(string mn,string mk,bool mC){mD(mn,mk,mC.ToString());
return true;}public bool mD(string mn,string mk,int mE){mD(mn,mk,mE.ToString());return true;}public bool
mD(string mn,string mk,long mF){mD(mn,mk,mF.ToString());return true;}public bool mD(string mn,string
mk,DateTime mA){mD(mn,mk,mA.ToString());return true;}public bool mD(string mn,string mk,float mz){mD(mn,
mk,mz.ToString());return true;}public bool mD(string mn,string mk,double mx){mD(mn,mk,mx.ToString());
return true;}public void mG(string mn,string mf){mf.TrimEnd();mn=mn.ToUpper();if(lP.ContainsKey(mn))
{if(lP[mn]!=mf){lP[mn]=mf;lZ=true;}}else{lZ=true;lP.Add(mn,mf);}}public string mH(bool mI=true){string
mJ="";string s1=lU.Trim();if(s1!="")mJ=s1+"\n";foreach(var kv in lP){mJ+=lS+kv.Key.Trim()+lT+"\n";if
(kv.Value.TrimEnd()==""){string mK="";if(lR.ContainsKey(kv.Key)){foreach(var dk in lR[kv.Key]){mK+=dk.Key
+lY+dk.Value+"\n";}}mK+="\n";mJ+=mK;}else{mJ+=kv.Value.Trim()+"\n\n";}}if(mI){lZ=false;lV=mJ;}return
mJ;}bool gZ(string ha,out double x,out double y,out double z){string[]hb=ha.Trim().Split(',');if(hb.Length
&lt;3){hb=ha.Trim().Split(':');}x=0;y=0;z=0;if(hb.Length&lt;3)return false;bool hc=double.TryParse(hb[0].Trim(),
out x);bool hd=double.TryParse(hb[1].Trim(),out y);bool he=double.TryParse(hb[2].Trim(),out z);if(!hc
||!hd||!he){return false;}return true;}string gY(Vector3D v){string s;s=v.X.ToString("0.00")+":"+v.Y.ToString("0.00")
+":"+v.Z.ToString("0.00");return s;}}int mL=80;int mM=20;double mN=0;string sPowerSection="POWER";void
mP(lO iNIHolder){iNIHolder.mq(sPowerSection,"batterypcthigh",ref mL,true);iNIHolder.mq(sPowerSection,
"batterypctlow",ref mM,true);}void mQ(){mN=0;Echo("Init Reactors");gE();Echo("Init Solar");hi();Echo("Init Batteries");
E();if(gC&gt;0)mN+=gC;if(w&gt;0)mN+=w;}List&lt;IMyTerminalBlock&gt;mR=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
mS=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;mT=new List&lt;IMyTerminalBlock&gt;();List&lt;IMyTerminalBlock&gt;
mU=new List&lt;IMyTerminalBlock&gt;();string mV(IMyTerminalBlock bw){mR.Clear();mS.Clear();mT.Clear();mU.Clear();
for(int i=0;i&lt;mR.Count;i++){if(mR[i].CustomName.Contains("[SLED]")||mR[i].CustomData.Contains("[SLED]"))
{mS.Add(mR[i]);if(mR[i].CustomName.Contains("[REAR]")||mR[i].CustomData.Contains("[FRONT]")){mT.Add(mR[i]);
}if(mR[i].CustomName.Contains("[FRONT]")||mR[i].CustomData.Contains("[FRONT]")){mU.Add(mR[i]);}}}return
"W"+mR.Count.ToString("0")+"WS"+mS.Count.ToString("0")+"SR"+mT.Count.ToString("0")+"SF"+mU.Count.ToString("0");
}</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>105021705212953232</EntityId>
              <Min x="0" y="8" z="9" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.2" y="-0.22" z="-0.45" />
              <BuiltBy>144115188075855898</BuiltBy>
              <CustomName>Wico Craft Save</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription>[WCCM2]
Mode=0
current_state=0
PassedArgument=
AlertStates=0
craft_operation=2
ReceivedMessage=
SaveID=105021705212953232

[NAV]
vTarget=0.00:0.00:0.00
ValidNavTarget=False
dStartShip=01/01/0001 00:00:00

</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SensorBlock">
              <SubtypeName>SmallBlockSensor</SubtypeName>
              <EntityId>115671850007425294</EntityId>
              <Min x="0" y="9" z="9" />
              <ColorMaskHSV x="0.2" y="-0.22" z="-0.45" />
              <BuiltBy>144115188075855898</BuiltBy>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">[WICO]

</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Sensor</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <FieldMin x="-1" y="-1" z="-1" />
              <FieldMax x="1" y="1" z="1" />
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <PlaySound>true</PlaySound>
              <DetectPlayers>true</DetectPlayers>
              <DetectFloatingObjects>false</DetectFloatingObjects>
              <DetectSmallShips>false</DetectSmallShips>
              <DetectLargeShips>false</DetectLargeShips>
              <DetectStations>false</DetectStations>
              <DetectSubgrids>false</DetectSubgrids>
              <IsActive>true</IsActive>
              <DetectAsteroids>false</DetectAsteroids>
              <DetectOwner>true</DetectOwner>
              <DetectFriendly>true</DetectFriendly>
              <DetectNeutral>true</DetectNeutral>
              <DetectEnemy>true</DetectEnemy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="9" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="7" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="8" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="8" z="9" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="7" z="7" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="7" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="8" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="8" z="8" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="9" z="8" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="9" z="8" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="8" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="8" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.575" y="-0.8" z="0.61" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="7" z="8" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="8" z="8" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="0" y="9" z="8" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="0" y="8" z="7" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.594444454" y="0.11" z="-0.34" />
              <BuiltBy>144115188075855898</BuiltBy>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.0124645066" y="0.06419162" z="0.005040324" />
          <AngularVelocity x="-0.00117172126" y="0.000264507777" z="9.466593E-05" />
          <XMirroxPlane x="0" y="8" z="8" />
          <ConveyorLines>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="8" z="13" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="8" z="14" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
          </ConveyorLines>
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>Thrust Forward</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>8</Y>
                  <Z>19</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>Small Hover Transport</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>106754594244509558</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="10130.620867918948" y="60356.066977587165" z="4912.927824990662" />
            <Forward x="-0.247153848" y="0.9675862" z="0.0518787242" />
            <Up x="-0.0282433555" y="-0.06071061" z="0.997755468" />
            <Orientation>
              <X>0.721310258</X>
              <Y>0.07517245</Y>
              <Z>0.100333616</Z>
              <W>0.6811709</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>136674028026031436</EntityId>
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.0008968748" y="-0.00020306278" z="0.0008473111" />
          <AngularVelocity x="0.00126481371" y="-0.000113816786" z="-0.00136590854" />
          <DisplayName>Small Grid 5906</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>98737861261466072</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="10131.897082518557" y="60356.452406969489" z="4907.7258672880253" />
            <Forward x="0.05796463" y="0.9963736" z="0.06228751" />
            <Up x="0.02824564" y="0.0607307553" z="-0.9977544" />
            <Orientation>
              <X>0.030157527</X>
              <Y>0.7281719</Y>
              <Z>-0.684635043</Z>
              <W>-0.01144704</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>122223308090973455</EntityId>
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="7.46396836E-07" y="-9.848131E-05" z="0.002182222" />
          <AngularVelocity x="-0.000324051" y="0.000147899977" z="-3.5715093E-05" />
          <DisplayName>Small Grid 2832</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>119244891975756464</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="10133.566317748049" y="60355.498644915046" z="4912.9765691923221" />
            <Forward x="-0.24653548" y="0.967746735" z="0.05183061" />
            <Up x="-0.028314665" y="-0.06065113" z="0.9977573" />
            <Orientation>
              <X>0.721318543</X>
              <Y>0.0749323443</Y>
              <Z>0.100125521</Z>
              <W>0.681219161</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>76201223812669558</EntityId>
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-5.66830859E-05" y="2.40942463E-05" z="0.00114445621" />
          <AngularVelocity x="0.001673456" y="-0.0002293433" z="8.960361E-05" />
          <DisplayName>Small Grid 5367</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>121016325629814113</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="10134.614566039065" y="60355.845084276618" z="4910.7725935148319" />
            <Forward x="-0.213719845" y="0.975435734" z="0.0533731654" />
            <Up x="0.028256245" y="0.0607853457" z="-0.997750759" />
            <Orientation>
              <X>-0.0634463</X>
              <Y>0.7229531</Y>
              <Z>-0.6823357</Z>
              <W>0.0879286155</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>141156404408062612</EntityId>
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00013288355" y="-2.7322676E-05" z="0.001134879" />
          <AngularVelocity x="0.001670404" y="-0.000293397927" z="0.0001888313" />
          <DisplayName>Small Grid 7256</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>79429597985709246</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="10131.671313475588" y="60356.417643633307" z="4910.72411634198" />
            <Forward x="-0.211965561" y="0.97581774" z="0.05338449" />
            <Up x="0.0282439664" y="0.06072014" z="-0.997755" />
            <Orientation>
              <X>-0.0628407449</X>
              <Y>0.7230099</Y>
              <Z>-0.6824157</Z>
              <W>0.08727306</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>138874447227176011</EntityId>
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.000221408438" y="-5.365163E-05" z="0.0011993337" />
          <AngularVelocity x="0.0017602212" y="-0.000155579881" z="-0.00032988083" />
          <DisplayName>Small Grid 5542</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>121219931528337844</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="10134.75982971094" y="60355.95075902027" z="4907.7763815092167" />
            <Forward x="-0.0997417942" y="0.9933423" z="0.0576411225" />
            <Up x="0.0282460116" y="0.0607334636" z="-0.9977542" />
            <Orientation>
              <X>-0.0239553824</X>
              <Y>0.7268058</Y>
              <Z>-0.6848792</Z>
              <W>0.0460430533</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>132879138246660467</EntityId>
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855898</BuiltBy>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.000350563321" y="-4.76706773E-05" z="0.00177727011" />
          <AngularVelocity x="0.000314548757" y="-6.84623446E-05" z="0.00142382493" />
          <DisplayName>Small Grid 4208</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
      </CubeGrids>
    </Prefab>
  </Prefabs>
</Definitions>